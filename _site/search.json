[
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html",
    "title": "Take-Home Exercise 1",
    "section": "",
    "text": "Using appropriate function of sf and tidyverse, preparing the following geospatial data layer in sf tibble data.frames:\n\n\nGrab taxi location points either by origins or destinations.\nRoad layer within Singapore excluding outer islands.\nSingapore boundary layer excluding outer islands\n\n\nUsing the extracted data, derive traditional Kernel Density Estimation layers.\nUsing the extracted data, derive either Network Kernel Density Estimation (NKDE) or Temporal Network Kernel Density Estimation (TNKDE) Using appropriate tmap functions, display the kernel density layers on OpenStreetMaps of Singapore.\nDescribe the spatial patterns revealed by the kernel density maps.\n\n\n\n\n\nThis exercise seems quite straightforward, but I think that some genuinely useful information can be derived from this data. While removing the outer islands can be done fairly easily, I think that other small issues, like holes in the geometry will need to be fixed.\nNKDE may also require very long computation times for large areas, especially given the magnitude of the entire dataset. The GrabPosisi dataset’s journey start and destination locations likely occur along smaller roads where people can walk. These small roads are likely near other small roads, which will greatly increase the number of affect lixels for every NKDE operation. Since these small roads will have the most interesting data, I will have to scale down my analysis to smaller locations determined by the simpler KDE analysis."
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#overview",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#overview",
    "title": "Take-Home Exercise 1",
    "section": "",
    "text": "Using appropriate function of sf and tidyverse, preparing the following geospatial data layer in sf tibble data.frames:\n\n\nGrab taxi location points either by origins or destinations.\nRoad layer within Singapore excluding outer islands.\nSingapore boundary layer excluding outer islands\n\n\nUsing the extracted data, derive traditional Kernel Density Estimation layers.\nUsing the extracted data, derive either Network Kernel Density Estimation (NKDE) or Temporal Network Kernel Density Estimation (TNKDE) Using appropriate tmap functions, display the kernel density layers on OpenStreetMaps of Singapore.\nDescribe the spatial patterns revealed by the kernel density maps.\n\n\n\n\n\nThis exercise seems quite straightforward, but I think that some genuinely useful information can be derived from this data. While removing the outer islands can be done fairly easily, I think that other small issues, like holes in the geometry will need to be fixed.\nNKDE may also require very long computation times for large areas, especially given the magnitude of the entire dataset. The GrabPosisi dataset’s journey start and destination locations likely occur along smaller roads where people can walk. These small roads are likely near other small roads, which will greatly increase the number of affect lixels for every NKDE operation. Since these small roads will have the most interesting data, I will have to scale down my analysis to smaller locations determined by the simpler KDE analysis."
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#setup",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#setup",
    "title": "Take-Home Exercise 1",
    "section": "2.0 Setup",
    "text": "2.0 Setup\n\n2.1 Dependencies\nAside from the tools used in class, I also included some additional tools I found useful.\n\nTaught in class:\n\nTidyverse: An extensive set of tools for geospatial analysis, a staple for most tasks\nsf: I also cannot imagine a geospatial task without simple features\ntmap: Used to generate thematic maps\nmaptools: Used to handle spatial objects\nspatstat: Just recently used in the hands-on exercises for this week. Useful for spatial point analysis\nspNetwork: For spatial analysis on networks, we’ll use this for NKDE and TNKDE\nclassInt: For choosing univariate class intervals\nviridis: COLORS! These will help us create more interesting and colorful maps to communicate our ideas\narrow: We need this to work with parquet files and to load the GrabPosisi dataset\n\n\n\nExploration\n\nstringr: The Description field in kml files is not very convenient for us. It’s an HTML table, meaning we need to parse it to get each variable into a column compatible for our use\nsmoothr: The MPSZ2019 polygons have small holes, so I use this library to fix them before they cause issues\nRColorBrewer: Used to create alternative NKDE and TNKDE visualisation which I found to work better than those that only change the color of the lines of the network\ngifski: To animate our TNKDE results\n\n\npacman::p_load(tidyverse, sf, tmap, maptools, spatstat, spNetwork, classInt, viridis, smoothr, arrow, stringr, RColorBrewer, gifski)\n\n\n\n\n2.2 Datasets\n\nAspatial data\n\nGrab-Posisi Singapore dataset\n\n\n\nGeospatial data\n\nRoad data set from Geofabrik’s OpenStreetMap.\n\n\nAlthough the dataset includes all of Malaysia, Singapore, and Brunei, only Singapore’s data will required.\n\n\nMaster Plan 2019 Subzone Boundary (No Sea) from Data.gov.sg."
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#data-wrangling",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#data-wrangling",
    "title": "Take-Home Exercise 1",
    "section": "3.0 Data Wrangling",
    "text": "3.0 Data Wrangling\n\n3.1 Importing Aspatial Data\n\nReading the Grab-Posisi Parquet Files\nI’m glad this function from the arrow library exists to load every split parquet file instead of having to loop and append each file to a single object.\n\ngrabp &lt;- open_dataset(\"data/aspatial/GrabPosisi/\") %&gt;% as.data.frame()\n\n\n\n\n3.2 Importing Spatial Data\n\nReading the Master Plan Subzone dataset\nUsing st_read is a standard way to import the data in kml files, but there’s a very apparent problem.\nThe description field, when not rendered, is a monstrous chunk of HTML where none of the fields are easy to use. We’ll need to split this up so that we can scope down our analysis later to interesting areas. There are no public roads in the jungle after all.\n\nmpsz = st_read(\"data/geospatial/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/TakeHomeEx/TakeHomeEx1/data/geospatial/MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nmpsz$Description[1]\n\n[1] \"&lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\\\"#E3E3F3\\\"&gt; &lt;th&gt;SUBZONE_NO&lt;/th&gt; &lt;td&gt;12&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\\\"\\\"&gt; &lt;th&gt;SUBZONE_N&lt;/th&gt; &lt;td&gt;DEPOT ROAD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\\\"#E3E3F3\\\"&gt; &lt;th&gt;SUBZONE_C&lt;/th&gt; &lt;td&gt;BMSZ12&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\\\"\\\"&gt; &lt;th&gt;CA_IND&lt;/th&gt; &lt;td&gt;N&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\\\"#E3E3F3\\\"&gt; &lt;th&gt;PLN_AREA_N&lt;/th&gt; &lt;td&gt;BUKIT MERAH&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\\\"\\\"&gt; &lt;th&gt;PLN_AREA_C&lt;/th&gt; &lt;td&gt;BM&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\\\"#E3E3F3\\\"&gt; &lt;th&gt;REGION_N&lt;/th&gt; &lt;td&gt;CENTRAL REGION&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\\\"\\\"&gt; &lt;th&gt;REGION_C&lt;/th&gt; &lt;td&gt;CR&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\\\"#E3E3F3\\\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;C22DED671DE2A940&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\\\"\\\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20191223152313&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\"\n\n\nI found a concise and performant solution here to parse this mess of HTML.\nhttps://www.linkedin.com/pulse/r-using-stringr-extract-information-from-html-tags-kml-melvin-kew/\n\nmpsz &lt;- mpsz %&gt;% \n  mutate(Match=str_match_all(Description,\"&lt;td&gt;(.*?)&lt;/td&gt;\")) %&gt;% \n  mutate(Match=map(Match, ~ .[,2])) %&gt;% \n  mutate(Match=map(Match,setNames,c(\"SUBZONE_NO\",\"SUBZONE_N\",\"SUBZONE_C\", \"CA_IND\", \"PLN_AREA_N\", \"PLN_AREA_C\", \"REGION_N\", \"REGION_C\", \"INC_CRC\", \"FMEL_UPD_D\"))) %&gt;% \n  unnest_wider(Match) %&gt;%\n  st_as_sf()\n\nAfter splitting the description into columns, I can drop the Description and other fields I will not be using. Although the planning areas should suffice, having region and subzone names available does not consume a lot of memory and may be useful later on.\n\nsummary(mpsz)\n\n     Name           Description                  geometry    SUBZONE_NO       \n Length:332         Length:332         MULTIPOLYGON  : 11   Length:332        \n Class :character   Class :character   MULTIPOLYGON Z:321   Class :character  \n Mode  :character   Mode  :character   epsg:4326     :  0   Mode  :character  \n                                       +proj=long... :  0                     \n  SUBZONE_N          SUBZONE_C            CA_IND           PLN_AREA_N       \n Length:332         Length:332         Length:332         Length:332        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n  PLN_AREA_C          REGION_N           REGION_C           INC_CRC         \n Length:332         Length:332         Length:332         Length:332        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n  FMEL_UPD_D       \n Length:332        \n Class :character  \n Mode  :character  \n                   \n\nmpsz &lt;- mpsz %&gt;% dplyr::select('Name', 'geometry', 'SUBZONE_NO', 'SUBZONE_N', 'PLN_AREA_N', 'PLN_AREA_C', 'REGION_N', 'REGION_C')\nsummary(mpsz)\n\n     Name                     geometry    SUBZONE_NO         SUBZONE_N        \n Length:332         MULTIPOLYGON  : 11   Length:332         Length:332        \n Class :character   MULTIPOLYGON Z:321   Class :character   Class :character  \n Mode  :character   epsg:4326     :  0   Mode  :character   Mode  :character  \n                    +proj=long... :  0                                        \n  PLN_AREA_N         PLN_AREA_C          REGION_N           REGION_C        \n Length:332         Length:332         Length:332         Length:332        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n\n\n\nlength(which(st_is_valid(mpsz) == FALSE))\n\n[1] 6\n\nmpsz[which(st_is_valid(mpsz) == FALSE), ]\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.7098 ymin: 1.212326 xmax: 104.0885 ymax: 1.440698\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n# A tibble: 6 × 8\n  Name                       geometry SUBZONE_NO SUBZONE_N PLN_AREA_N PLN_AREA_C\n  &lt;chr&gt;            &lt;MULTIPOLYGON [°]&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;     \n1 kml_30  (((103.8591 1.22068, 103.8… 2          SOUTHERN… SOUTHERN … SI        \n2 kml_31  (((103.8232 1.257481, 103.… 1          SENTOSA   SOUTHERN … SI        \n3 kml_35  Z (((103.8236 1.260178 0, … 1          MARITIME… BUKIT MER… BM        \n4 kml_59  Z (((103.9321 1.305548 0, … 7          SIGLAP    BEDOK      BD        \n5 kml_109 (((103.7119 1.29961, 103.7… 10         JURONG P… JURONG EA… JE        \n6 kml_318 (((104.0541 1.432306, 104.… 1          NORTH-EA… NORTH-EAS… NE        \n# ℹ 2 more variables: REGION_N &lt;chr&gt;, REGION_C &lt;chr&gt;\n\nmpsz &lt;- st_make_valid(mpsz)\nmpsz &lt;- st_zm(mpsz)\n\n\n\nImporting the OpenStreetMaps dataset\n\nosm = st_read(\"data/geospatial/osm.shp.zip\", layer=\"gis_osm_roads_free_1\")\n\nReading layer `gis_osm_roads_free_1' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/TakeHomeEx/TakeHomeEx1/data/geospatial/osm.shp.zip' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1763129 features and 10 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 99.66041 ymin: 0.8021131 xmax: 119.2601 ymax: 7.514393\nGeodetic CRS:  WGS 84\n\n\n\n\n\n3.2 Wrangling\n\nGrabPosisi conversion to spatial data\nThe GrabPosisi dataset consists of many points for each journey, represented with latitudes and longitudes. There are also many other fields representing speed and direction of the vehicle. We only need to know about the start and end locations.\n\nhead(grabp)\n\n# A tibble: 6 × 9\n  trj_id driving_mode osname  pingtimestamp rawlat rawlng speed bearing accuracy\n  &lt;chr&gt;  &lt;chr&gt;        &lt;chr&gt;           &lt;int&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;   &lt;int&gt;    &lt;dbl&gt;\n1 70014  car          android    1554943236   1.34   104.  18.9     248      3.9\n2 73573  car          android    1555582623   1.32   104.  17.7      44      4  \n3 75567  car          android    1555141026   1.33   104.  14.0      34      3.9\n4 1410   car          android    1555731693   1.26   104.  13.0     181      4  \n5 4354   car          android    1555584497   1.28   104.  14.8      93      3.9\n6 32630  car          android    1555395258   1.30   104.  23.2      73      3.9\n\n\nThe easiest thing to fix first is the timestamp. Doing so will allow us to find the first and last points of a journey easily. We also need to make sure that we account for timezones properly here, since the timestamps written as a time since the epoch.\n\ngrabp$pingtimestamp &lt;- as_datetime(grabp$pingtimestamp, tz = \"Asia/Singapore\")\n\nNow we convert the timestamp into weekdays, hours and days. This will help us temporally constrain our data later on.\nWe also convert the latitudes and longitudes to the SVY21 CRS system to give our task a standardised projection system.\n\norigin_df &lt;- grabp %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(pingtimestamp) %&gt;%\n  filter(row_number()==1) %&gt;%\n  mutate(weekday = wday(pingtimestamp,\n                        label=TRUE,\n                        abbr=TRUE),\n         start_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp))) %&gt;%\n  st_as_sf(coords = c(\"rawlng\", \"rawlat\"),\n                      crs = 4326) %&gt;%\n  st_transform(crs = 3414)\n\ndestination_df &lt;- grabp %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(desc(pingtimestamp)) %&gt;%\n  filter(row_number()==1) %&gt;%\n  mutate(weekday = wday(pingtimestamp,\n                        label=TRUE,\n                        abbr=TRUE),\n         end_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp))) %&gt;%\n  st_as_sf(coords = c(\"rawlng\", \"rawlat\"),\n                      crs = 4326) %&gt;%\n  st_transform(crs = 3414)\n\nhead(origin_df)\n\nSimple feature collection with 6 features and 10 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 17201.85 ymin: 29236.55 xmax: 31518.05 ymax: 47967.97\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 11\n# Groups:   trj_id [6]\n  trj_id driving_mode osname pingtimestamp        speed bearing accuracy weekday\n  &lt;chr&gt;  &lt;chr&gt;        &lt;chr&gt;  &lt;dttm&gt;               &lt;dbl&gt;   &lt;int&gt;    &lt;dbl&gt; &lt;ord&gt;  \n1 70895  car          andro… 2019-04-08 08:09:26  9.95      111      4   Mon    \n2 21926  car          andro… 2019-04-08 08:09:48 11.0        75      4   Mon    \n3 47498  car          ios    2019-04-08 08:09:50 18.6       307      8   Mon    \n4 18103  car          andro… 2019-04-08 08:09:55  0.404     159      3   Mon    \n5 41322  car          andro… 2019-04-08 08:09:57 17.9       232      3.9 Mon    \n6 64813  car          ios    2019-04-08 08:10:03 17.1       106     10   Mon    \n# ℹ 3 more variables: start_hr &lt;fct&gt;, day &lt;fct&gt;, geometry &lt;POINT [m]&gt;\n\nhead(destination_df)\n\nSimple feature collection with 6 features and 10 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14101.2 ymin: 33097.49 xmax: 44192.98 ymax: 46866.96\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 11\n# Groups:   trj_id [6]\n  trj_id driving_mode osname  pingtimestamp       speed bearing accuracy weekday\n  &lt;chr&gt;  &lt;chr&gt;        &lt;chr&gt;   &lt;dttm&gt;              &lt;dbl&gt;   &lt;int&gt;    &lt;dbl&gt; &lt;ord&gt;  \n1 81574  car          ios     2019-04-22 07:56:49 15.3      103     8    Mon    \n2 54687  car          android 2019-04-22 07:56:46  8.15     299     4.55 Mon    \n3 17190  car          android 2019-04-22 07:56:36 12.4      202     4    Mon    \n4 13793  car          android 2019-04-22 07:56:30  6.47     170     3.9  Mon    \n5 39014  car          ios     2019-04-22 07:56:27  3.59     169     4    Mon    \n6 41170  car          ios     2019-04-22 07:56:13 13.1       71     5    Mon    \n# ℹ 3 more variables: end_hr &lt;fct&gt;, day &lt;fct&gt;, geometry &lt;POINT [m]&gt;\n\n\nAfter converting some of our data and reducing it to only the trip starts and ends, we can drop the unused columns.\n\norigin_df &lt;- origin_df %&gt;% dplyr::select('trj_id', 'pingtimestamp', 'geometry', 'weekday', 'start_hr', 'day', 'geometry')\ndestination_df &lt;- destination_df %&gt;% dplyr::select('trj_id', 'pingtimestamp', 'geometry', 'weekday', 'end_hr', 'day', 'geometry')\n\nThis was a massive task in terms of computer memory. To make sure we don’t have to do this again, we can save the objects into .rds files. I would consider this an advantage over using Python.\n\nwrite_rds(origin_df, \"data/rds/origin.rds\")\nwrite_rds(destination_df, \"data/rds/destination.rds\")\n\n\ndestination_df &lt;- read_rds(\"data/rds/destination.rds\")\norigin_df &lt;- read_rds(\"data/rds/origin.rds\")\n\n\n\nOpenStreetMaps reduction\nThere were many of ‘fclass’ values on the OpenStreetMaps documentation and I was not sure all of them existed in our dataset. It turns out that although there were more than expected, I can ‘whitelist’ some those that are definitely roads.\nI found out about what each class meant from their documentation. https://www.geofabrik.de/data/geofabrik-osm-gis-standard-0.3.pdf\nThis was great since I had no idea what a Bridleway was.\n\nsummary(osm)\n\n    osm_id               code         fclass              name          \n Length:1763129     Min.   :5111   Length:1763129     Length:1763129    \n Class :character   1st Qu.:5122   Class :character   Class :character  \n Mode  :character   Median :5141   Mode  :character   Mode  :character  \n                    Mean   :5132                                        \n                    3rd Qu.:5141                                        \n                    Max.   :5199                                        \n     ref               oneway             maxspeed           layer         \n Length:1763129     Length:1763129     Min.   :  0.000   Min.   :-5.00000  \n Class :character   Class :character   1st Qu.:  0.000   1st Qu.: 0.00000  \n Mode  :character   Mode  :character   Median :  0.000   Median : 0.00000  \n                                       Mean   :  3.148   Mean   : 0.02991  \n                                       3rd Qu.:  0.000   3rd Qu.: 0.00000  \n                                       Max.   :110.000   Max.   : 5.00000  \n    bridge             tunnel                   geometry      \n Length:1763129     Length:1763129     LINESTRING   :1763129  \n Class :character   Class :character   epsg:4326    :      0  \n Mode  :character   Mode  :character   +proj=long...:      0  \n                                                              \n                                                              \n                                                              \n\nunique(osm$fclass)\n\n [1] \"primary\"        \"secondary\"      \"residential\"    \"service\"       \n [5] \"track\"          \"tertiary\"       \"footway\"        \"primary_link\"  \n [9] \"motorway_link\"  \"tertiary_link\"  \"motorway\"       \"unclassified\"  \n[13] \"trunk\"          \"trunk_link\"     \"secondary_link\" \"pedestrian\"    \n[17] \"living_street\"  \"path\"           \"steps\"          \"cycleway\"      \n[21] \"track_grade2\"   \"track_grade4\"   \"track_grade1\"   \"track_grade3\"  \n[25] \"unknown\"        \"track_grade5\"   \"bridleway\"     \n\n\nOf the above fclasses, these ones are definitely roads. We will keep them in our dataset.\n\nvalues_to_keep &lt;- c(\"primary\", \"secondary\", \"residential\", \"service\", \"tertiary\", \"primary_link\", \"motorway\", \"motorway_link\", \"tertiary_link\", \"living_street\", \"trunk\", \"trunk_link\")\n\nosm &lt;- osm[osm$fclass %in% values_to_keep, ]\n\nFrom this, we have confirmed that we have dropped the unnecessary fclasses and greatly reduced the size of our data. However, to geographically constrain this dataset to Singapore, we need to process the MasterPlanSubzone data.\n\nsummary(osm)\n\n    osm_id               code         fclass              name          \n Length:1417871     Min.   :5111   Length:1417871     Length:1417871    \n Class :character   1st Qu.:5122   Class :character   Class :character  \n Mode  :character   Median :5132   Mode  :character   Mode  :character  \n                    Mean   :5131                                        \n                    3rd Qu.:5141                                        \n                    Max.   :5141                                        \n     ref               oneway             maxspeed           layer         \n Length:1417871     Length:1417871     Min.   :  0.000   Min.   :-5.00000  \n Class :character   Class :character   1st Qu.:  0.000   1st Qu.: 0.00000  \n Mode  :character   Mode  :character   Median :  0.000   Median : 0.00000  \n                                       Mean   :  3.665   Mean   : 0.02351  \n                                       3rd Qu.:  0.000   3rd Qu.: 0.00000  \n                                       Max.   :110.000   Max.   : 5.00000  \n    bridge             tunnel                   geometry      \n Length:1417871     Length:1417871     LINESTRING   :1417871  \n Class :character   Class :character   epsg:4326    :      0  \n Mode  :character   Mode  :character   +proj=long...:      0  \n                                                              \n                                                              \n                                                              \n\nunique(osm$fclass)\n\n [1] \"primary\"       \"secondary\"     \"residential\"   \"service\"      \n [5] \"tertiary\"      \"primary_link\"  \"motorway_link\" \"tertiary_link\"\n [9] \"motorway\"      \"trunk\"         \"trunk_link\"    \"living_street\"\n\n\nFor our purposes, the road data will only need to serve as a network, without all of the extra data. However, osm_id fclass may be useful later on and are relatively small. We can keep them.\n\nosm &lt;- osm %&gt;% dplyr::select('osm_id', 'fclass')\n\n\n\n\n3.3 CRS Adjustments and Verification\n\nOpenStreetMaps and MasterPlanSubzone CRS\nIt’s now time to go a bit deeper with the data wrangling now that the size of our data has decreased. First thing to do is to check the CRS for the MPSZ and OpenStreetMaps data since we have not already done so.\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\nst_crs(osm)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\nLike in the previous exercises, the CRS for these are not SVY21. We will change them since GovTech is yet to do so.\n\nosm &lt;- st_transform(osm, crs = 3414)\nmpsz &lt;- st_transform(mpsz, crs = 3414)\n\n\n\nDealing with MPSZ z-coordinates and invalid geometry\nTo prevent issues with invalid geometry causing issues later on, we can apply a quick fix here.\n\nlength(which(st_is_valid(mpsz) == FALSE))\n\n[1] 0\n\nmpsz[which(st_is_valid(mpsz) == FALSE), ]\n\nSimple feature collection with 0 features and 7 fields\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 0 × 8\n# ℹ 8 variables: Name &lt;chr&gt;, geometry &lt;GEOMETRY [m]&gt;, SUBZONE_NO &lt;chr&gt;,\n#   SUBZONE_N &lt;chr&gt;, PLN_AREA_N &lt;chr&gt;, PLN_AREA_C &lt;chr&gt;, REGION_N &lt;chr&gt;,\n#   REGION_C &lt;chr&gt;\n\nmpsz &lt;- st_make_valid(mpsz)\nmpsz &lt;- st_zm(mpsz)\n\nA quick check confirms that the CRS has been changed successfully to SVY21\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nst_crs(osm)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n\n3.4 Singapore Boundaries\nFrom this plot, I realised that there were more islands than I thought surrounding Singapore.\n\nplot(st_geometry(mpsz))\n\n\n\n\n\n\n\n\nBased on the above plot, it became apparent that I needed to define what an “Outer Island” meant in relation to our task.\n\nOuter Island Definition\nAn island in Singapore inaccessible by road\nTherefore, Coney Island, Jurong Island and Sentosa are not outer islands.\nPulau Ubin and Pulau Tekong are examples of outer islands.\nTo remove the islands, I discovered a trick. After using st_union, st_cast can be used to split disconnected polygons in the larger multipolygon. I then choose the largest one (the mainland). Fortunately, the bridges to Serangoon island were enough to stick the whole of road-accessible Singapore together while excluding areas like Tekong.\nWe can also use fill_holes to remove any gaps in geometry.\nAfter this process, we are left with a clean outline of Singapore!\n\n\nOuter Island Removal and Hole Fixing\n\nOriginalMerged\n\n\n\nmerged_sg &lt;- st_union(mpsz) %&gt;%\n    st_cast(\"POLYGON\")\n\nmerged_sg &lt;- merged_sg[c(10)]\nmerged_sg &lt;- fill_holes(merged_sg, units::set_units(1, \"km^2\"))\nmerged_sg &lt;- st_as_sf(merged_sg)\npar(mfrow=c(1,2))\n\nplot(st_geometry(mpsz))\n\n\n\n\n\n\n\n\n\n\n\nplot(st_geometry(merged_sg))\n\n\n\n\n\n\n\n\n\n\n\n\n\nApplying the outline\nWith the outline, we can create an owin object to constrain our ppp objects later for KDE! We will save it to save us processing time later on.\n\nmerged_st &lt;- as_Spatial(merged_sg)\nmerged_sg_sp &lt;- as(merged_st, \"SpatialPolygons\")\nmerged_sg_owin &lt;- as(merged_sg_sp, \"owin\")\n\nwrite_rds(merged_sg_owin, \"data/rds/merged_sg_owin.rds\")\n\n\nmerged_sg_owin &lt;- read_rds(\"data/rds/merged_sg_owin.rds\")\n\nNow we use the outline to remove the massive amount of data on Malaysian and Bruneian roads.\n\nosm_sg &lt;- st_intersection(osm, merged_sg)\n\nAn unexpected complication found here was that some geometry in OpenStreetMaps was saved as MULTILINESTRINGs. While this would be intuitive sometimes, it caused issues with KDE calculation. Here, I split each MULTILNESTRING into several LINESTRINGs.\nAfter this processing, I save the result\n\nsummary(osm_sg)\n\n    osm_id             fclass                     geometry     \n Length:157777      Length:157777      LINESTRING     :157720  \n Class :character   Class :character   MULTILINESTRING:    57  \n Mode  :character   Mode  :character   epsg:3414      :     0  \n                                       +proj=tmer...  :     0  \n\nosm_sg &lt;- st_cast(st_cast(osm_sg, \"MULTILINESTRING\"),\"LINESTRING\")\nsummary(osm_sg)\n\n    osm_id             fclass                   geometry     \n Length:157836      Length:157836      LINESTRING   :157836  \n Class :character   Class :character   epsg:3414    :     0  \n Mode  :character   Mode  :character   +proj=tmer...:     0  \n\nwrite_rds(osm_sg, \"data/rds/osm_sg.rds\")\n\n\nosm_sg &lt;- read_rds(\"data/rds/osm_sg.rds\")\n\n\n\nppp Format\nTo prepare our the data on trip starts and ends, we convert them into ppp objects.\n\norigin &lt;- as_Spatial(origin_df)\ndestination &lt;- as_Spatial(destination_df)\n\norigin_sp &lt;- as(origin, \"SpatialPoints\")\ndestination_sp &lt;- as(destination, \"SpatialPoints\")\n\norigin_ppp &lt;- as(origin_sp, \"ppp\")\ndestination_ppp &lt;- as(destination_sp, \"ppp\")\n\nUsing our previously prepared owin objects, we can constrain these points to only Singapore, in case any of the data was strangely placed outside of our borders.\nThis happened for 3 destinations. Regardless of whether these were caused by inaccuracy due to GPS drift near the coast or otherwise, the loss of these 3 points should not influence our downstream analysis by much. As such, it can be deemed an acceptable loss due to erring on the side of caution.\n\nsummary(destination_ppp)\n\nPlanar point pattern:  28000 points\nAverage intensity 2.493661e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [3637.21, 49870.63] x [25221.3, 49507.79] units\n                    (46230 x 24290 units)\nWindow area = 1122850000 square units\n\n\n\norigin_ppp &lt;- origin_ppp[merged_sg_owin]\ndestination_ppp &lt;- destination_ppp[merged_sg_owin]\n\n\nsummary(destination_ppp)\n\nPlanar point pattern:  27997 points\nAverage intensity 3.99481e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\nsingle connected closed polygon with 15268 vertices\nenclosing rectangle: [2667.54, 51404.13] x [21448.48, 50256.33] units\n                     (48740 x 28810 units)\nWindow area = 700834000 square units\nFraction of frame area: 0.499\n\n\n\n\nChecking for duplicates\nFortunately, no duplicates were detected in our dataset.\n\nany(duplicated(origin_ppp))\n\n[1] FALSE\n\nany(duplicated(destination_ppp))\n\n[1] FALSE\n\n\n\n\n\n3.5 Simple Visualisations\nFrom these plots, we can tell that naive methods of checking for patterns in spatial points does not work very well with large datasets. This is when we use KDE.\n\nplot(origin_ppp)\n\n\n\n\n\n\n\nplot(destination_ppp)"
  },
  {
    "objectID": "InClassEx/ICE2/ICE2.html#setup",
    "href": "InClassEx/ICE2/ICE2.html#setup",
    "title": "In-Class Exercise 2",
    "section": "2.0 Setup",
    "text": "2.0 Setup\n\n2.1 Dependencies\n\narrow\nlubridate\ntidyverse\ntmap\nsf\n\n\npacman::p_load(arrow, lubridate, tidyverse, sf, tmap)\n\n\n\n2.2 Importing Data\n\nRead the first parquet files\n\n# eval: FALSE - Show the code without evaluating\ndf &lt;- read_parquet(\"data/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\n\n\n\nImport Master Plan 2019 Planning Subzone Boundary\n\nmpsz2019 &lt;- st_read(\"data/dataGov/MPSZ2019.kml\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/InClassEx/ICE2/data/dataGov/MPSZ2019.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\n\n\n2.3 Data Wrangling\n\nConvert the ping timestamp to datetime\nas_datetime is a lubridate function. Replace the column with the reformatted version.\nlubridate helps to handle datetime data.\n\ndf$pingtimestamp &lt;- as_datetime(df$pingtimestamp)\n\n\n\nWrite the parquet data to rds\n\nwrite_rds(df, \"data/rds/part0.rds\")\n\n\n\nCheck the dataframe\n\nhead(df)\n\n# A tibble: 6 × 9\n  trj_id driving_mode osname  pingtimestamp       rawlat rawlng speed bearing\n  &lt;chr&gt;  &lt;chr&gt;        &lt;chr&gt;   &lt;dttm&gt;               &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;   &lt;int&gt;\n1 70014  car          android 2019-04-11 00:40:36   1.34   104.  18.9     248\n2 73573  car          android 2019-04-18 10:17:03   1.32   104.  17.7      44\n3 75567  car          android 2019-04-13 07:37:06   1.33   104.  14.0      34\n4 1410   car          android 2019-04-20 03:41:33   1.26   104.  13.0     181\n5 4354   car          android 2019-04-18 10:48:17   1.28   104.  14.8      93\n6 32630  car          android 2019-04-16 06:14:18   1.30   104.  23.2      73\n# ℹ 1 more variable: accuracy &lt;dbl&gt;\n\n\n\n\nExtract trip-start locations (Origins)\ntrj_id is a duplicated field, referring to the trip. Group by trip. sort by time stamp Filter out the origin in the first row Use mutate to create new columns\n\norigin_df &lt;- df %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(pingtimestamp) %&gt;%\n  filter(row_number()==1) %&gt;%\n  mutate(weekday = wday(pingtimestamp,\n                        label=TRUE,\n                        abbr=TRUE),\n         start_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp)))\n\n\n\nExtract trip-end locations (Destinations)\nSame as above, but use desc(pingtimestamp) to take the largest (end)\n\ndestination_df &lt;- df %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(desc(pingtimestamp)) %&gt;%\n  filter(row_number()==1) %&gt;%\n  mutate(weekday = wday(pingtimestamp,\n                        label=TRUE,\n                        abbr=TRUE),\n         end_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp)))\n\n\n\nImportant: Saving data, saving memory\nDataframes are large and the raw ones have many entries. Save the intermediate dataframes.\n\n# #|eval: FALSE - Show the code without evaluating\n# #|echo: false - Code will not appear to the reader\nwrite_rds(destination_df, \"data/rds/destination_df.rds\")\nwrite_rds(origin_df, \"data/rds/origin_df.rds\")\n\n\n\nReimporting data\nThe old files are no longer needed, but we can keep it to show our process.\n\ndestination_df &lt;- read_rds(\"data/rds/destination_df.rds\")\norigin_df &lt;- read_rds(\"data/rds/origin_df.rds\")"
  },
  {
    "objectID": "HandsOnEx/HE1/HE1.html",
    "href": "HandsOnEx/HE1/HE1.html",
    "title": "Hands-On Exercise 1: Geospatial Data Science with R",
    "section": "",
    "text": "In this exercise, I learn to handle geospatial data files and some basic data science tasks with sf.\nUse pacman::p_load to install and load sf and tidyverse"
  },
  {
    "objectID": "HandsOnEx/HE1/HE1.html#overview",
    "href": "HandsOnEx/HE1/HE1.html#overview",
    "title": "Hands-On Exercise 1: Geospatial Data Science with R",
    "section": "",
    "text": "In this exercise, I learn to handle geospatial data files and some basic data science tasks with sf.\nUse pacman::p_load to install and load sf and tidyverse"
  },
  {
    "objectID": "HandsOnEx/HE1/HE1.html#setup",
    "href": "HandsOnEx/HE1/HE1.html#setup",
    "title": "Hands-On Exercise 1: Geospatial Data Science with R",
    "section": "2.0 Setup",
    "text": "2.0 Setup\n\n2.1 Requirements\n\nsf: Simple features access for R. Includes importing, managing and processing data.\ntidyverse: A set of R packages for data science, which includes visualisation\n\n\n\n2.2 Data\n\nMaster Plan 2014 Subzone Boundary (Web) from data.gov.sg\nPre-Schools Location from data.gov.sg\nCycling Path from LTADataMall\nLatest version of Singapore Airbnb listing data from Inside Airbnb\n\n\n\n2.3 Importing Data and Packages\n\nPacman to import sf and tidyverse\n\npacman::p_load(sf, tidyverse)\n\n\n\n\nOpen and import Shapefiles\nst_read to open and import the shapefile.\n\nPath to shapefile\nShapefile without the file extension\n\n\nmpsz = st_read(dsn = \"data/geospatial\", \n               layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/HandsOnEx/HE1/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\ncyclingpath = st_read(dsn = \"data/geospatial\", layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/HandsOnEx/HE1/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2558 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\npreschool = st_read(\"data/geospatial/PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/HandsOnEx/HE1/data/geospatial/PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "HandsOnEx/HE1/HE1.html#basic-content-checking-methods",
    "href": "HandsOnEx/HE1/HE1.html#basic-content-checking-methods",
    "title": "Hands-On Exercise 1: Geospatial Data Science with R",
    "section": "3.0 Basic Content Checking Methods",
    "text": "3.0 Basic Content Checking Methods\n\n3.1 Checking the Contents of Simple Feature Data Frames\n\nst_geometry\nst_geometry prints basic info on the feature class\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((31495.56 30140.01, 31980.96 296...\n\n\nMULTIPOLYGON (((29092.28 30021.89, 29119.64 300...\n\n\nMULTIPOLYGON (((29932.33 29879.12, 29947.32 298...\n\n\nMULTIPOLYGON (((27131.28 30059.73, 27088.33 297...\n\n\nMULTIPOLYGON (((26451.03 30396.46, 26440.47 303...\n\n\n\n\n\nglimpse\nglimpse shows the associated attribute info\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\n\n\n\nhead\nhead shows complete info on feature object\n\nhead(mpsz, n=5)  \n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n\n\n\n\n\nplot\nplot a multi-plot of all attributes (default for sf object)\n\nplot(mpsz, max.plot = 15)\n\n\n\n\n\n\n\n\n\nPlot just one\n\nplot(mpsz[\"PLN_AREA_N\"])\n\n\n\n\n\n\n\n\n\nPlot just the geometry\n\nplot(st_geometry(mpsz))\n\n\n\n\n\n\n\n\n\n\n\n\n3.2 Coordinate Reference Systems\n\nCoordinate Reference System Transformation\nShow the EPSG code of simple feature data frame (See last, CS, section). It is 9001.\nCRS: Coordinate Reference System\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nChange it to SVY21 (3414)\nSVY21: Projected coordinate system for Singapore, a CRS\n\nmpsz3414 &lt;- st_transform(mpsz, 3414)\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\npreschool3414 &lt;- st_transform(preschool, crs = 3414)\nst_crs(preschool3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\nAspatial data: not geospatial data.\n\nlistings &lt;- read_csv(\"data/aspatial/listings.csv\")\n\nRows: 3457 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (6): name, host_name, neighbourhood_group, neighbourhood, room_type, l...\ndbl  (11): id, host_id, latitude, longitude, price, minimum_nights, number_o...\ndate  (1): last_review\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nlist(listings) \n\n[[1]]\n# A tibble: 3,457 × 18\n       id name      host_id host_name neighbourhood_group neighbourhood latitude\n    &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;               &lt;chr&gt;            &lt;dbl&gt;\n 1  71609 Villa in…  367042 Belinda   East Region         Tampines          1.35\n 2  71896 Home in …  367042 Belinda   East Region         Tampines          1.35\n 3  71903 Home in …  367042 Belinda   East Region         Tampines          1.35\n 4 275343 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 5 275344 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 6 289234 Home in …  367042 Belinda   East Region         Tampines          1.34\n 7 294281 Rental u… 1521514 Elizabeth Central Region      Newton            1.31\n 8 324945 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 9 330095 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n10 369141 Place to… 1521514 Elizabeth Central Region      Newton            1.31\n# ℹ 3,447 more rows\n# ℹ 11 more variables: longitude &lt;dbl&gt;, room_type &lt;chr&gt;, price &lt;dbl&gt;,\n#   minimum_nights &lt;dbl&gt;, number_of_reviews &lt;dbl&gt;, last_review &lt;date&gt;,\n#   reviews_per_month &lt;dbl&gt;, calculated_host_listings_count &lt;dbl&gt;,\n#   availability_365 &lt;dbl&gt;, number_of_reviews_ltm &lt;dbl&gt;, license &lt;chr&gt;\n\n\n\nConvert the longitude and latitude columns from WGS84 to SVY21.\n\nlistings_sf &lt;- st_as_sf(listings, \n                        coords = c(\"longitude\", \"latitude\"),\n                        crs=4326) %&gt;%\n  st_transform(crs = 3414)\n\nglimpse(listings_sf)\n\nRows: 3,457\nColumns: 17\n$ id                             &lt;dbl&gt; 71609, 71896, 71903, 275343, 275344, 28…\n$ name                           &lt;chr&gt; \"Villa in Singapore · ★4.44 · 2 bedroom…\n$ host_id                        &lt;dbl&gt; 367042, 367042, 367042, 1439258, 143925…\n$ host_name                      &lt;chr&gt; \"Belinda\", \"Belinda\", \"Belinda\", \"Kay\",…\n$ neighbourhood_group            &lt;chr&gt; \"East Region\", \"East Region\", \"East Reg…\n$ neighbourhood                  &lt;chr&gt; \"Tampines\", \"Tampines\", \"Tampines\", \"Bu…\n$ room_type                      &lt;chr&gt; \"Private room\", \"Private room\", \"Privat…\n$ price                          &lt;dbl&gt; 150, 80, 80, 64, 78, 220, 85, 75, 69, 7…\n$ minimum_nights                 &lt;dbl&gt; 92, 92, 92, 60, 60, 92, 92, 60, 60, 92,…\n$ number_of_reviews              &lt;dbl&gt; 19, 24, 46, 20, 16, 12, 131, 17, 5, 81,…\n$ last_review                    &lt;date&gt; 2020-01-17, 2019-10-13, 2020-01-09, 20…\n$ reviews_per_month              &lt;dbl&gt; 0.13, 0.16, 0.30, 0.15, 0.11, 0.09, 0.9…\n$ calculated_host_listings_count &lt;dbl&gt; 5, 5, 5, 51, 51, 5, 7, 51, 51, 7, 7, 1,…\n$ availability_365               &lt;dbl&gt; 55, 91, 91, 183, 183, 54, 365, 183, 183…\n$ number_of_reviews_ltm          &lt;dbl&gt; 0, 0, 0, 0, 3, 0, 0, 1, 2, 0, 0, 0, 0, …\n$ license                        &lt;chr&gt; NA, NA, NA, \"S0399\", \"S0399\", NA, NA, \"…\n$ geometry                       &lt;POINT [m]&gt; POINT (41972.5 36390.05), POINT (…"
  },
  {
    "objectID": "HandsOnEx/HE1/HE1.html#basic-geoprocessing-with-sf",
    "href": "HandsOnEx/HE1/HE1.html#basic-geoprocessing-with-sf",
    "title": "Hands-On Exercise 1: Geospatial Data Science with R",
    "section": "4.0 Basic Geoprocessing with sf",
    "text": "4.0 Basic Geoprocessing with sf\n\n4.1 Buffering\nBuffering: Add space along the side of a line, e.g. width of a path + clearance needed\n\n5 Meter buffers\n\n\nbuffer_cycling &lt;- st_buffer(cyclingpath, \n                            dist=5, nQuadSegs = 30)\n\n\nFind the area of the buffers, i.e. see how much space is needed.\n\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\nsum(buffer_cycling$AREA)\n\n1774367 [m^2]\n\n\n\n\n\n4.2 Point in Polygon Count\nPoint in Polygon Count: How many points in a polygon. E.g. count preschools in each zone.\n\nUse st_intersects for this\nNOT st_intersection\n\n\nmpsz3414$`PreSch Count`&lt;- lengths(st_intersects(mpsz3414, preschool3414))\n\n\n\n\n4.3 Summary Statistics\nPrint the summary stats\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n\n\n\n\n\n4.4 top_n\ntop_n to show the rows with the highest values in a column\n\ntop_n(mpsz3414, 3, `PreSch Count`)\n\nSimple feature collection with 3 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 23449.05 ymin: 31880.27 xmax: 42940.57 ymax: 47996.47\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      163          4       ALJUNIED    GLSZ04      N    GEYLANG         GL\n2      189          2  TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n3      290          3 WOODLANDS EAST    WDSZ03      N  WOODLANDS         WD\n        REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR\n1 CENTRAL REGION       CR 83AFAB768B6B2B66 2014-12-05 33592.58 32970.83\n2    EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39\n3   NORTH REGION       NR C90769E43EE6B0F2 2014-12-05 24506.64 46991.63\n  SHAPE_Leng SHAPE_Area                       geometry PreSch Count\n1   7100.699    2959368 MULTIPOLYGON (((34449.13 33...           40\n2  10180.624    4339824 MULTIPOLYGON (((42196.76 38...           72\n3   6603.608    2553464 MULTIPOLYGON (((24786.75 46...           54\n\n\n\n\n\n4.5 mutate\nCalculate area of each subzone and mutate to compute density. Creates a PreSch Density field based on the PreSch Count and Area fields.\n\nmpsz3414$Area &lt;- mpsz3414 %&gt;%\n  st_area()\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)"
  },
  {
    "objectID": "HandsOnEx/HE1/HE1.html#visualisations",
    "href": "HandsOnEx/HE1/HE1.html#visualisations",
    "title": "Hands-On Exercise 1: Geospatial Data Science with R",
    "section": "5.0 Visualisations",
    "text": "5.0 Visualisations\n\n5.1 Default Histograms\nEDA Histogram\n\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\n\n\n\n\n\n\n\n5.2 ggplot2\nggplot2 makes cooler graphics\n\nggplot(data=mpsz3414, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n       x = \"Pre-school density (per km sq)\",\n       y = \"Frequency\")\n\n\n\n\n\n\n\n\n\nScatterplot of pre-school count vs pre-school density\n\nggplot(data=mpsz3414, \n       aes(y = `PreSch Count`, \n           x= as.numeric(`PreSch Density`))) +\n  geom_point(color=\"black\", \n             fill=\"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n       x = \"Pre-school density (per km sq)\",\n       y = \"Pre-school count\")\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "HandsOnEx/HE3/HE3.html",
    "href": "HandsOnEx/HE3/HE3.html",
    "title": "Hands-On Exercise 3: 1st & 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "Exploring spatial point patterns and methods to identify and analyse these patterns. First-order methods include kernel density estimation and bandwidth selection methods while second-order methods include F, G, K and L functions.\n\n\n\n\nSpatial point patterns use points as events.\nWhen dealing with their locations, consider if the points are randomly located or patterned.\nIf these locations are associated with a value, they may follow a marked point pattern (Point patterns with a mark, which is a categorical or numerical label). They may also be random or patterned.\nWhen considering points on a plane, these points can be imagined to occur on an isotropic (Measurement direction does not affect magnitude) plane. (Perfectly flat and homogeneous 2D space).\nIn a set of observed points, they generally follow 3 spatial distributions: Random, Aggregate (Clustered) and Regular (Uniform)\n\\(X = \\{x∈D\\}\\) where D is the study region, or a subset of \\(R^n\\), where n is the dimensions of the Euclidean space, probably 2 in most cases.\nFirst-order analysis of spatial point patterns: Observations vary based on location due to variations in underlying properties\nSecond order analysis of spatial point patterns: Observations vary based on location due to interaction effects between observations\n2 Kinds of First order spatial point patterns analysis techniques\n\nDensity Based\n\nKernel density estimation (KDE)\n\n\\(\\hat{\\lambda}_\\tau(s)=\\frac{1}{\\sigma_\\tau(s)} \\sum_{i=1}^{n} \\frac{1}{\\tau^2}k(\\frac{s-s_i}{\\tau})\\)\n\\(k(\\frac{s-s_i}{\\tau})\\) Is the kernel, which can have different equations for the function k. The above is the uniform kernel.\n\\(\\tau\\) is the bandwidth, or radius\nThe centre is called the “regression point”\nAdaptive bandwidth: Adjust bandwidth (radius) based on data density. i.e shorter for dense, longer for sparse. Can use nearest-neighbour for this\nFixed bandwidth: May produce large variances for sparse data and hide subtle local variation for sparse data. May not be able to calibrate in local areas where data is too sparse.\n\nQuadrat analysis\n\nDivide the study area \\(R\\) into equally-sized subregions. Often but not necessarily square.\nCount events per subregion\nCalculate intensity of events in each region. Intensity is denoted with \\(\\lambda\\), \\(n\\) is the number of events. \\(A\\) is the area of each quadrat. \\(\\lambda=\\frac{n}{A}\\)\nPerform the Complete Spatial Randomness Test (CSR)\nVariance-Mean Ratio (VMR): For uniform, expect close to 0. For random, expect close to 1. For cluster, expect more than 1\nCSR/IRP (independent random process): Any event has equal probability of being in any location [1st order]. Location of an event is indepent of the location of another [2nd order].\nQuadrat weaknesses\n\nSensitive to quadrat size since the number of points will vary.\nMeasure of dispersion rather than pattern\nSingle measure for entire distribution, variation with whole region is not recognised.\n\n\n\nDistance-based\n\nNearest neighbour index\n\nEuclidean distance from a point to nearest neighbour. Expressed as a ratio of observed mean distance to expected mean distance.\n\\(NNI=\\frac{\\bar{d}}{E(\\bar{d})}\\)\n\\(\\bar{d}=\\frac{\\sum_{i=1}^{n}d_i}{n}\\)\n\\(E(\\bar{d})=0.5\\sqrt{\\frac{A}{n}}\\)\nIf index &lt; 1, clustering\nIf index == 1, random\nIf index &gt; 1, Dispersion or competition\nConsider the test statistic Z: \\(Z=\\frac{\\bar{d}-E(\\bar{d})}{Std.error}\\)\nReject the null hypothesis if z-score is large and p-value is smaller than alpha value (0.05)\n\n\n\nDensity based measures:\n\nGlobal density: The density of points in the whole region\nLocal density: Density of points within a subregion\n\nG Function (CDF of NN-Distance)\n\n\\(G(r)=\\frac{|r_{min}(s_i|)&lt;r}{|R|}\\)\nn is the number of points in the study area\nTells us the way events are spaced in a point pattern\nClustered: G increases rapidly over short distance\nEvenness: G increases slow up to the distance where most events are space before increasing rapidly\nEvaluate with simulated confidence envelopes\n\nMonte Carlo simulation test of CSR: A significance test\n\nDo m independent simulations of n events in the study region\nFor every simulated point pattern, estimate \\(G(r)\\) and use 5th and 95th percentiles of the function to define upper and lower simulation envelopes.\nIf the estimated \\(G(r)\\) falls outside these bounds, it is statistically significant\nSimply put: Spray n events m times and calculate \\(G(r)\\). Draw bounds based on the 0.05 and 1-0.05 percentiles and compare to assess the chance of the \\(G(r)\\) being a random coincidence\n\nF Function (Check if clustered or even)\n\nSelect some random point locations within \\(R\\)\nFind min distance from each point to any event in \\(R\\)\n3 Steps\n\nRandomly select m points where \\(m=(p_1,p_2,...,p_n)\\)\nCalculate \\(d_{min}(p_i,s)\\)\nCalculate \\(F(d)\\) where \\(F(d)=\\frac{|d_{min}(p_i,s) &lt; d|}{m}\\)\n\nIf clustered, F(r) rises slowly at first before rising rapidly at longer distances\nIf evenness, F(r) rises rapidly at first then slowly at longer distances\nLike G function, calculate the envelopes and check if it falls outside\n\nK Function (Spatial distribution of a set of points)\n\nConsider the limit of NN distance. It only uses nearest distance.\nK function uses more points\nEstimate of spatial dependence over a wider range\nUses every distance between events in \\(R\\)\nAssumed isotropy (identical values of a property in all directions)\nCalculation\nConstruct circle \\(c\\) of radius \\(h\\) around each point \\(e_i\\)\nCount \\(|e_j|=|{c \\cap e}|\\)\nRepeat previous steps for every \\(e_i \\in e\\)\nSlowly increment \\(h\\) and repeat calculations\n\\(\\hat{K}(h)=\\frac{R}{n^2}\\sum\\sum_{i \\ne j\\frac{I_h(d_{id})}{W_{}ij}}\\)\n\\(R\\) is the area of study area. \\(n\\) is number of points. \\(I_h(d_{id})\\) is a dummy variable, 1 if \\(d_{id}\\le h\\) else 0. \\(W_{ij}\\) is edge correction, the proportionate of the circumference of the circle centered on i containing point j. =1 if the whole circle is within the study area.\nThe K function can be used as a CSR test. Plot \\(K(h)\\) against different \\(h\\) values.\nIf CSR, \\(K(h)=\\pi h^2\\)\n\\(K(h)\\) under low if regular\n\\(K(h)\\) over hi clustered\nConsider envelope for significance, else CSR.\n\nL Function (Alternative to K function. Stabilises variance.)\n\nNormally normalised to get benchmark of 0. \\(L(r)=\\sqrt{\\frac{K(r)}{\\pi}}\\)\nIf \\(L_{obs}\\) above \\(L_{hi}\\) and \\(L_{theo}\\), clustering is statistically significant\nIf \\(L_{hi} &gt; L_{obs} &gt; L_{lo}\\), spatial clustering/dispersion not statistically significant\nIf \\(L_{lo} &gt; L_{obs}\\), spatial dispersion for that distance is statistically significant\n\\(L(r) = \\sqrt{\\frac{K(r)}{\\pi}}-r\\)\n\n\n\n\nConsider the distribution of the points in space and consider if there may be interactions between them.\nThe former is an easier descriptive analysis.\nCSR is useful when there is no obvious regular or clustered pattern.\nF function is the distance from a point to the nearest event. AKA empty space function because it measure the aveage space left between events.\nG function is the distance to the nearest event; distribution of the distances from an event to its nearest other.\nHomogeneous Poisson Process represents a point process where all events are independently and uniformly distributed in its region. Considered stationary and isotropic.\nStationary: Intensity is constant and second-order intensity only depends on direction and distance of 2 points.\nIsotropic: Second order intensity is invariant to rotation.\n\nThe number of events within the area is Poisson distributed with mean \\(\\lambda|A|\\) where \\(lambda\\) is the constant intensity of the point process\nThe \\(n\\) observed events in the region are uniformly distributed\n\nInhomogenous Poisson Process: Non-constant intensity. Described with \\(lambda(x)\\) that varies spatially.\n\n\n\nCaution: Aggregated (Clustered) or dispersed structures can also be obtained with an IPP, where the intensity of the process varies in space.\nRipley’s K function: A cumulative function that gives the average number of points at a distance less than or equal to a radius. Standardised by the process intensity \\(\\frac{n}{|W|}\\), assumed homogeneous.\nCompare \\(\\hat{K}(r)\\) and \\(K_{}pois(r)\\) - Random: = - Aggregate: &gt; - Regular: &lt;\nL Function\nOnly distance-based methods can be used to detect exactly at what distance attraction or dispersion are observable without scale bias in a zone.\nD Function \\(D(r)=K_{cas}(r)-K_{controls}(r)\\) Compare two subpopulation’s distributions"
  },
  {
    "objectID": "HandsOnEx/HE3/HE3.html#overview",
    "href": "HandsOnEx/HE3/HE3.html#overview",
    "title": "Hands-On Exercise 3: 1st & 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "Exploring spatial point patterns and methods to identify and analyse these patterns. First-order methods include kernel density estimation and bandwidth selection methods while second-order methods include F, G, K and L functions.\n\n\n\n\nSpatial point patterns use points as events.\nWhen dealing with their locations, consider if the points are randomly located or patterned.\nIf these locations are associated with a value, they may follow a marked point pattern (Point patterns with a mark, which is a categorical or numerical label). They may also be random or patterned.\nWhen considering points on a plane, these points can be imagined to occur on an isotropic (Measurement direction does not affect magnitude) plane. (Perfectly flat and homogeneous 2D space).\nIn a set of observed points, they generally follow 3 spatial distributions: Random, Aggregate (Clustered) and Regular (Uniform)\n\\(X = \\{x∈D\\}\\) where D is the study region, or a subset of \\(R^n\\), where n is the dimensions of the Euclidean space, probably 2 in most cases.\nFirst-order analysis of spatial point patterns: Observations vary based on location due to variations in underlying properties\nSecond order analysis of spatial point patterns: Observations vary based on location due to interaction effects between observations\n2 Kinds of First order spatial point patterns analysis techniques\n\nDensity Based\n\nKernel density estimation (KDE)\n\n\\(\\hat{\\lambda}_\\tau(s)=\\frac{1}{\\sigma_\\tau(s)} \\sum_{i=1}^{n} \\frac{1}{\\tau^2}k(\\frac{s-s_i}{\\tau})\\)\n\\(k(\\frac{s-s_i}{\\tau})\\) Is the kernel, which can have different equations for the function k. The above is the uniform kernel.\n\\(\\tau\\) is the bandwidth, or radius\nThe centre is called the “regression point”\nAdaptive bandwidth: Adjust bandwidth (radius) based on data density. i.e shorter for dense, longer for sparse. Can use nearest-neighbour for this\nFixed bandwidth: May produce large variances for sparse data and hide subtle local variation for sparse data. May not be able to calibrate in local areas where data is too sparse.\n\nQuadrat analysis\n\nDivide the study area \\(R\\) into equally-sized subregions. Often but not necessarily square.\nCount events per subregion\nCalculate intensity of events in each region. Intensity is denoted with \\(\\lambda\\), \\(n\\) is the number of events. \\(A\\) is the area of each quadrat. \\(\\lambda=\\frac{n}{A}\\)\nPerform the Complete Spatial Randomness Test (CSR)\nVariance-Mean Ratio (VMR): For uniform, expect close to 0. For random, expect close to 1. For cluster, expect more than 1\nCSR/IRP (independent random process): Any event has equal probability of being in any location [1st order]. Location of an event is indepent of the location of another [2nd order].\nQuadrat weaknesses\n\nSensitive to quadrat size since the number of points will vary.\nMeasure of dispersion rather than pattern\nSingle measure for entire distribution, variation with whole region is not recognised.\n\n\n\nDistance-based\n\nNearest neighbour index\n\nEuclidean distance from a point to nearest neighbour. Expressed as a ratio of observed mean distance to expected mean distance.\n\\(NNI=\\frac{\\bar{d}}{E(\\bar{d})}\\)\n\\(\\bar{d}=\\frac{\\sum_{i=1}^{n}d_i}{n}\\)\n\\(E(\\bar{d})=0.5\\sqrt{\\frac{A}{n}}\\)\nIf index &lt; 1, clustering\nIf index == 1, random\nIf index &gt; 1, Dispersion or competition\nConsider the test statistic Z: \\(Z=\\frac{\\bar{d}-E(\\bar{d})}{Std.error}\\)\nReject the null hypothesis if z-score is large and p-value is smaller than alpha value (0.05)\n\n\n\nDensity based measures:\n\nGlobal density: The density of points in the whole region\nLocal density: Density of points within a subregion\n\nG Function (CDF of NN-Distance)\n\n\\(G(r)=\\frac{|r_{min}(s_i|)&lt;r}{|R|}\\)\nn is the number of points in the study area\nTells us the way events are spaced in a point pattern\nClustered: G increases rapidly over short distance\nEvenness: G increases slow up to the distance where most events are space before increasing rapidly\nEvaluate with simulated confidence envelopes\n\nMonte Carlo simulation test of CSR: A significance test\n\nDo m independent simulations of n events in the study region\nFor every simulated point pattern, estimate \\(G(r)\\) and use 5th and 95th percentiles of the function to define upper and lower simulation envelopes.\nIf the estimated \\(G(r)\\) falls outside these bounds, it is statistically significant\nSimply put: Spray n events m times and calculate \\(G(r)\\). Draw bounds based on the 0.05 and 1-0.05 percentiles and compare to assess the chance of the \\(G(r)\\) being a random coincidence\n\nF Function (Check if clustered or even)\n\nSelect some random point locations within \\(R\\)\nFind min distance from each point to any event in \\(R\\)\n3 Steps\n\nRandomly select m points where \\(m=(p_1,p_2,...,p_n)\\)\nCalculate \\(d_{min}(p_i,s)\\)\nCalculate \\(F(d)\\) where \\(F(d)=\\frac{|d_{min}(p_i,s) &lt; d|}{m}\\)\n\nIf clustered, F(r) rises slowly at first before rising rapidly at longer distances\nIf evenness, F(r) rises rapidly at first then slowly at longer distances\nLike G function, calculate the envelopes and check if it falls outside\n\nK Function (Spatial distribution of a set of points)\n\nConsider the limit of NN distance. It only uses nearest distance.\nK function uses more points\nEstimate of spatial dependence over a wider range\nUses every distance between events in \\(R\\)\nAssumed isotropy (identical values of a property in all directions)\nCalculation\nConstruct circle \\(c\\) of radius \\(h\\) around each point \\(e_i\\)\nCount \\(|e_j|=|{c \\cap e}|\\)\nRepeat previous steps for every \\(e_i \\in e\\)\nSlowly increment \\(h\\) and repeat calculations\n\\(\\hat{K}(h)=\\frac{R}{n^2}\\sum\\sum_{i \\ne j\\frac{I_h(d_{id})}{W_{}ij}}\\)\n\\(R\\) is the area of study area. \\(n\\) is number of points. \\(I_h(d_{id})\\) is a dummy variable, 1 if \\(d_{id}\\le h\\) else 0. \\(W_{ij}\\) is edge correction, the proportionate of the circumference of the circle centered on i containing point j. =1 if the whole circle is within the study area.\nThe K function can be used as a CSR test. Plot \\(K(h)\\) against different \\(h\\) values.\nIf CSR, \\(K(h)=\\pi h^2\\)\n\\(K(h)\\) under low if regular\n\\(K(h)\\) over hi clustered\nConsider envelope for significance, else CSR.\n\nL Function (Alternative to K function. Stabilises variance.)\n\nNormally normalised to get benchmark of 0. \\(L(r)=\\sqrt{\\frac{K(r)}{\\pi}}\\)\nIf \\(L_{obs}\\) above \\(L_{hi}\\) and \\(L_{theo}\\), clustering is statistically significant\nIf \\(L_{hi} &gt; L_{obs} &gt; L_{lo}\\), spatial clustering/dispersion not statistically significant\nIf \\(L_{lo} &gt; L_{obs}\\), spatial dispersion for that distance is statistically significant\n\\(L(r) = \\sqrt{\\frac{K(r)}{\\pi}}-r\\)\n\n\n\n\nConsider the distribution of the points in space and consider if there may be interactions between them.\nThe former is an easier descriptive analysis.\nCSR is useful when there is no obvious regular or clustered pattern.\nF function is the distance from a point to the nearest event. AKA empty space function because it measure the aveage space left between events.\nG function is the distance to the nearest event; distribution of the distances from an event to its nearest other.\nHomogeneous Poisson Process represents a point process where all events are independently and uniformly distributed in its region. Considered stationary and isotropic.\nStationary: Intensity is constant and second-order intensity only depends on direction and distance of 2 points.\nIsotropic: Second order intensity is invariant to rotation.\n\nThe number of events within the area is Poisson distributed with mean \\(\\lambda|A|\\) where \\(lambda\\) is the constant intensity of the point process\nThe \\(n\\) observed events in the region are uniformly distributed\n\nInhomogenous Poisson Process: Non-constant intensity. Described with \\(lambda(x)\\) that varies spatially.\n\n\n\nCaution: Aggregated (Clustered) or dispersed structures can also be obtained with an IPP, where the intensity of the process varies in space.\nRipley’s K function: A cumulative function that gives the average number of points at a distance less than or equal to a radius. Standardised by the process intensity \\(\\frac{n}{|W|}\\), assumed homogeneous.\nCompare \\(\\hat{K}(r)\\) and \\(K_{}pois(r)\\) - Random: = - Aggregate: &gt; - Regular: &lt;\nL Function\nOnly distance-based methods can be used to detect exactly at what distance attraction or dispersion are observable without scale bias in a zone.\nD Function \\(D(r)=K_{cas}(r)-K_{controls}(r)\\) Compare two subpopulation’s distributions"
  },
  {
    "objectID": "HandsOnEx/HE3/HE3.html#setup",
    "href": "HandsOnEx/HE3/HE3.html#setup",
    "title": "Hands-On Exercise 3: 1st & 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "2.0 Setup",
    "text": "2.0 Setup\n\n2.1 Requirements\n\nsf: Simple features access for R. Includes importing, managing and processing data.\nspatstat: For point to point analysis, 1st and 2nd order spatial point patterns analysis and KDE.\nraster: Handles gridding spatial data\nmaptools: Convert spatial objects into spatstat’s ppp format\ntmap: Thematic map library\n\n\n\n2.2 Data\n\nCHILDCARE from data.gov.sg\nMP14_SUBZONE_WEB_PL from data.gov.sg\nCostalOutline from SLA\n\n\n\n2.3 Importing Data and Packages\n\npacman::p_load(maptools, sf, raster, spatstat, tmap)\n\n\nImport the data and correct the CRS of the data to 3414\n\nchildcare_sf &lt;- st_read(\"data/geospatial/ChildCareServices.geojson\") %&gt;%\n  st_transform(crs=3414)\n\nReading layer `ChildCareServices' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/HandsOnEx/HE3/data/geospatial/ChildCareServices.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\nmpsz_sf &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\") %&gt;% \n  st_transform(crs=3414)\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/HandsOnEx/HE3/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nsg_sf &lt;- st_union(mpsz_sf)\n\n\n\n2.4 Wrangling Data\n\nChecking CRS\nConfirm the data’s CRS is correct\n\nst_crs(childcare_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nst_crs(sg_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\nInitial plots\nPlot all 3 datasets to observe obvious spatial patterns.\n\ntm_shape(sg_sf) + \n  tm_polygons() + \n  tm_shape(mpsz_sf) + \n  tm_polygons()+ \n  tm_shape(childcare_sf)+ \n  tm_dots()\n\n\n\n\n\n\n\n\nThis code prepares an interactive pin map.\n\n# tmap_mode('view')\n# tm_shape(childcare_sf)+\n#   tm_dots()\n# tmap_mode('plot')\n\n\n\nConvert to sp’s Spatial* class\nUse sf’s as_Spatial method to convert them\n\nchildcare &lt;- as_Spatial(childcare_sf)\nmpsz &lt;- as_Spatial(mpsz_sf)\nsg &lt;- as_Spatial(sg_sf)\n\nChecking the conversion\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1925 \nextent      : 11810.03, 45404.24, 25596.33, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;100044&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;44, TELOK BLANGAH DRIVE, #01 - 19/51, SINGAPORE 100044&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;PCF SPARKLETOTS PRESCHOOL @ TELOK BLANGAH BLK 44 (CC)&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;349C54F201805938&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \nmax values  : kml_999,                                            &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;99982&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;35, ALLANBROOKE ROAD, SINGAPORE 099982&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;ISLANDER PRE-SCHOOL PTE LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;4F63ACF93EFABE7F&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\nsg\n\nclass       : SpatialPolygons \nfeatures    : 1 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\n\nConvert Spatial* into generic sp format\nWe cannot convert directly to ppp, so we convert to generic spatial first\n\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1925 \nextent      : 11810.03, 45404.24, 25596.33, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;100044&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;44, TELOK BLANGAH DRIVE, #01 - 19/51, SINGAPORE 100044&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;PCF SPARKLETOTS PRESCHOOL @ TELOK BLANGAH BLK 44 (CC)&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;349C54F201805938&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \nmax values  : kml_999,                                            &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;99982&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;35, ALLANBROOKE ROAD, SINGAPORE 099982&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;ISLANDER PRE-SCHOOL PTE LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;4F63ACF93EFABE7F&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\nsg\n\nclass       : SpatialPolygons \nfeatures    : 1 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\n\nConvert generic sp to spatstat’s ppp format\n\nchildcare_ppp &lt;- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1925 points\nwindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n\nplot(childcare_ppp)\n\n\n\n\n\n\n\n\nWhile plotting the new ppp object, we get a warning that it contains duplicated points\n\nplot(childcare_ppp)\n\n\n\n\n\n\n\n\nWe confirm with with any(duplicated())\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\nmultiplicity() shows us which points are duplicated\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    2    1    1    1    1    2    1    1    1    1    1    1    3    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    4    1    1    1    1    1    1    1    1    1    1    2 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    2    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    3    1    1    1    2    1   10    1    1    1    1    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    2    1    1    3    1    1    1    2    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    2    2    2    1    1    1    1    1    1    1    1    2    1    1    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    3    1    1    1    1    1    1    1    1    1    1 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    2    2    2    1    1    1    1    1    2    1    4    1    1    2 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   3    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   1    1    1    1    1   10    1    1    3    1    1    1    1    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    2    6    1    2    1    1    2    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   3    2    3    2    1    2    1    1    2    4    1    6    6    1    1    1 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   2    1    1    1    1    2    1    1    1    1    1    1    3    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    4    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    2    1    1    1    2    1    1    1    2    1    1    1    1    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    2    1    2    2    1    1    1    1    2    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   4    1    1    1    1    2    1    1    1    1    1    1    2    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   2    2    1    1    1    1    1   10    1    2    1    1    1    2    1    3 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1   10   10   10    1    1    1    1    1    1    1    1    1 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    2    1    2    1    1    1    1    3    1    2    1    1    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    3    1    1    1    1    1    2    1    1    2 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    3    1    1    1    1    1    1    1    1    2    2    2    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    3    1    1    1    2    1    1    1    2    2    1    1    1    1    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    4    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   1    1    1    1    1    3    1    1    1    1    1    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    4    1    1    1    1    1    1    4    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    2    1    1 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    3    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    1    1    1    1   10    1    1    1    1    1    2 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    1    2    1    2    1   10    1    4    1    2    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   3    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    3    1    1    3    1    1    1    1    2    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    2 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    2    1    1    1    1    1    2    2    1    1    1    1    2    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    2    1    2    1    1    1    2    1    1    1    2    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    2    1    1    2    1    1    1    1    1    1    1    1    2    1 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    2    2    1    1    1    1    2    1    1    1    1    2    1    1    2 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    2    4    1    1    1    1    1    1    2    1    2    2    2 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   2    1    1    1    1    2    1    1    2    2    2    2    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   2    1    1    1    2    1    2    1    1    1    1    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    2    2    2    1    1    1    1    1    2    1    1    2    2    2    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    2    1    1    2    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   2    1    2    1    2    1    1    1    1    1    1    2    2    1    1    2 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    2    1    2    1    2    1    1    1    1    1    2    1    1    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    2    1    2    2    2    2    2    1    1    1    1    1    2    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    2    1    1    2    1    1    1    1    2    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    2    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    3    1    1    1    1    1    1    1   10 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   2    1    3    2    1    2    1    1    2    3    2    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    2    1    2    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    4    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   2    1    1    1    2    1    2    1    1    1    1    1    1    1    1    1 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n  10    1    2    4    1    1    1    4    1    4    1    1    1    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    1    1    1    1    1    4    2    3    2    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   2    2    1    1    1    1    1    2    2    3    1    1    1    1    1    2 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   2    2    2    1    1    1    6    1    1    1    1    1    1    1    1    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    1    1    4    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    2    2    1    1    1    1    1    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    2    1    1    1    1    2    1    1    1    1    2    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   2    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 1546 1547 1548 1549 1550 1551 1552 \n   1    1    1    1    1    1    1    1    1    6    1    1    1    1    1    1 \n1553 1554 1555 1556 1557 1558 1559 1560 1561 1562 1563 1564 1565 1566 1567 1568 \n   1    1    1    1    1    1    1    3    1    1    4    1    1    2    1    1 \n1569 1570 1571 1572 1573 1574 1575 1576 1577 1578 1579 1580 1581 1582 1583 1584 \n   2    1    1    1    2    1    4    1    2    1    1    1    1    1    1    1 \n1585 1586 1587 1588 1589 1590 1591 1592 1593 1594 1595 1596 1597 1598 1599 1600 \n   1    1    1    1    1    1    1    1    2    1    1    2    1    1    1    1 \n1601 1602 1603 1604 1605 1606 1607 1608 1609 1610 1611 1612 1613 1614 1615 1616 \n   1    1    1    1    2    1    1    3    1    1    1    2    1    1    1    1 \n1617 1618 1619 1620 1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 1632 \n   2    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n1633 1634 1635 1636 1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 1648 \n   3    1    1    2    1    1    1    1    1    1    1    1    1    2    1    1 \n1649 1650 1651 1652 1653 1654 1655 1656 1657 1658 1659 1660 1661 1662 1663 1664 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n1665 1666 1667 1668 1669 1670 1671 1672 1673 1674 1675 1676 1677 1678 1679 1680 \n   1    1    1    4    1    1    1    6    1    1    1    1    1    1    1    1 \n1681 1682 1683 1684 1685 1686 1687 1688 1689 1690 1691 1692 1693 1694 1695 1696 \n   1    1    1    2    1    1    1    2    1    1    1    1    1    2    1    1 \n1697 1698 1699 1700 1701 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711 1712 \n   1    2    1    1    1    1    1    1    1    1    2    2    2    1    1    1 \n1713 1714 1715 1716 1717 1718 1719 1720 1721 1722 1723 1724 1725 1726 1727 1728 \n   2    1    2    1    2    1    2    1    1    2    1    2    2    2    2    1 \n1729 1730 1731 1732 1733 1734 1735 1736 1737 1738 1739 1740 1741 1742 1743 1744 \n   1    1    1    1    1    2    1    1    1    2    1    1    1    1    2    1 \n1745 1746 1747 1748 1749 1750 1751 1752 1753 1754 1755 1756 1757 1758 1759 1760 \n   1    4    1    4    1    4    1    1    2    1    1    1    1    1    3    1 \n1761 1762 1763 1764 1765 1766 1767 1768 1769 1770 1771 1772 1773 1774 1775 1776 \n   1    1    1    2    2    2    2    2    2    2    2    1    1    2    2    2 \n1777 1778 1779 1780 1781 1782 1783 1784 1785 1786 1787 1788 1789 1790 1791 1792 \n   1    2    1    1    1    1    1    2    2    2    1    2    2    2    2    1 \n1793 1794 1795 1796 1797 1798 1799 1800 1801 1802 1803 1804 1805 1806 1807 1808 \n   2    1    1    1    1    1    1    1    2    2    1    2    1    1    1    1 \n1809 1810 1811 1812 1813 1814 1815 1816 1817 1818 1819 1820 1821 1822 1823 1824 \n   1    1    1    1    2    1    2    2    2    2    2    2    1    1    2    1 \n1825 1826 1827 1828 1829 1830 1831 1832 1833 1834 1835 1836 1837 1838 1839 1840 \n   1    1    1    2    2    2    2    2    1    1    1    2    1    1    2    2 \n1841 1842 1843 1844 1845 1846 1847 1848 1849 1850 1851 1852 1853 1854 1855 1856 \n   1    2    1    1    2    1    1    2    2    2    1    2    1    2    1    1 \n1857 1858 1859 1860 1861 1862 1863 1864 1865 1866 1867 1868 1869 1870 1871 1872 \n   1    1    1    1    1    1    2    1    1    1    1    4    1    1    1    1 \n1873 1874 1875 1876 1877 1878 1879 1880 1881 1882 1883 1884 1885 1886 1887 1888 \n   3    1    1    2    1    1    1    2    1    1    1    1    1    2    2    1 \n1889 1890 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900 1901 1902 1903 1904 \n   1    1    2    1    2    2    1    1    1    1    1    2    1    1    2    1 \n1905 1906 1907 1908 1909 1910 1911 1912 1913 1914 1915 1916 1917 1918 1919 1920 \n   1    3    2    2    2    1    2    1    3    1    1    1    1    1    1    1 \n1921 1922 1923 1924 1925 \n   1    1    1    1    3 \n\n\nsum() the number of duplicated points\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 338\n\n\nIn the interactive map, darker spots have duplicated data\n\n# tmap_mode('view')\n# tm_shape(childcare) +\n#   tm_dots(alpha=0.4, \n#          size=0.05)\n\n# tmap_mode('plot')\n\n\n\nJittering\nJittering: Slightly shift duplicate points such that they no longer occur at the same point to make them unique. After that, confirm that there are no longer any duplicates with any(duplicated())\n\nchildcare_ppp &lt;- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\nany(duplicated(childcare_ppp))\n\n[1] FALSE\n\n\n\n\nowin\nowin: A geographical boundary to confine our analysis.\n\nsg_owin &lt;- as(sg_sp, \"owin\")\nplot(sg_owin)\n\n\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n80 separate polygons (35 holes)\n                  vertices         area relative.area\npolygon 1                4  9.47108e+01      1.21e-07\npolygon 2               37  1.29481e+04      1.66e-05\npolygon 3               30  4.28933e+03      5.49e-06\npolygon 4              145  9.61782e+05      1.23e-03\npolygon 5              227  1.10308e+06      1.41e-03\npolygon 6               19  3.09221e+04      3.95e-05\npolygon 7               10  6.60195e+03      8.44e-06\npolygon 8              234  2.08755e+06      2.67e-03\npolygon 9               22  6.74651e+03      8.63e-06\npolygon 10              71  5.63061e+03      7.20e-06\npolygon 11              10  1.99717e+02      2.55e-07\npolygon 12           14663  6.97996e+08      8.93e-01\npolygon 13 (hole)        3 -2.05920e-03     -2.63e-12\npolygon 14 (hole)        3 -2.89050e-05     -3.70e-14\npolygon 15 (hole)        3 -2.83151e-01     -3.62e-10\npolygon 16 (hole)        3 -3.99521e-02     -5.11e-11\npolygon 17 (hole)        3 -4.95057e-02     -6.33e-11\npolygon 18 (hole)        3 -3.65501e-03     -4.67e-12\npolygon 19 (hole)        4 -2.05611e-02     -2.63e-11\npolygon 20 (hole)        3 -1.68316e-04     -2.15e-13\npolygon 21 (hole)       26 -1.25665e+03     -1.61e-06\npolygon 22 (hole)        3 -2.18000e-06     -2.79e-15\npolygon 23 (hole)        3 -6.62377e-01     -8.47e-10\npolygon 24 (hole)        3 -2.09065e-03     -2.67e-12\npolygon 25 (hole)       36 -7.79904e+03     -9.97e-06\npolygon 26 (hole)        3 -8.83647e-03     -1.13e-11\npolygon 27 (hole)        3 -2.21090e+00     -2.83e-09\npolygon 28 (hole)       40 -6.00381e+03     -7.68e-06\npolygon 29 (hole)        7 -1.40545e-01     -1.80e-10\npolygon 30 (hole)       20 -4.39069e+00     -5.62e-09\npolygon 31 (hole)       28 -1.99862e+01     -2.56e-08\npolygon 32 (hole)       48 -1.38338e+02     -1.77e-07\npolygon 33 (hole)      351 -1.21433e+03     -1.55e-06\npolygon 34 (hole)       12 -8.36709e+01     -1.07e-07\npolygon 35 (hole)      317 -5.11280e+04     -6.54e-05\npolygon 36 (hole)       36 -4.01660e+04     -5.14e-05\npolygon 37              30  2.80002e+04      3.58e-05\npolygon 38              27  1.50315e+04      1.92e-05\npolygon 39              15  4.03300e+04      5.16e-05\npolygon 40            1045  4.44510e+06      5.68e-03\npolygon 41 (hole)       13 -3.91907e+02     -5.01e-07\npolygon 42              47  3.82087e+04      4.89e-05\npolygon 43              65  8.42861e+04      1.08e-04\npolygon 44             478  2.06120e+06      2.64e-03\npolygon 45             266  1.50631e+06      1.93e-03\npolygon 46             234  4.72886e+05      6.05e-04\npolygon 47              14  5.86546e+03      7.50e-06\npolygon 48              83  5.28920e+03      6.76e-06\npolygon 49              75  1.73526e+04      2.22e-05\npolygon 50             148  3.10395e+03      3.97e-06\npolygon 51             142  3.22293e+03      4.12e-06\npolygon 52              45  2.51218e+03      3.21e-06\npolygon 53              40  1.38607e+04      1.77e-05\npolygon 54              10  4.90942e+02      6.28e-07\npolygon 55              95  5.96187e+04      7.62e-05\npolygon 56 (hole)        4 -1.86410e-02     -2.38e-11\npolygon 57              64  3.43149e+04      4.39e-05\npolygon 58 (hole)        3 -1.98390e-03     -2.54e-12\npolygon 59 (hole)        3 -5.55856e-03     -7.11e-12\npolygon 60 (hole)        3 -5.12482e-03     -6.55e-12\npolygon 61 (hole)        3 -1.96410e-03     -2.51e-12\npolygon 62 (hole)        4 -1.13774e-02     -1.46e-11\npolygon 63             155  2.67502e+05      3.42e-04\npolygon 64             106  3.04104e+03      3.89e-06\npolygon 65            1027  1.27782e+06      1.63e-03\npolygon 66 (hole)        3 -3.23310e-04     -4.13e-13\npolygon 67 (hole)        3 -1.16959e-03     -1.50e-12\npolygon 68 (hole)        3 -1.46474e-03     -1.87e-12\npolygon 69             211  4.70521e+05      6.02e-04\npolygon 70               4  2.69313e+02      3.44e-07\npolygon 71             132  9.53357e+04      1.22e-04\npolygon 72               6  4.50259e+02      5.76e-07\npolygon 73             285  1.61128e+06      2.06e-03\npolygon 74              91  1.49663e+04      1.91e-05\npolygon 75              71  8.18750e+03      1.05e-05\npolygon 76             668  5.40368e+07      6.91e-02\npolygon 77              77  3.29939e+05      4.22e-04\npolygon 78             711  1.28815e+07      1.65e-02\npolygon 79 (hole)        3 -3.41405e-01     -4.37e-10\npolygon 80              44  2.26577e+03      2.90e-06\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units\n                     (53730 x 34510 units)\nWindow area = 781945000 square units\nFraction of frame area: 0.422\n\n\n\n\nExtracting events to our boundary (owin)\nLooks a bit like python, will be very useful in the future. Couples the polygon with the events within it into one entity.\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\nhead(childcareSG_ppp)\n\nPlanar point pattern: 6 points\nwindow: polygonal boundary\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units\n\n\n\n\nPloting events within the boundary\nPlot the new ppp object\n\nplot(childcareSG_ppp)"
  },
  {
    "objectID": "HandsOnEx/HE3/HE3.html#first-order-spatial-point-patterns-analysis",
    "href": "HandsOnEx/HE3/HE3.html#first-order-spatial-point-patterns-analysis",
    "title": "Hands-On Exercise 3: 1st & 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "3.0 First-order Spatial Point Patterns Analysis",
    "text": "3.0 First-order Spatial Point Patterns Analysis\n\n3.1 Kernel Density Estimation (KDE)\n\nAutomatic bandwidth selection\nIn this case, the method is diggle. The smoothing kernel is gaussian and we enable edge bias correction.\n\nkde_childcareSG.bw &lt;- density(childcareSG_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(kde_childcareSG.bw)\n\n\n\n\n\n\n\n\nIn the previous plot, the density values of the output range are unacceptably low and difficult to interpret.\n\n\nCheck the selected bandwidth\n\nbw &lt;- bw.diggle(childcareSG_ppp)\nbw\n\n   sigma \n303.8831 \n\n\n\n\nRescaling KDE values\nRescale with a conversion factor of 1000, calling it ‘KM’. The name is optional.\n\nchildcareSG_ppp.km &lt;- rescale(childcareSG_ppp, 1000, \"km\")\nkde_childcareSG.bw &lt;- density(childcareSG_ppp.km,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(kde_childcareSG.bw)\n\n\n\n\n\n\n\n\nWe fixed the density values of the output!\n\n\n\n3.2 Different bandwidth selection methods\n\nFour Spatstat bandwidth calculation functions\n\nbw.CvL(childcareSG_ppp.km)\n\n   sigma \n4.830569 \n\nbw.scott(childcareSG_ppp.km)\n\n sigma.x  sigma.y \n2.160569 1.395324 \n\nbw.ppl(childcareSG_ppp.km)\n\n    sigma \n0.2483881 \n\nbw.diggle(childcareSG_ppp.km)\n\n    sigma \n0.3038831 \n\n\n\n\nComparing diggle and ppl\npar(mfrow=c(1,2)) Will be useful in the future for comparing multiple representations\n\nkde_childcareSG.ppl &lt;- density(childcareSG_ppp.km, \n                               sigma=bw.ppl, \n                               edge=TRUE,\n                               kernel=\"gaussian\")\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"bw.diggle\")\nplot(kde_childcareSG.ppl, main = \"bw.ppl\")\n\n\n\n\n\n\n\n\n\n\n\n3.3 Applying different bandwidth selection methods\nIn each method, the differences are quite subtle. Should experiment with more than 1 method when trying to plot KDE.\n\npar(mfrow=c(2,2))\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"Gaussian\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"epanechnikov\"), \n     main=\"Epanechnikov\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"quartic\"), \n     main=\"Quartic\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"disc\"), \n     main=\"Disc\")"
  },
  {
    "objectID": "HandsOnEx/HE3/HE3.html#fixed-and-adaptive-kde",
    "href": "HandsOnEx/HE3/HE3.html#fixed-and-adaptive-kde",
    "title": "Hands-On Exercise 3: 1st & 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "4.0 Fixed and Adaptive KDE",
    "text": "4.0 Fixed and Adaptive KDE\n\n4.1 Fixed Bandwidth\nIn this example, sigma is set to 0.6. With respect to the unit, kilometers, this represents 600m or 0.6 KM.\n\nkde_childcareSG_600 &lt;- density(childcareSG_ppp.km, sigma=0.6, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG_600)\n\n\n\n\n\n\n\n\n\n\n4.2 Adaptive bandwidth\nFixed bandwidth is sensitive to highly skewed distributions of spatial points. Using Adaptive bandwidth solves this issue.\n\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\nplot(kde_childcareSG_adaptive)\n\n\n\n\n\n\n\n\n\nComparing fixed and adaptive bandwidth\n\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")\n\n\n\n\n\n\n\n\n\n\n\n4.3 KDE output to grid object\n\ngridded_kde_childcareSG_bw &lt;- as.SpatialGridDataFrame.im(kde_childcareSG.bw)\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\n\n\n\n\nConversion to raster\nThe gridded KDE object can be converted into a raster layer. Remember to set the CRS.\n\nkde_childcareSG_bw_raster &lt;- raster(gridded_kde_childcareSG_bw)\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.419757, 0.2695907  (x, y)\nextent     : 2.667538, 56.39644, 15.74872, 50.25633  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -1.10545e-14, 37.61129  (min, max)\n\n\n\nprojection(kde_childcareSG_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.419757, 0.2695907  (x, y)\nextent     : 2.667538, 56.39644, 15.74872, 50.25633  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -1.10545e-14, 37.61129  (min, max)\n\n\n\n\n\n4.4 tmap visualisation\nRaster values are coded onto raster pixels in the v field.\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\n\n\n\n\n\n4.5 Comparing spatial point patterns with KDE\n\nExtracting study areas\nImportant process: Remember this syntax to extract study areas.\n\npg = mpsz[mpsz@data$PLN_AREA_N == \"PUNGGOL\",]\ntm = mpsz[mpsz@data$PLN_AREA_N == \"TAMPINES\",]\nck = mpsz[mpsz@data$PLN_AREA_N == \"CHOA CHU KANG\",]\njw = mpsz[mpsz@data$PLN_AREA_N == \"JURONG WEST\",]\n\nPlot the areas to confirm\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Punggol\")\nplot(tm, main = \"Tampines\")\nplot(ck, main = \"Choa Chu Kang\")\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\n\n\nConvert the areas into generic sp\n\npg_sp = as(pg, \"SpatialPolygons\")\ntm_sp = as(tm, \"SpatialPolygons\")\nck_sp = as(ck, \"SpatialPolygons\")\njw_sp = as(jw, \"SpatialPolygons\")\n\nThen into owin\n\npg_owin = as(pg_sp, \"owin\")\ntm_owin = as(tm_sp, \"owin\")\nck_owin = as(ck_sp, \"owin\")\njw_owin = as(jw_sp, \"owin\")\n\nUse the same python-like syntax to extract only events within the respective areas\n\nchildcare_pg_ppp = childcare_ppp[pg_owin]\nchildcare_tm_ppp = childcare_ppp[tm_owin]\nchildcare_ck_ppp = childcare_ppp[ck_owin]\nchildcare_jw_ppp = childcare_ppp[jw_owin]\n\nRescale like we did before to transform the unit from meter to kilometer\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\n\n\nPlot multiple study areas\n\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")\n\n\n\n\n\n\n\n\n\n\nCompute KDE for each study region (Automatic bandwidth).\nIn this example, we use diggle, edge bias correction and a gaussian smoothing kernel.\n\npar(mfrow=c(2,2))\nplot(density(childcare_pg_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")\nplot(density(childcare_ck_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\n\n\n\n\n\n\n\n\n\n\nCompute KDE for each study region (Fixed bandwidth).\nBandwidth set to 250m\n\npar(mfrow=c(2,2))\nplot(density(childcare_ck_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Chou Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\nplot(density(childcare_pg_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")\n\n\n\n\n\n\n\n\n\n\n\n4.6 Nearest Neighbour Analysis\nThe Clark-Evans test of aggregation.\nH0: Random distribution\nH1: Not randomly distributed\n\nclarkevans.test(childcareSG_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcareSG_ppp\nR = 0.51323, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nFrom the above result, the R value indicates clustering. the p-value shows that this is a statistically significant result\n\nClark Evans test on CCK\n\nclarkevans.test(childcare_ck_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_ck_ppp\nR = 0.83087, p-value = 0.005382\nalternative hypothesis: two-sided\n\n\nThe p value indicates that we cannot reject the null hypothesis\n\n\nClark Evans test on Tampines\n\nclarkevans.test(childcare_tm_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_tm_ppp\nR = 0.66979, p-value = 8.317e-12\nalternative hypothesis: two-sided\n\n\nThe R value indicates clustering and the P value indicates that this is a statistically significant result."
  },
  {
    "objectID": "HandsOnEx/HE3/HE3.html#nd-order-spatial-point-patterns-analysis-methods",
    "href": "HandsOnEx/HE3/HE3.html#nd-order-spatial-point-patterns-analysis-methods",
    "title": "Hands-On Exercise 3: 1st & 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.0 2nd Order Spatial Point Patterns Analysis Methods",
    "text": "5.0 2nd Order Spatial Point Patterns Analysis Methods\n\n5.1 Analysing Spatial Point Process with the G-Function\n\nCCK Planning Area Complete Spatial Randomness (CSR) Test\n\nG_CK = Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500))\n\n\n\n\n\n\n\nG_CK.csr &lt;- envelope(childcare_ck_ppp, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(G_CK.csr)\n\n\n\n\n\n\n\n\n\n\nCCK Planning Area Complete Spatial Randomness (CSR) Test\nNote the change in correction method\n\nG_tm.csr &lt;- envelope(childcare_tm_ppp, Gest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(G_tm.csr)\n\n\n\n\n\n\n\n\n\n\n\n5.2 Analysing Spatial Point Process with the F-Function\nThe empty space function. Compute the F-Function then perform the complete spatial randomness test.\n\nCCK F-Function\n\nF_CK = Fest(childcare_ck_ppp)\nplot(F_CK)\n\n\n\n\n\n\n\nF_CK.csr &lt;- envelope(childcare_ck_ppp, Fest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(F_CK.csr)\n\n\n\n\n\n\n\n\n\n\nTampines F-Function & Monte Carlo Test\n\nF_tm = Fest(childcare_tm_ppp, correction = \"best\")\nplot(F_tm)\n\n\n\n\n\n\n\nF_tm.csr &lt;- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(F_tm.csr)\n\n\n\n\n\n\n\n\n\n\n\n5.3 Analysing Spatial Point Process Using K-Function\n\nCCK K-Function\n\nK_ck = Kest(childcare_ck_ppp, correction = \"Ripley\")\nplot(K_ck, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\nK_ck.csr &lt;- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\nplot(K_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n\n\n\n\n\n\n\n\n\n\nTampines K-Function\n\nK_tm = Kest(childcare_tm_ppp, correction = \"Ripley\")\nplot(K_tm, . -r ~ r, \n     ylab= \"K(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n\nK_tm.csr &lt;- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\nplot(K_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"K(d)-r\", xlim=c(0,500))\n\n\n\n\n\n\n\n\n\n\n\n5.4 Analysing Spatial Point Process Using L-Function\n\nCCK L Function\n\nL_ck = Lest(childcare_ck_ppp, correction = \"Ripley\")\nplot(L_ck, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\nL_ck.csr &lt;- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\nplot(L_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n\n\n\n\nTampines L Function\n\nL_tm = Lest(childcare_tm_ppp, correction = \"Ripley\")\nplot(L_tm, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n\nL_tm.csr &lt;- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\nplot(L_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"L(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "HandsOnEx/HE2/HE2.html",
    "href": "HandsOnEx/HE2/HE2.html",
    "title": "Hands-On Exercise 2: GeoVisualisation and Analytical Mapping",
    "section": "",
    "text": "Thematic mapping: Use map symbols to represent otherwise elusive variables and make use of human pattern-recognition\n\n\n\n\nI can use proportional symbols, shapes with attributes proportionate to a variable, to annotate maps. This is easier than counting a lot of little dots. It also preserves the location of the measured phenomena.\nSome things to keep in mind when I use them is to make sure the sizes of each symbols are managed such that they do not crowd the map. I also need to keep the scale of the shapes in mind. This is because for a given circle, doubling the radius would actually increase the area by 4 times.\nProportional symbols are very useful since I can display multiple related variables on points in a map as long as I keep readability in mind.\n\n\n\nProportional symbols use shapes and sizes to display information while choropleth maps focus on colours. Instead of using shape sizes, we can use a scale of colours to display information for a region.\nIn this case, we need to be aware that aggregation districts (like borders of countries on a map) may not correlate with the actual area studied, it may only be a small part.\nChoropleth maps should be used to depict quantitative data that applies to the whole of a given region on the map.\nNormalisation lets us depict variables independent of a given region’s size. Normalisation should be done carefully on certain variables to more clearly express a narrative or idea.\nEnsure color progressions are chosen to clearly express information, perhaps drawing on existing preconceptions and association. E.g. blue is cold, red is hot for a average temperature map\n\n\n\nBe careful while deciding where to split numerical data into different classes.\n\nEqual Interval: For evenly, generally spread data across the whole range without gaps or largely skewed data. Beware of over/unused ranges\nQuantiles: Evenly distribute the number of observations per class. May group very different observations together for evenness.\nNatural Breaks: Break at dips in the histogram of observations. Optimal for the dataset but makes it difficult to compare to other datasets.\nManual: If all else fails, it can be reasonable to set the breaks yourself.\n\n\n\n\nEDA will help us choose the most appropriate choropleth map parameters. - Normal distribution: SD Classification - Uniform distribution: Even Class Width Classification\nConsider when checking histograms: - Include record with zero or missing values? - Distributions - Sample sizes\nChoropleth maps are good with summarised data, namely totals or ratios. May or may not involve area.\nKolmogorov-Sminov test: Checks for uniform distribution. Ensure significance level is over 0.05\nConsider making more than 1 map on the same data to allow readers to compare them.\nConsider removing outliers and extreme values because they can impact distributions. Define outliers with z values, e.g. +-3"
  },
  {
    "objectID": "HandsOnEx/HE2/HE2.html#overview",
    "href": "HandsOnEx/HE2/HE2.html#overview",
    "title": "Hands-On Exercise 2: GeoVisualisation and Analytical Mapping",
    "section": "",
    "text": "Thematic mapping: Use map symbols to represent otherwise elusive variables and make use of human pattern-recognition\n\n\n\n\nI can use proportional symbols, shapes with attributes proportionate to a variable, to annotate maps. This is easier than counting a lot of little dots. It also preserves the location of the measured phenomena.\nSome things to keep in mind when I use them is to make sure the sizes of each symbols are managed such that they do not crowd the map. I also need to keep the scale of the shapes in mind. This is because for a given circle, doubling the radius would actually increase the area by 4 times.\nProportional symbols are very useful since I can display multiple related variables on points in a map as long as I keep readability in mind.\n\n\n\nProportional symbols use shapes and sizes to display information while choropleth maps focus on colours. Instead of using shape sizes, we can use a scale of colours to display information for a region.\nIn this case, we need to be aware that aggregation districts (like borders of countries on a map) may not correlate with the actual area studied, it may only be a small part.\nChoropleth maps should be used to depict quantitative data that applies to the whole of a given region on the map.\nNormalisation lets us depict variables independent of a given region’s size. Normalisation should be done carefully on certain variables to more clearly express a narrative or idea.\nEnsure color progressions are chosen to clearly express information, perhaps drawing on existing preconceptions and association. E.g. blue is cold, red is hot for a average temperature map\n\n\n\nBe careful while deciding where to split numerical data into different classes.\n\nEqual Interval: For evenly, generally spread data across the whole range without gaps or largely skewed data. Beware of over/unused ranges\nQuantiles: Evenly distribute the number of observations per class. May group very different observations together for evenness.\nNatural Breaks: Break at dips in the histogram of observations. Optimal for the dataset but makes it difficult to compare to other datasets.\nManual: If all else fails, it can be reasonable to set the breaks yourself.\n\n\n\n\nEDA will help us choose the most appropriate choropleth map parameters. - Normal distribution: SD Classification - Uniform distribution: Even Class Width Classification\nConsider when checking histograms: - Include record with zero or missing values? - Distributions - Sample sizes\nChoropleth maps are good with summarised data, namely totals or ratios. May or may not involve area.\nKolmogorov-Sminov test: Checks for uniform distribution. Ensure significance level is over 0.05\nConsider making more than 1 map on the same data to allow readers to compare them.\nConsider removing outliers and extreme values because they can impact distributions. Define outliers with z values, e.g. +-3"
  },
  {
    "objectID": "HandsOnEx/HE2/HE2.html#setup",
    "href": "HandsOnEx/HE2/HE2.html#setup",
    "title": "Hands-On Exercise 2: GeoVisualisation and Analytical Mapping",
    "section": "2.0 Setup",
    "text": "2.0 Setup\n\n2.1 Requirements\n\nsf: Simple features access for R. Includes importing, managing and processing data.\ntidyverse: A set of R packages for data science, which includes visualisation. Includes the 3 packages below\nreadr: Import delimited text files like csvs\ntidyr: For tidying data\ndplyr: Data wrangling\ntmap: Thematic map library\n\n\n\n2.2 Data\n\nMaster Plan 2014 Subzone Boundary (Web) from data.gov.sg\nSingapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2011-2020 from Department of Statistics, Singapore\n\n\n\n2.3 Importing Data and Packages\n\npacman::p_load(sf, tmap, tidyverse)\n\n\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/HandsOnEx/HE2/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\nRows: 984656 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n2.4 Data Wrangling\n\npopdata2020\nPipes here are quite useful to pass the same data to a chain of functions without too many brackets, indentations or variables.\n\nfilter: Keep rows matching a condition\ngroup_by: Group the data by the PA, SZ and AG columns\nsummarise: Creates a new data frame with one row as a summary. In this case, a sum of the Pop column\nungroup: Reverse of group_by\npivot_wider: Pivot the dataframe, the row come from the AG column and the values come from Pop\nmutate: Add new columns derived from other columns, in this case the sum of other columns\nselect: Extract specific columns from a dataframe\n\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup()%&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n\n\n\n\nJoining attribute and geospatial data\n\nhead(popdata2020)\n\n# A tibble: 6 × 7\n  PA         SZ                    YOUNG `ECONOMY ACTIVE`  AGED TOTAL DEPENDENCY\n  &lt;chr&gt;      &lt;chr&gt;                 &lt;dbl&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1 Ang Mo Kio Ang Mo Kio Town Cent…  1440             2610   760  4810      0.843\n2 Ang Mo Kio Cheng San              6640            15460  6050 28150      0.821\n3 Ang Mo Kio Chong Boon             6150            13950  6470 26570      0.905\n4 Ang Mo Kio Kebun Bahru            5540            12090  5120 22750      0.882\n5 Ang Mo Kio Sembawang Hills        2100             3410  1310  6820      1    \n6 Ang Mo Kio Shangri-La             3960             8420  3610 15990      0.899\n\nhead(mpsz)\n\nSimple feature collection with 6 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 24468.89 ymin: 28369.47 xmax: 32362.39 ymax: 30542.74\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n6        6          7 ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6         BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6 29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n\n\nmpsz names are all capitalised but popdata2020 is not. Capitalise all characters in the popdata2020 dataframe.\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nWe may now join the two data frames on the standardised, capitalised names\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\nSave the data as an r object\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "HandsOnEx/HE2/HE2.html#choropleth-maping-geospatial-data-using-tmap",
    "href": "HandsOnEx/HE2/HE2.html#choropleth-maping-geospatial-data-using-tmap",
    "title": "Hands-On Exercise 2: GeoVisualisation and Analytical Mapping",
    "section": "3.0 Choropleth Maping Geospatial Data Using tmap",
    "text": "3.0 Choropleth Maping Geospatial Data Using tmap\n\n3.1 Quick Thematic Plot with qtm\nDo a quick thematic plot with qtm as an easy default visualisation. - tmap_mode(\"plot\") creates a static map - tmap_mode(\"view\") creates an interactive map\nfill determines the variable to map\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\n3.2 tmap Elements\n\ntm_shape the dataframe\ntm_fill\n\nDEPENDENCY variable to map\nstyle=\"quantile\" How to split the numerical data\npalette=\"Blues\" Colour palette\ntitle Self-explanatory\n\ntm_layout\n\nInclude parameters for the title, legend and frame\n\ntm_borders\n\nAesthetic purposes\n\ntm_compass\n\nAdds a compass, it looks cool\n\ntm_scale_bar\n\nAdds a scale bar, it is also cool\n\ntm_grid\n\nAdds a grid, which makes the map easier to read\n\ntm_credits\n\nCredits for the map, will use to add my name to my cool maps\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\nDrawing the Base Map\nUse tm_shape() followed by either tm_fill or tm_polygons(). Here we use the latter to plot a base map.\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\n\n\n\n\nDraw a Choropleth Map with tm_polygons\nDoes the same as tm_fill and tm_border.\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\ntm_fill Only\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\ntm_fill and tm_borders\nCan customise the border width, color and transparency\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.5,  alpha = 1, col='pink')\n\n\n\n\n\n\n\n\n\n\n\n3.3 Data Classification with t_map\n\nClassification Methods\nfixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks\nDefine it in tm_fill or tm_polygons\n\n\nJenks example with 5 classes\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nEqual example with 5 classes\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n3.4 Choropleth Maps with Custom Breaks\n\nFind the Data’s Quartiles and Mean\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7866  0.8585  0.8763 19.0000      92 \n\n\n\n\nDefine the breaks in tm_fill\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\nWarning: Values have found that are higher than the highest break"
  },
  {
    "objectID": "HandsOnEx/HE2/HE2.html#colours-and-formats",
    "href": "HandsOnEx/HE2/HE2.html#colours-and-formats",
    "title": "Hands-On Exercise 2: GeoVisualisation and Analytical Mapping",
    "section": "4.0 Colours and Formats",
    "text": "4.0 Colours and Formats\n\n4.1 Blues, Greens, or any Colour from ColourBrewer\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n4.2 Reverse Shading\nUse the - to reverse the shading\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n4.3 Legend, Title and General Formatting\nThere’s a lot to unpack here, this is an almost maximal example.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n4.4 tmap_style\nMaking the map look like something out of Indiana Jones\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\ntmap style set to \"classic\"\n\n\nother available styles are: \"white\", \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"watercolor\" \n\n\n\n\n\n\n\n\n\n\n\n4.5 Cartographic Furniture\nThings like the scale bar, compass and grid\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\nReset the Style\n\ntmap_style(\"white\")\n\ntmap style set to \"white\"\n\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\""
  },
  {
    "objectID": "HandsOnEx/HE2/HE2.html#small-multiples",
    "href": "HandsOnEx/HE2/HE2.html#small-multiples",
    "title": "Hands-On Exercise 2: GeoVisualisation and Analytical Mapping",
    "section": "5.0 Small Multiples",
    "text": "5.0 Small Multiples\n\n5.1 Same Map, Different Variables/Columns\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\ntmap style set to \"white\"\n\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\n\n\n\n\n\n\n\n\nSecond example with different colours. Very nice to compare.\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n\n5.2 Facets\nPlot small maps, each representing subsections of the overall map.\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\nWarning: The argument drop.shapes has been renamed to drop.units, and is\ntherefore deprecated\n\n\n\n\n\n\n\n\n\n\n\n5.3 Multiple, Standalone Maps\nCreate the maps first, then arrange them in a grid-like fashion with tmap_arrange\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n5.4 Selection Criteria\nUse a selection function to map objects meeting the selection criteria. Good alternative to small multiples\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\nWarning in pre_process_gt(x, interactive = interactive, orig_crs =\ngm$shape.orig_crs): legend.width controls the width of the legend within a map.\nPlease use legend.outside.size to control the width of the outside legend\n\n\n\n\n\n\n\n\n\n\nSome Experimentation\n\nhead(mpsz_pop2020)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 24468.89 ymin: 28369.47 xmax: 32362.39 ymax: 30542.74\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n6        6          7 ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6         BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n    Y_ADDR SHAPE_Leng SHAPE_Area              PA YOUNG ECONOMY ACTIVE AGED\n1 29220.19   5267.381  1630379.3            &lt;NA&gt;    NA             NA   NA\n2 29782.05   3506.107   559816.2          OUTRAM  1200           2860 2120\n3 29974.66   1740.926   160807.5 SINGAPORE RIVER     0             40   10\n4 29933.77   3313.625   595428.9     BUKIT MERAH  3150           6900 3320\n5 30005.70   2825.594   387429.4     BUKIT MERAH  2900           6020 1740\n6 29991.38   4428.913  1030378.8     BUKIT MERAH  3340           6800 3420\n  TOTAL DEPENDENCY                       geometry\n1    NA         NA MULTIPOLYGON (((31495.56 30...\n2  6180  1.1608392 MULTIPOLYGON (((29092.28 30...\n3    50  0.2500000 MULTIPOLYGON (((29932.33 29...\n4 13370  0.9376812 MULTIPOLYGON (((27131.28 30...\n5 10660  0.7707641 MULTIPOLYGON (((26451.03 30...\n6 13560  0.9941176 MULTIPOLYGON (((25899.7 297...\n\n\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$PLN_AREA_N==\"YISHUN\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Reds\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n    tm_layout(main.title = \"Distribution of Dependency Ratio in Yishun (Quantile)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = TRUE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\nWarning in pre_process_gt(x, interactive = interactive, orig_crs =\ngm$shape.orig_crs): legend.width controls the width of the legend within a map.\nPlease use legend.outside.size to control the width of the outside legend"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Geospatial Analytics and Applications",
    "section": "",
    "text": "Welcome to my IS415 Geospatial Analytics and Applications website! This website documents my weekly learning, progress and notes. I hope this will be as useful to you as it was to me!\nNote: Hands On Exercise 6 is Merged with Hands On Exercise 5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn-Class Exercise 5: Global and Local Measures of Spatial Autocorrelation\n\n\n\n\n\n\nIn-class Exercise\n\n\n\nIn-class exercise 5 \n\n\n\n\n\nFeb 5, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\n\n\n\n\n\n\nHands-On Exercise 5 & 6: Global and Local Measures of Spatial Autocorrelation\n\n\n\n\n\n\nHands-On Exercise\n\n\n\nGlobal and Local Measures of Spatial Autocorrelation \n\n\n\n\n\nFeb 3, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\n\n\n\n\n\n\nIn-Class Exercise 4: Spatial Weights and Applications\n\n\n\n\n\n\nIn-class Exercise\n\n\n\nIn-class exercise 4 \n\n\n\n\n\nJan 29, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\n\n\n\n\n\n\nHands-On Exercise 4: Spatial Weights and Applications\n\n\n\n\n\n\nHands-On Exercise\n\n\n\nComputing spatial weights with R \n\n\n\n\n\nJan 27, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\n\n\n\n\n\n\nIn-Class Exercise 3: Kernel Density Estimation\n\n\n\n\n\n\nIn-class Exercise\n\n\n\nIn-class exercise 3 \n\n\n\n\n\nJan 22, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\n\n\n\n\n\n\nIn-Class Exercise 3.1: Kernel Density Estimation\n\n\n\n\n\n\nIn-class Exercise\n\n\n\nIn-class exercise 3.1 \n\n\n\n\n\nJan 22, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\n\n\n\n\n\n\nTake-Home Exercise 1\n\n\n\n\n\n\nTake-Home Exercise\n\n\n\nTake-Home Exercise 1 \n\n\n\n\n\nJan 19, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\n\n\n\n\n\n\nHands-On Exercise 3: 1st & 2nd Order Spatial Point Patterns Analysis Methods\n\n\n\n\n\n\nHands-On Exercise\n\n\nsf\n\n\ntmap\n\n\nspatstat\n\n\nraster\n\n\nmaptools\n\n\n\nExploring spatial point patterns and methods to identify and analyse these patterns. First-order methods include kernel density estimation and bandwidth selection methods while second-order methods include F, G, K and L functions. \n\n\n\n\n\nJan 18, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\n\n\n\n\n\n\nIn-Class Exercise 2\n\n\n\n\n\n\nIn-class Exercise\n\n\n\nIn-class exercise 2 description \n\n\n\n\n\nJan 15, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\n\n\n\n\n\n\nHands-On Exercise 2: GeoVisualisation and Analytical Mapping\n\n\n\n\n\n\nHands-On Exercise\n\n\ntidyverse\n\n\nsf\n\n\ntmap\n\n\n\nI’m going to learn how to plot meaningfully annotated maps called choropleth maps. \n\n\n\n\n\nJan 11, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\n\n\n\n\n\n\nHands-On Exercise 1: Geospatial Data Science with R\n\n\n\n\n\n\nHands-On Exercise\n\n\ntidyverse\n\n\nsf\n\n\nggplot2\n\n\n\nThis is my first go at R programming. I tried out pacman, sf, tidyverse and ggplot2. I’m going to be using ggplot2 more, it makes really cool graphics. \n\n\n\n\n\nJan 7, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\n\n\n\n\n\n\nAbout me\n\n\n\n\n\n\nOthers\n\n\n\n“I’m Matthew Ho, a Y3 CS student in the Cyberphysical Systems track. I hope to learn about geospatial analytics and apply this to distributed IoT systems.” \n\n\n\n\n\nJan 6, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About me",
    "section": "",
    "text": "I’m Matthew Ho, a Y3 CS student in the Cyberphysical Systems track. I hope to learn about geospatial analytics and apply this to distributed IoT systems."
  },
  {
    "objectID": "about.html#about-me",
    "href": "about.html#about-me",
    "title": "About me",
    "section": "",
    "text": "I’m Matthew Ho, a Y3 CS student in the Cyberphysical Systems track. I hope to learn about geospatial analytics and apply this to distributed IoT systems."
  },
  {
    "objectID": "about.html#this-website",
    "href": "about.html#this-website",
    "title": "About me",
    "section": "This Website",
    "text": "This Website\nThis website provides more visually appealing and consolidated insights into my geospatial analytics learnings."
  },
  {
    "objectID": "InClassEx/ICE3/ICE3.html",
    "href": "InClassEx/ICE3/ICE3.html",
    "title": "In-Class Exercise 3: Kernel Density Estimation",
    "section": "",
    "text": "Points as events, relates to activities\nIssues with points: Highly affected by the size of the ‘dots’. KDE is more consistent\nThe points MUST be a population. Cannot be a sample or we will have sample bias.\n\n\n\n\n\nChoose bandwidth\nChoose a kernel\n\n\n\n\n\nConstrained by network\n\n\n\n\n\nAccounts for both time and location"
  },
  {
    "objectID": "InClassEx/ICE3/ICE3.html#simple-visualisations",
    "href": "InClassEx/ICE3/ICE3.html#simple-visualisations",
    "title": "In-Class Exercise 3: Kernel Density Estimation",
    "section": "2.0 Simple Visualisations",
    "text": "2.0 Simple Visualisations\n\nplot(mpsz_sf)\n\n\n\n\n\n\n\n\n\ntmap_mode('view')\ntm_shape(childcare_sf) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\ntmap_mode('plot')\n\n\n2.1 Plot the ppp object within the owin\n\nplot(childcare_ppp[sg_owin])\n\n\n\n\n\n\n\n\n\n\n2.2 Using the filter method\n\npg = mpsz_sf %&gt;% filter(PLN_AREA_N == \"PUNGGOL\")\ntm = mpsz_sf %&gt;% filter(PLN_AREA_N == \"TAMPINES\")\nck = mpsz_sf %&gt;% filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw = mpsz_sf %&gt;% filter(PLN_AREA_N == \"JURONG WEST\")\n\n\nExtras\n\npar(mfrow=c(2,2))\nplot(pg[\"SUBZONE_N\"])\n\n\n\n\n\n\n\nplot(tm[\"SUBZONE_N\"])\n\n\n\n\n\n\n\nplot(ck[\"SUBZONE_N\"])\n\n\n\n\n\n\n\nplot(jw[\"SUBZONE_N\"])"
  },
  {
    "objectID": "InClassEx/ICE3/ICE3.html#setup",
    "href": "InClassEx/ICE3/ICE3.html#setup",
    "title": "In-Class Exercise 3: Kernel Density Estimation",
    "section": "1.0 Setup",
    "text": "1.0 Setup\n\n1.1 Dependencies\n\npacman::p_load(tidyverse, sf, tmap, maptools, spatstat, raster)\n\n\n\n1.2 Importing and Changing CRS\n\nchildcare_sf &lt;- st_read(\"data/geospatial/ChildCareServices.geojson\") %&gt;% \n  st_transform(crs=3414)\n\nReading layer `ChildCareServices' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/InClassEx/ICE3/data/geospatial/ChildCareServices.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\nmpsz_sf &lt;- st_read(dsn = \"data/geospatial/\", layer=\"MP14_SUBZONE_WEB_PL\") %&gt;%\n  st_transform(crs=3414)\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/InClassEx/ICE3/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nst_crs(childcare_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n1.3 Deriving Coastal Outline\n\nsg_sf &lt;- st_union(mpsz_sf)\n\n\nImportant: 1 Liner conversion\n\nchildcare_ppp &lt;- as.ppp(childcare_sf)\nsummary(childcare_ppp)\n\nMarked planar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n     1545 character character \n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\n\n\n\n\n1.4 Removing Duplicates\n\nany(duplicated(childcare_ppp))\n\n[1] FALSE\n\nchildcare_ppp_jit &lt;- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE\n\n\n\nAnother one-liner\n\nsg_owin &lt;- as.owin(sg_sf, \"owin\")\nsg_owin\n\nwindow: polygonal boundary\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units"
  },
  {
    "objectID": "InClassEx/ICE3/ICE3.html#section",
    "href": "InClassEx/ICE3/ICE3.html#section",
    "title": "In-Class Exercise 3: Kernel Density Estimation",
    "section": "3.0",
    "text": "3.0"
  },
  {
    "objectID": "InClassEx/ICE3/ICE3.html#class-notes",
    "href": "InClassEx/ICE3/ICE3.html#class-notes",
    "title": "In-Class Exercise 3: Kernel Density Estimation",
    "section": "",
    "text": "Points as events, relates to activities\nIssues with points: Highly affected by the size of the ‘dots’. KDE is more consistent\nThe points MUST be a population. Cannot be a sample or we will have sample bias.\n\n\n\n\n\nChoose bandwidth\nChoose a kernel\n\n\n\n\n\nConstrained by network\n\n\n\n\n\nAccounts for both time and location"
  },
  {
    "objectID": "InClassEx/ICE3/ICE3_1.html",
    "href": "InClassEx/ICE3/ICE3_1.html",
    "title": "In-Class Exercise 3.1: Kernel Density Estimation",
    "section": "",
    "text": "Points as events, relates to activities\nIssues with points: Highly affected by the size of the ‘dots’. KDE is more consistent\nThe points MUST be a population. Cannot be a sample or we will have sample bias.\n\n\n\n\n\nChoose bandwidth\nChoose a kernel\n\n\n\n\n\nConstrained by network\n\n\n\n\n\nAccounts for both time and location"
  },
  {
    "objectID": "InClassEx/ICE3/ICE3_1.html#class-notes",
    "href": "InClassEx/ICE3/ICE3_1.html#class-notes",
    "title": "In-Class Exercise 3.1: Kernel Density Estimation",
    "section": "",
    "text": "Points as events, relates to activities\nIssues with points: Highly affected by the size of the ‘dots’. KDE is more consistent\nThe points MUST be a population. Cannot be a sample or we will have sample bias.\n\n\n\n\n\nChoose bandwidth\nChoose a kernel\n\n\n\n\n\nConstrained by network\n\n\n\n\n\nAccounts for both time and location"
  },
  {
    "objectID": "InClassEx/ICE3/ICE3_1.html#setup",
    "href": "InClassEx/ICE3/ICE3_1.html#setup",
    "title": "In-Class Exercise 3.1: Kernel Density Estimation",
    "section": "1.0 Setup",
    "text": "1.0 Setup\n\n1.1 Dependencies\n\npacman::p_load(sf, spNetwork, tmap, classInt, viridis, tidyverse)\n\n\n\n1.2 Importing and Changing CRS\n\nnetwork &lt;- st_read(dsn=\"data/geospatial\", layer=\"Punggol_St\")\n\nReading layer `Punggol_St' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/InClassEx/ICE3/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2642 features and 2 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 34038.56 ymin: 40941.11 xmax: 38882.85 ymax: 44801.27\nProjected CRS: SVY21 / Singapore TM\n\nchildcare &lt;- st_read(dsn=\"data/geospatial\", layer=\"Punggol_CC\")\n\nReading layer `Punggol_CC' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/InClassEx/ICE3/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 61 features and 1 field\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 34423.98 ymin: 41503.6 xmax: 37619.47 ymax: 44685.77\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\n\n\n\ntmap_mode('view')\ntm_shape(childcare) +\n  tm_dots() +\n  tm_shape(network) +\n  tm_lines()\n\n\n\n\ntmap_mode('plot')\n\n\nMindist = 0.5 * first param\n\nlixels &lt;- lixelize_lines(network, 750, mindist = 375)\n\n\nsamples &lt;- lines_center(lixels)\n\n\ndensities &lt;- nkde(network, \n                  events=childcare, \n                  w=rep(1, nrow(childcare)), \n                  samples=samples, \n                  kernel_name=\"quartic\", \n                  bw=300, div=\"bw\", \n                  method=\"simple\", \n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1), \n                  max_depth = 8, \n                  agg=5, \n                  sparse=TRUE, \n                  verbose = FALSE)\n\n\nsamples$density &lt;- densities\nlixels$density &lt;- densities\n\n\nsamples$density &lt;- samples$density*1000\nlixels$density &lt;- lixels$density*1000\n\n\ntmap_mode('view')\ntm_shape(lixels) + \n  tm_lines(col=\"density\") + \ntm_shape(childcare) + \n  tm_dots()\n\n\n\n\ntmap_mode('plot')"
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#kde",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#kde",
    "title": "Take-Home Exercise 1",
    "section": "4.0 KDE",
    "text": "4.0 KDE\nAfter all the wrangling, we can finally see our Kernel Density Estimates for origin and destinations! I first tried the quartic kernel with an automatically decided bandwidth, but realised that apart from Changi Airport, the rest of Singapore seemed dark.\n\nOriginsDestinations\n\n\n\norigin_ppp.km &lt;- rescale(origin_ppp, 1000, \"km\")\n\norigin.bw &lt;- density(origin_ppp.km,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"quartic\") \nplot(origin.bw)\n\n\n\n\n\n\n\n\n\n\n\ndestination_ppp.km &lt;- rescale(destination_ppp, 1000, \"km\")\n\ndestination.bw &lt;- density(destination_ppp.km,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"quartic\") \nplot(destination.bw)\n\n\n\n\n\n\n\n\n\n\n\nI then tried the more gently sloping Gaussian kernel, to little effect.\n\nOriginsDestinations\n\n\n\norigin_ppp.km &lt;- rescale(origin_ppp, 1000, \"km\")\n\norigin.bw &lt;- density(origin_ppp.km,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(origin.bw)\n\n\n\n\n\n\n\n\n\n\n\ndestination_ppp.km &lt;- rescale(destination_ppp, 1000, \"km\")\n\ndestination.bw &lt;- density(destination_ppp.km,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(destination.bw)\n\n\n\n\n\n\n\n\n\n\n\nI decided to check the bandwidth derived with the Diggle algorithm, which was surprisingly small, at 8m. I strongly suspect this to be caused by Changi airport, where a huge number of Grab trips start and end at the same few small dropoff/pickup points.\n\nbw &lt;- bw.diggle(destination_ppp.km)\nbw\n\n      sigma \n0.008286046 \n\nbw &lt;- bw.ppl(destination_ppp.km)\nbw\n\n    sigma \n0.1826625 \n\n\nI then tried the PPL algorithm’s bandwidth, which did not have a significant effect either.\n\nOriginsDestinations\n\n\n\norigin_ppp.km &lt;- rescale(origin_ppp, 1000, \"km\")\n\norigin.bw &lt;- density(origin_ppp.km,\n                              sigma=bw.ppl,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(origin.bw)\n\n\n\n\n\n\n\n\n\n\n\ndestination_ppp.km &lt;- rescale(destination_ppp, 1000, \"km\")\n\ndestination.bw &lt;- density(destination_ppp.km,\n                              sigma=bw.ppl,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(destination.bw)\n\n\n\n\n\n\n\n\n\n\n\nI then tried to manually set a higher bandwidth in hopes of illuminating the map more.\n\nOriginsDestinations\n\n\n\nsigm &lt;- 0.5\norigin_ppp.km &lt;- rescale(origin_ppp, 1000, \"km\")\n\norigin.bw &lt;- density(origin_ppp.km,\n                              sigma=sigm,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(origin.bw)\n\n\n\n\n\n\n\n\n\n\n\ndestination_ppp.km &lt;- rescale(destination_ppp, 1000, \"km\")\n\ndestination.bw &lt;- density(destination_ppp.km,\n                              sigma=sigm,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(destination.bw)\n\n\n\n\n\n\n\n\n\n\n\n\n4.1 2nd Order Spatial Point Analysis\nI was wondering about whether Grab ride origins and destinations would be clustered. Intuitively, pickup points would form clusters, but I also remember the convenience of a car at your doorstep during the 2019 era, when private hire vehicle rides were affordable.\nTo check if Grab ride origins and destinations were clustered or even, I used the F function.\nThe L function’s advantage over the K function is that it stabilises variances, while still being a representation of spatial dependence over a wider range. Unfortunately, L and K functions are too computationally intensive to run for about 28000 points each since they use more points. The formula the K function also appears to have a summation of a summation, leading me to believe that its runtime is perhaps O(n^2), which would not support 28000 points on my computer.\n\nF_d = Fest(destination_ppp.km)\nF_d.csr &lt;- envelope(destination_ppp.km, Fest, nsim = 249)\n\nGenerating 249 simulations of CSR  ...\n1, 2, 3, 4.6.8.10.12.14.16.18.20.22.24.26.28.30.32.34\n.36.38.40.42.44.46.48.50.52.54.56.58.60.62.64.66.68.70.72.74\n.76.78.80.82.84.86.88.90.92.94.96.98.100.102.104.106.108.110.112.114\n.116.118.120.122.124.126.128.130.132.134.136.138.140.142.144.146.148.150.152.154\n.156.158.160.162.164.166.168.170.172.174.176.178.180.182.184.186.188.190.192.194\n.196.198.200.202.204.206.208.210.212.214.216.218.220.222.224.226.228.230.232.234\n.236.238.240.242.244.246.248\n249.\n\nDone.\n\nplot(F_d.csr)\n\n\n\n\n\n\n\nF_d = Fest(origin_ppp.km)\nF_d.csr &lt;- envelope(destination_ppp.km, Fest, nsim = 249)\n\nGenerating 249 simulations of CSR  ...\n1, 2, 3, 4.6.8.10.12.14.16.18.20.22.24.26.28.30.32.34\n.36.38.40.42.44.46.48.50.52.54.56.58.60.62.64.66.68.70.72.74\n.76.78.80.82.84.86.88.90.92.94.96.98.100.102.104.106.108.110.112.114\n.116.118.120.122.124.126.128.130.132.134.136.138.140.142.144.146.148.150.152.154\n.156.158.160.162.164.166.168.170.172.174.176.178.180.182.184.186.188.190.192.194\n.196.198.200.202.204.206.208.210.212.214.216.218.220.222.224.226.228.230.232.234\n.236.238.240.242.244.246.248\n249.\n\nDone.\n\nplot(F_d.csr)\n\n\n\n\n\n\n\n\nFrom these plots, it is extremely clear that these spatial points are clustered since they fall well below the envelope in both cases!\n\n\n4.2 KDE Insights\nFrom these KDE maps, I observed\n\nChangi Airport and the CBD are frequently the origin and destination for Grab trips\nInterestingly, the maps are different. It seems that there are more trips from presumably more residential areas such as the West and North to the CBD than the other way round. Perhaps people use grab when they are in a rush to get to work and take their time on the way home with public transport.\nIn both the origin and destination KDEs, there is a hotspot in the north, slightly to the west. That could correspond to the Woodlands checkpoint"
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#nkde",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#nkde",
    "title": "Take-Home Exercise 1",
    "section": "5.0 NKDE",
    "text": "5.0 NKDE\n\nStudy Areas\nIn the MPSZ dataset, some areas are conveniently segmented by PLN_AREA, making it easy to extract areas of interest. From the KDE results above, we ca choose several of the interesting zones below for NKDE.\n\nCHANGI: For the airport\nWOODLANDS: For the checkpoint and residential areas\nDOWNTOWN CORE, ORCHARD: The CBD and “town” area\n\n\nsort(unique(mpsz$PLN_AREA_N))\n\n [1] \"ANG MO KIO\"              \"BEDOK\"                  \n [3] \"BISHAN\"                  \"BOON LAY\"               \n [5] \"BUKIT BATOK\"             \"BUKIT MERAH\"            \n [7] \"BUKIT PANJANG\"           \"BUKIT TIMAH\"            \n [9] \"CENTRAL WATER CATCHMENT\" \"CHANGI\"                 \n[11] \"CHANGI BAY\"              \"CHOA CHU KANG\"          \n[13] \"CLEMENTI\"                \"DOWNTOWN CORE\"          \n[15] \"GEYLANG\"                 \"HOUGANG\"                \n[17] \"JURONG EAST\"             \"JURONG WEST\"            \n[19] \"KALLANG\"                 \"LIM CHU KANG\"           \n[21] \"MANDAI\"                  \"MARINA EAST\"            \n[23] \"MARINA SOUTH\"            \"MARINE PARADE\"          \n[25] \"MUSEUM\"                  \"NEWTON\"                 \n[27] \"NORTH-EASTERN ISLANDS\"   \"NOVENA\"                 \n[29] \"ORCHARD\"                 \"OUTRAM\"                 \n[31] \"PASIR RIS\"               \"PAYA LEBAR\"             \n[33] \"PIONEER\"                 \"PUNGGOL\"                \n[35] \"QUEENSTOWN\"              \"RIVER VALLEY\"           \n[37] \"ROCHOR\"                  \"SELETAR\"                \n[39] \"SEMBAWANG\"               \"SENGKANG\"               \n[41] \"SERANGOON\"               \"SIMPANG\"                \n[43] \"SINGAPORE RIVER\"         \"SOUTHERN ISLANDS\"       \n[45] \"STRAITS VIEW\"            \"SUNGEI KADUT\"           \n[47] \"TAMPINES\"                \"TANGLIN\"                \n[49] \"TENGAH\"                  \"TOA PAYOH\"              \n[51] \"TUAS\"                    \"WESTERN ISLANDS\"        \n[53] \"WESTERN WATER CATCHMENT\" \"WOODLANDS\"              \n[55] \"YISHUN\"                 \n\n\n\n\n5.1 Changi Airport\n\nNKDE Data Preparation\nFirst, we restrict the area of our NKDE to CHANGI. We can also remove the possibility of small rocks or outer islands on the map by taking the intersection with merged_sg (Our outline).\nNext, we take only the roads that come into contact with Changi. I did not use st_intersection alone because it cut off some roads into points, and other undesirable geometry. This means that our subset of roads may protrude out of Changi, but that can be solved with the NKDE functions’s study_area parameter and edge correction.\n\nmpsz_changi = mpsz %&gt;% filter(PLN_AREA_N==\"CHANGI\")\nmpsz_changi &lt;- st_intersection(mpsz_changi, merged_sg)\n\nosm_changi_i &lt;- st_intersection(osm_sg, mpsz_changi)\nosm_changi_idxs &lt;- as.numeric(osm_changi_i$osm_id)\nosm_changi &lt;- osm_sg[osm_sg$osm_id %in% osm_changi_idxs, ]\n\nplot(osm_changi)\n\n\n\n\n\n\n\n\nWe also need to take only the events that happened within Changi. We do this with st_intersection. This is much easier since the events are points.\n\nDestinations w/o SnapOrigins w/o SnapDestinations w/ SnapOrigins w/ Snap\n\n\n\ndestination_df.changi = st_intersection(destination_df, mpsz_changi)\norigin_df.changi = st_intersection(origin_df, mpsz_changi)\n\nplot(destination_df.changi)\n\n\n\n\n\n\n\n\n\n\n\nplot(origin_df.changi)\n\n\n\n\n\n\n\n\nAs part of NKDE, the events need to have happened on the network. As such, we use snapPointsToLines2 to ensure that the points are on the network. Points off the network may have occurred due to slight GPS drift.\n\n\n\norigin_df.changi.snapped = snapPointsToLines2(origin_df.changi, osm_changi)\ndestination_df.changi.snapped = snapPointsToLines2(destination_df.changi, osm_changi)\n\nplot(destination_df.changi.snapped)\n\n\n\n\n\n\n\n\n\n\n\nplot(origin_df.changi.snapped)\n\n\n\n\n\n\n\n\n\n\n\nWith our points on the network and study area constrained, we can visualise the events at Changi, especially the airport.\n\ntm_shape(osm_changi) + \n  tm_lines() +\ntm_shape(destination_df.changi.snapped) +\n  tm_dots(col = \"red\")\n\n\n\n\n\n\n\n\n\n\nNKDE Calculation\n\nlixels &lt;- lixelize_lines(osm_changi, 200, mindist = 100)\nsamples &lt;- lines_center(lixels)\n\n\ndensities.destination &lt;- nkde(osm_changi,\n                  events=destination_df.changi.snapped,\n                  w=rep(1, nrow(destination_df.changi.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_changi)\n\ndensities.origin &lt;- nkde(osm_changi,\n                  events=origin_df.changi.snapped,\n                  w=rep(1, nrow(origin_df.changi.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_changi)\n\n\nsamples$density.destination &lt;- densities.destination*1000\nlixels$density.destination &lt;- densities.destination*1000\n\nsamples$density.origin &lt;- densities.origin*1000\nlixels$density.origin &lt;- densities.origin*1000\n\nsamples2.origin &lt;- samples[order(samples$density.origin),]\nsamples2.destination &lt;- samples[order(samples$density.destination),]\n\nI tried a simple method taught in class to visualise the density of events on the road network at Changi. Unfortunately, the huge proportion of events at what is presumedly a dropoff point makes the rest of the area very light in comparison.\nHowever, it can be noted that a good portion of trips are ended along the road leading up to Changi. This is not visible in the origin.\nThis shows that travellers sometimes preferred to disembark and walk the remaining distance. This likely happens if there is a sufficiently dense traffic jam at the actual dropoff point to cause traffic to completely stop for long enough for passengers to disembark.\nOn the other hand, origins are typically constrained to the lawful pickup/dropoff area.\nI suspect that trips ended along the road before the pickup/dropoff area can be an indicator of bad traffic jams, because the riders would otherwise have no reason to disembark early.\n\nOriginsDestinations\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.origin\")\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.destination\")\n\n\n\n\n\n\n\n\n\n\n\nIn this alternative visualisation of NKDE at Changi, where the density steps are increasingly large, we can begin to see the other hotspots in the vicinity. When looking the magnitude of the lighter colors in the legend, we can see that these areas are nowhere near as dense as the pickup/dropoff area.\n\nNKDE Origins ChangiNKDE Destinations Changi\n\n\n\ncolorRamp &lt;- brewer.pal(n = 7, name = \"Spectral\")\ncolorRamp &lt;- rev(colorRamp)\n\ntm_shape(osm_changi) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.origin) + \n  tm_dots(\"density.origin\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Origins in Changi' , main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(osm_changi) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.destination) + \n  tm_dots(\"density.destination\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Destinations in Changi' , main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5.2 Woodlands and Woodlands Checkpoint\nBased on the KDE calculation, we noticed that the area near the Woodlands checkpoint the general Woodlands area was a hotspot for both trip starts and ends.\nFrom my anecdotal experience, I suspected that Grab rides from the checkpoint may not start very near to it.\nI found it difficult to get Grab rides directly outside the checkpoint during peak hours. Usually, commuters will take public buses to nearby areas before booking their rides home.\nHowever, I would like the number and maps to paint a clearer picture of where commuters start and end their grab rides.\n\nNKDE Data Preparation\nIn the map below, the checkpoint is clearly denoted by the cluster of parallel roads in the top left.\n\nmpsz_woodlands = mpsz %&gt;% filter(PLN_AREA_N==\"WOODLANDS\")\nmpsz_woodlands &lt;- st_intersection(mpsz_woodlands, merged_sg)\n\nosm_woodlands_i &lt;- st_intersection(osm_sg, mpsz_woodlands)\nosm_woodlands_idxs &lt;- as.numeric(osm_woodlands_i$osm_id)\nosm_woodlands &lt;- osm_sg[osm_sg$osm_id %in% osm_woodlands_idxs, ]\n\nplot(osm_woodlands)\n\n\n\n\n\n\n\n\nAs in the previous example at Changi, we snap the points to the network and constrain the study area.\n\ndestination_df.woodlands = st_intersection(destination_df, mpsz_woodlands)\norigin_df.woodlands = st_intersection(origin_df, mpsz_woodlands)\n\norigin_df.woodlands.snapped = snapPointsToLines2(origin_df.woodlands, osm_woodlands)\ndestination_df.woodlands.snapped = snapPointsToLines2(destination_df.woodlands, osm_woodlands)\n\nAs expected, few rides occur in the direct vicinity of the checkpoint.\n\ntm_shape(osm_woodlands) + \n  tm_lines() +\ntm_shape(destination_df.woodlands.snapped) +\n  tm_dots(col = \"red\")\n\n\n\n\n\n\n\n\n\n\nNKDE Calculation\nSince I want a sharper curve to more clearly identify hotspots on the network, I use a quartic kernel. When trying an adaptive bandwidth, only one hotspot was clearly identified. As such, I have set a static bandwidth.\n\nlixels &lt;- lixelize_lines(osm_woodlands, 200, mindist = 100)\nsamples &lt;- lines_center(lixels)\n\n\ndensities.destination &lt;- nkde(osm_woodlands,\n                  events=destination_df.woodlands.snapped,\n                  w=rep(1, nrow(destination_df.woodlands.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_woodlands)\n\ndensities.origin &lt;- nkde(osm_woodlands,\n                  events=origin_df.woodlands.snapped,\n                  w=rep(1, nrow(origin_df.woodlands.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_woodlands)\n\n\nsamples$density.destination &lt;- densities.destination*1000\nlixels$density.destination &lt;- densities.destination*1000\n\nsamples$density.origin &lt;- densities.origin*1000\nlixels$density.origin &lt;- densities.origin*1000\n\nsamples2.origin &lt;- samples[order(samples$density.origin),]\nsamples2.destination &lt;- samples[order(samples$density.destination),]\n\nFrom this NKDE map, we can already tell that more people use Grab to leave Woodlands than to come in. This applies to the residential areas as well, sufficiently far from the checkpoint.\n\nNKDE Origins WoodlandsNKDE Destinations Woodlands\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.origin\")\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.destination\")\n\n\n\n\n\n\n\n\n\n\n\nIn this alternative map, I can tell that my suspicion was wrong. While origins are more distributed than destinations in woodlands, a clear hotspot for origins can be identified right outside the checkpoint. This could mean that grab drivers and passengers are willing to brave the traffic jam for a grab ride.\nI was also surprised that there were no clear signs that passengers alighted prematurely from their rides to the checkpoint, as was the case at Changi airport.\n\nNKDE Origins WoodlandsNKDE Destinations Woodlands\n\n\n\ncolorRamp &lt;- brewer.pal(n = 7, name = \"Spectral\")\ncolorRamp &lt;- rev(colorRamp)\n\ntm_shape(osm_woodlands) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.origin) + \n  tm_dots(\"density.origin\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Origins in Woodlands' , main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(osm_woodlands) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.destination) + \n  tm_dots(\"density.destination\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Destinations in Woodlands' , main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5.3 Downtown\nThe downtown area is intuitively a slow, congested area during rush hours. In the KDE maps, the downtown area was consistently bright, indicating that many Grab rides started and ended there. In this segment I wanted to see if there were particular areas within the downtown core area that many commuters head to.\n\nNKDE Data Preparation\n\nmpsz_town = mpsz %&gt;% filter(PLN_AREA_N==\"DOWNTOWN CORE\")\nmpsz_town &lt;- st_intersection(mpsz_town, merged_sg)\n\nosm_town_i &lt;- st_intersection(osm_sg, mpsz_town)\nosm_town_idxs &lt;- as.numeric(osm_town_i$osm_id)\nosm_town &lt;- osm_sg[osm_sg$osm_id %in% osm_town_idxs, ]\n\n\ndestination_df.town = st_intersection(destination_df, mpsz_town)\norigin_df.town = st_intersection(origin_df, mpsz_town)\n\norigin_df.town.snapped = snapPointsToLines2(origin_df.town, osm_town)\ndestination_df.town.snapped = snapPointsToLines2(destination_df.town, osm_town)\n\n\ntm_shape(osm_town) + \n  tm_lines() +\ntm_shape(destination_df.town.snapped) +\n  tm_dots(col = \"red\")\n\n\n\n\n\n\n\n\n\n\nNKDE Calculation\n\nlixels &lt;- lixelize_lines(osm_town, 200, mindist = 100)\nsamples &lt;- lines_center(lixels)\n\n\ndensities.destination &lt;- nkde(osm_town,\n                  events=destination_df.town.snapped,\n                  w=rep(1, nrow(destination_df.town.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_town)\n\ndensities.origin &lt;- nkde(osm_town,\n                  events=origin_df.town.snapped,\n                  w=rep(1, nrow(origin_df.town.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_town)\n\n\nsamples$density.destination &lt;- densities.destination*1000\nlixels$density.destination &lt;- densities.destination*1000\n\nsamples$density.origin &lt;- densities.origin*1000\nlixels$density.origin &lt;- densities.origin*1000\n\nsamples2.origin &lt;- samples[order(samples$density.origin),]\nsamples2.destination &lt;- samples[order(samples$density.destination),]\n\n\nNKDE Origins TownNKDE Destinations Town\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.origin\")\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.destination\")\n\n\n\n\n\n\n\n\n\n\n\nWhen observing the destinations map, it becomes clear that many intersections in the upper area, near Raffle’s city, become extremely packed with people on their way there. On the southern part of the map, roads near Marina Bay Financial centre also see a lot fo traffic from private hire vehicles.\nHowever, most interesting about these maps is that the origins in this map are primarily clustered around an area with high end office building and attractions, but nothing out of the ordinary relative to the surrounding area.\nIt might be possible that the area above Lau Pa Sat is used as an area to get a Grab ride after a meal, where smaller roads make it easier for cars to stop to pick up passengers.\n\nNKDE Origins TownNKDE Destinations Town\n\n\n\ncolorRamp &lt;- brewer.pal(n = 7, name = \"Spectral\")\ncolorRamp &lt;- rev(colorRamp)\n\npar(mfrow=c(1,2))\n\ntm_shape(osm_town) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.origin) + \n  tm_dots(\"density.origin\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Origins in Downtown Core' , main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(osm_town) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.destination) + \n  tm_dots(\"density.destination\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Destinations in Downtown Core' , main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5.4 NKDE General Insights\nThe NKDE is very useful to visualise the impact of events on a network. In the case of traffic, more events likely correlates with more traffic, giving us insights on potentially impacted roads during peak hours. However, NKDE maps are limited by their ambiguous time frame. I would like to visualise smaller subsets of events corresponding to daily patterns, including meal times, commuting times, and perhaps post-nightlife rides back home.\nThat’s what I hope to learn from the TNKDE!"
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#tnkde",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#tnkde",
    "title": "Take-Home Exercise 1",
    "section": "6.0 TNKDE",
    "text": "6.0 TNKDE\nTo extend the NKDE, we can use the TNKDE to visualise patterns in the network over time. In this section, I will be creating visualisation split over the 24 hours of the day to visualise daily patterns. This should show more variations than a split by the days of the week, where patterns may only correspond to the weekday/weekend differences.\nI have kept the bandwidth the same for consistency.\nThe code used in this section has been adapted from an example, but with thin lines kept to show the original network and a brighter, easier to see color palette.\nhttps://cran.r-project.org/web/packages/spNetwork/vignettes/TNKDE.html\n\n6.1 Changi Airport\nFrom the NKDE in Changi, we were able to see that the airport road had enough legally questionable dropoffs along the road to the airport during periods of congestion. It is possible that not every jam in Changi airport will cause this phenomenon.\nFrom the TNKDE, we can see that drivers need to be careful around the clock, but less so in the evenings, since there will be travelers alighting where they may not be allowed to.\nHowever, this could also be an illusion caused by grab drivers pressing the button to end their trip slightly earlier to prepare to help travelers get their bags out the car.\n\ndestination_df.changi.snapped$end_hr &lt;- as.numeric(destination_df.changi.snapped$end_hr)\norigin_df.changi.snapped$start_hr &lt;- as.numeric(origin_df.changi.snapped$start_hr)\n\n\n\nShow the code\nlixels &lt;- lixelize_lines(osm_changi, 200, mindist = 100)\nsample_points &lt;- lines_center(lixels)\n\nsample_time.destination &lt;- seq(min(destination_df.changi.snapped$end_hr), max(destination_df.changi.snapped$end_hr), 1)\nsample_time.origin &lt;- seq(min(origin_df.changi.snapped$start_hr), max(origin_df.changi.snapped$start_hr), 1)\n\ntnkde_densities.destination &lt;- tnkde(lines = osm_changi,\n                   events = destination_df.changi.snapped,\n                   time_field = \"end_hr\",\n                   w = rep(1, nrow(destination_df.changi.snapped)), \n                   samples_loc = sample_points,\n                   samples_time = sample_time.destination, \n                   kernel_name = \"quartic\",\n                   bw_net = 300, bw_time = 1,\n                   adaptive = TRUE,\n                   trim_bw_net = 900,\n                   trim_bw_time = 80,\n                   method = \"discontinuous\",\n                   div = \"bw\", max_depth = 10,\n                   digits = 2, tol = 0.01,\n                   agg = 15, grid_shape = c(1,1), \n                   verbose  = FALSE)\n\ntnkde_densities.origin &lt;- tnkde(lines = osm_changi,\n                   events = origin_df.changi.snapped,\n                   time_field = \"start_hr\",\n                   w = rep(1, nrow(origin_df.changi.snapped)), \n                   samples_loc = sample_points,\n                   samples_time = sample_time.origin, \n                   kernel_name = \"quartic\",\n                   bw_net = 300, bw_time = 1,\n                   adaptive = TRUE,\n                   trim_bw_net = 900,\n                   trim_bw_time = 80,\n                   method = \"discontinuous\",\n                   div = \"bw\", max_depth = 10,\n                   digits = 2, tol = 0.01,\n                   agg = 15, grid_shape = c(1,1), \n                   verbose  = FALSE)\n\nall_densities.destination &lt;- c(tnkde_densities.destination$k)\ncolor_breaks.destination &lt;- classIntervals(all_densities.destination, n = 10, style = \"kmeans\")\n\nall_maps.destination &lt;- lapply(1:ncol(tnkde_densities.destination$k), function(i){\n  time &lt;- sample_time.destination[[i]]\n  \n  sample_points$density &lt;- tnkde_densities.destination$k[,i]\n  map1 &lt;- tm_shape(osm_changi) + \n    tm_lines(lwd=0.5) +\n    tm_shape(sample_points) +\n  tm_dots(col = \"density\", size = 0.005,\n          breaks = color_breaks.destination$brks, palette = plasma(10, direction = -1)) +  \n    tm_layout(legend.show=FALSE, main.title = paste(\"TNKDE OF GRAB TRIP DESTINATIONS @ CHANGI\", time, \":00\"), main.title.size = 0.5)\n  return(map1)\n})\n\ntmap_animation(all_maps.destination, filename = \"images/tnkde_destination_changi.gif\", \n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\nall_densities.origin &lt;- c(tnkde_densities.origin$k)\ncolor_breaks.origin &lt;- classIntervals(all_densities.origin, n = 10, style = \"kmeans\")\n\nall_maps.origin&lt;- lapply(1:ncol(tnkde_densities.origin$k), function(i){\n  time &lt;- sample_time.origin[[i]]\n  \n  sample_points$density &lt;- tnkde_densities.origin$k[,i]\n  map1 &lt;- tm_shape(osm_changi) + \n    tm_lines(lwd=0.5) +\n    tm_shape(sample_points) +\n  tm_dots(col = \"density\", size = 0.005,\n          breaks = color_breaks.origin$brks, palette = plasma(10, direction = -1)) +   \n    tm_layout(legend.show=FALSE, main.title = paste(\"TNKDE OF GRAB TRIP ORIGINS @ CHANGI\", time, \":00\"), main.title.size = 0.5)\n  return(map1)\n})\n\ntmap_animation(all_maps.origin, filename = \"images/tnkde_origin_changi.gif\", \n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\n\n \n\n\n6.2 Woodlands\nIn this TNKDE, we can observe people leaving the woodlands checkpoint in the early morning and evening. We can also observe some other small hotspots in the lower centre of the map.\nWhile this could be where a bus from the checkpoint may stop, it is difficult to say for sure. However, this map shows that there are many private hire vehicles in the lower middle of this study area throughout the day, perhaps indicating a congestion issue as a result of suboptimally designed roads.\n\ndestination_df.woodlands.snapped$end_hr &lt;- as.numeric(destination_df.woodlands.snapped$end_hr)\norigin_df.woodlands.snapped$start_hr &lt;- as.numeric(origin_df.woodlands.snapped$start_hr)\n\n\n\nShow the code\nlixels &lt;- lixelize_lines(osm_woodlands, 200, mindist = 100)\nsample_points &lt;- lines_center(lixels)\n\nsample_time.destination &lt;- seq(min(destination_df.woodlands.snapped$end_hr), max(destination_df.woodlands.snapped$end_hr), 1)\nsample_time.origin &lt;- seq(min(origin_df.woodlands.snapped$start_hr), max(origin_df.woodlands.snapped$start_hr), 1)\n\ntnkde_densities.destination &lt;- tnkde(lines = osm_woodlands,\n                   events = destination_df.woodlands.snapped,\n                   time_field = \"end_hr\",\n                   w = rep(1, nrow(destination_df.woodlands.snapped)), \n                   samples_loc = sample_points,\n                   samples_time = sample_time.destination, \n                   kernel_name = \"quartic\",\n                   bw_net = 300, bw_time = 1,\n                   adaptive = TRUE,\n                   trim_bw_net = 900,\n                   trim_bw_time = 80,\n                   method = \"discontinuous\",\n                   div = \"bw\", max_depth = 10,\n                   digits = 2, tol = 0.01,\n                   agg = 15, grid_shape = c(1,1), \n                   verbose  = FALSE)\n\ntnkde_densities.origin &lt;- tnkde(lines = osm_woodlands,\n                   events = origin_df.woodlands.snapped,\n                   time_field = \"start_hr\",\n                   w = rep(1, nrow(origin_df.woodlands.snapped)), \n                   samples_loc = sample_points,\n                   samples_time = sample_time.origin, \n                   kernel_name = \"quartic\",\n                   bw_net = 300, bw_time = 1,\n                   adaptive = TRUE,\n                   trim_bw_net = 900,\n                   trim_bw_time = 80,\n                   method = \"discontinuous\",\n                   div = \"bw\", max_depth = 10,\n                   digits = 2, tol = 0.01,\n                   agg = 15, grid_shape = c(1,1), \n                   verbose  = FALSE)\n\nall_densities.origin &lt;- c(tnkde_densities.origin$k)\ncolor_breaks.origin &lt;- classIntervals(all_densities.origin, n = 10, style = \"kmeans\")\n\nall_maps.origin &lt;- lapply(1:ncol(tnkde_densities.origin$k), function(i){\n  time &lt;- sample_time.origin[[i]]\n  \n  sample_points$density &lt;- tnkde_densities.origin$k[,i]\n  map1 &lt;- tm_shape(osm_woodlands) + \n    tm_lines(lwd=0.5) +\n    tm_shape(sample_points) +\n  tm_dots(col = \"density\", size = 0.005,\n          breaks = color_breaks.origin$brks, palette = plasma(10, direction = -1)) +  \n    tm_layout(legend.show=FALSE, main.title = paste(\"TNKDE OF GRAB TRIP ORIGINS @ WOODLANDS\", time, \":00\"), main.title.size = 0.5)\n  return(map1)\n})\n\ntmap_animation(all_maps.origin, filename = \"images/tnkde_origin_woodlands.gif\", \n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\nall_densities.destination &lt;- c(tnkde_densities.destination$k)\ncolor_breaks.destination &lt;- classIntervals(all_densities.destination, n = 10, style = \"kmeans\")\n\nall_maps.destination&lt;- lapply(1:ncol(tnkde_densities.destination$k), function(i){\n  time &lt;- sample_time.destination[[i]]\n  \n  sample_points$density &lt;- tnkde_densities.destination$k[,i]\n  map1 &lt;- tm_shape(osm_woodlands) + \n    tm_lines(lwd=0.5) +\n    tm_shape(sample_points) +\n  tm_dots(col = \"density\", size = 0.005,\n          breaks = color_breaks.destination$brks, palette = plasma(10, direction = -1)) +  \n    tm_layout(legend.show=FALSE, main.title = paste(\"TNKDE OF GRAB TRIP DESTINATIONS @ WOODLANDS \", time, \":00\"), main.title.size = 0.5)\n  return(map1)\n})\n\ntmap_animation(all_maps.destination, filename = \"images/tnkde_destination_woodlands.gif\", \n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\n\n \n\n\n6.3 Downtown Core\nFrom the TNKDE, we can see the southern part of the map light up after midnight! This might indicate that the area, especially around Lau Pa Sat, contributes to Grab ride origins as a place to relax in the evenings. The area also becomes busy around lunch hour, as expected.\nIn contrast, the destinations map does not light up as much. Although the NKDE may indicate heavy congestion due to private hire vehicles, the TNKDE shows that this may not be as persistent a problem as expected.\n\ndestination_df.town.snapped$end_hr &lt;- as.numeric(destination_df.town.snapped$end_hr)\norigin_df.town.snapped$start_hr &lt;- as.numeric(origin_df.town.snapped$start_hr)\n\n\n\nShow the code\nlixels &lt;- lixelize_lines(osm_town, 200, mindist = 100)\nsample_points &lt;- lines_center(lixels)\n\nsample_time.destination &lt;- seq(min(destination_df.town.snapped$end_hr), max(destination_df.town.snapped$end_hr), 1)\nsample_time.origin &lt;- seq(min(origin_df.town.snapped$start_hr), max(origin_df.town.snapped$start_hr), 1)\n\ntnkde_densities.destination &lt;- tnkde(lines = osm_town,\n                   events = destination_df.town.snapped,\n                   time_field = \"end_hr\",\n                   w = rep(1, nrow(destination_df.town.snapped)), \n                   samples_loc = sample_points,\n                   samples_time = sample_time.destination, \n                   kernel_name = \"quartic\",\n                   bw_net = 300, bw_time = 1,\n                   adaptive = TRUE,\n                   trim_bw_net = 900,\n                   trim_bw_time = 80,\n                   method = \"discontinuous\",\n                   div = \"bw\", max_depth = 10,\n                   digits = 2, tol = 0.01,\n                   agg = 15, grid_shape = c(1,1), \n                   verbose  = FALSE)\n\ntnkde_densities.origin &lt;- tnkde(lines = osm_town,\n                   events = origin_df.town.snapped,\n                   time_field = \"start_hr\",\n                   w = rep(1, nrow(origin_df.town.snapped)), \n                   samples_loc = sample_points,\n                   samples_time = sample_time.origin, \n                   kernel_name = \"quartic\",\n                   bw_net = 300, bw_time = 1,\n                   adaptive = TRUE,\n                   trim_bw_net = 900,\n                   trim_bw_time = 80,\n                   method = \"discontinuous\",\n                   div = \"bw\", max_depth = 10,\n                   digits = 2, tol = 0.01,\n                   agg = 15, grid_shape = c(1,1), \n                   verbose  = FALSE)\n\nall_densities.origin &lt;- c(tnkde_densities.origin$k)\n\ncolor_breaks.origin &lt;- classIntervals(all_densities.origin, n = 10, style = \"kmeans\")\n\nall_maps.origin &lt;- lapply(1:ncol(tnkde_densities.origin$k), function(i){\n  time &lt;- sample_time.origin[[i]]\n  \n  sample_points$density &lt;- tnkde_densities.origin$k[,i]\n  map1 &lt;- tm_shape(osm_town) + \n    tm_lines(lwd=0.5) +\n    tm_shape(sample_points) +\n  tm_dots(col = \"density\", size = 0.005,\n          breaks = color_breaks.origin$brks, palette = plasma(10, direction = -1)) +\n    tm_layout(legend.show=FALSE, main.title = paste(\"TNKDE OF GRAB TRIP ORIGINS @ DOWNTOWN CORE\", time, \":00\"), main.title.size = 0.5)\n  return(map1)\n})\n\ntmap_animation(all_maps.origin, filename = \"images/tnkde_origin_town.gif\", \n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\n\n\nall_densities.destination &lt;- c(tnkde_densities.destination$k)\ncolor_breaks.destination &lt;- classIntervals(all_densities.destination, n = 10, style = \"kmeans\")\n\nall_maps.destination&lt;- lapply(1:ncol(tnkde_densities.destination$k), function(i){\n  time &lt;- sample_time.destination[[i]]\n  \n  sample_points$density &lt;- tnkde_densities.destination$k[,i]\n  map1 &lt;- tm_shape(osm_town) + \n    tm_lines(lwd=0.5) +\n    tm_shape(sample_points) +\n  tm_dots(col = \"density\", size = 0.005,\n          breaks = color_breaks.destination$brks, palette = plasma(10, direction = -1)) + \n    tm_layout(legend.show=FALSE, main.title = paste(\"TNKDE OF GRAB TRIP DESTINATIONS @ DOWNTOWN CORE \", time, \":00\"), main.title.size = 0.5)\n  return(map1)\n})\n\ntmap_animation(all_maps.destination, filename = \"images/tnkde_destination_town.gif\", \n               width = 1000, height = 1000, dpi = 300, delay = 50)"
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#conclusions",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#conclusions",
    "title": "Take-Home Exercise 1",
    "section": "7.0 Conclusions",
    "text": "7.0 Conclusions\nThe Grab Posisi dataset has yielded many interesting insights with Spatial Point Analysis. From commuter behaviour and safety in Changi airport, investigating private hire vehicle use around the Woodlands checkpoint to visualising the daily patterns of the downtown core, spatial point analysis has proven itself to be a powerful tool.\nIn terms of policy making, anecdotal evidence is not sufficient. Reported patterns through interviews may not truly reflect the patterns in crowded areas. Spatial Point Analysis can contribute heavily to the public good by identifying dangerous patterns, inefficiencies, and ways to facilitate life in a society that just wants to have dinner after work at Lau Pa Sat. Although the public may never know the full extent of the planning and analysis that goes on behind the scenes and drives decision making, NKDE and TNKDE maps help paint simple yet effective messages to build understanding and cohesion."
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#personal-learnings",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#personal-learnings",
    "title": "Take-Home Exercise 1",
    "section": "8.0 Personal Learnings",
    "text": "8.0 Personal Learnings\nThis exercise has been a rigorous and challenging introduction to r programming. Dealing with many issues related to data types, formats and other complexities associated with geospatial data.\nAlthough this exercise became very time consuming and frustrating at times, I believe that the next exercises will be much faster, having gone through extensive documentation and numerous roadblocks.\nUltimately, this has been a fun and interesting experience about finding patterns otherwise invisible to the naked eye."
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#destinations",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#destinations",
    "title": "Take-Home Exercise 1",
    "section": "Destinations",
    "text": "Destinations\n\ndestination_ppp.km &lt;- rescale(destination_ppp, 1000, \"km\")\n\ndestination.bw &lt;- density(destination_ppp.km,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"quartic\") \nplot(destination.bw)\n\n\n\n\n\n\n\n\n:::\nI then tried the more gently sloping Gaussian kernel, to little effect.\n\nOriginsDestinations\n\n\n\norigin_ppp.km &lt;- rescale(origin_ppp, 1000, \"km\")\n\norigin.bw &lt;- density(origin_ppp.km,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(origin.bw)\n\n\n\n\n\n\n\n\n\n\n\ndestination_ppp.km &lt;- rescale(destination_ppp, 1000, \"km\")\n\ndestination.bw &lt;- density(destination_ppp.km,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(destination.bw)\n\n\n\n\n\n\n\n\n\n\n\nI decided to check the bandwidth derived with the Diggle algorithm, which was surprisingly small, at 8m. I strongly suspect this to be caused by Changi airport, where a huge number of Grab trips start and end at the same few small dropoff/pickup points.\n\nbw &lt;- bw.diggle(destination_ppp.km)\nbw\n\n      sigma \n0.008286046 \n\nbw &lt;- bw.ppl(destination_ppp.km)\nbw\n\n    sigma \n0.1826625 \n\n\nI then tried the PPL algorithm’s bandwidth, which did not have a significant effect either.\n\nOriginsDestinations\n\n\n\norigin_ppp.km &lt;- rescale(origin_ppp, 1000, \"km\")\n\norigin.bw &lt;- density(origin_ppp.km,\n                              sigma=bw.ppl,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(origin.bw)\n\n\n\n\n\n\n\n\n\n\n\ndestination_ppp.km &lt;- rescale(destination_ppp, 1000, \"km\")\n\ndestination.bw &lt;- density(destination_ppp.km,\n                              sigma=bw.ppl,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(destination.bw)\n\n\n\n\n\n\n\n\n\n\n\nI then tried to manually set a higher bandwidth in hopes of illuminating the map more.\n\nOriginsDestinations\n\n\n\nsigm &lt;- 0.5\norigin_ppp.km &lt;- rescale(origin_ppp, 1000, \"km\")\n\norigin.bw &lt;- density(origin_ppp.km,\n                              sigma=sigm,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(origin.bw)\n\n\n\n\n\n\n\n\n\n\n\ndestination_ppp.km &lt;- rescale(destination_ppp, 1000, \"km\")\n\ndestination.bw &lt;- density(destination_ppp.km,\n                              sigma=sigm,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(destination.bw)\n\n\n\n\n\n\n\n\n\n\n\n\nKDE Insights\nFrom these KDE maps, I observed\n\nChangi Airport and the CBD are frequently the origin and destination for Grab trips\nInterestingly, the maps are different. It seems that there are more trips from presumably more residential areas such as the West and North to the CBD than the other way round. Perhaps people use grab when they are in a rush to get to work and take their time on the way home with public transport.\nIn both the origin and destination KDEs, there is a hotspot in the north, slightly to the west. That could correspond to the Woodlands checkpoint"
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#origins-wo-snap",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#origins-wo-snap",
    "title": "Take-Home Exercise 1",
    "section": "Origins w/o Snap",
    "text": "Origins w/o Snap\n\nplot(origin_df.changi)\n\n\n\n\n\n\n\n\nAs part of NKDE, the events need to have happened on the network. As such, we use snapPointsToLines2 to ensure that the points are on the network. Points off the network may have occurred due to slight GPS drift."
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#destinations-w-snap",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#destinations-w-snap",
    "title": "Take-Home Exercise 1",
    "section": "Destinations w/ Snap",
    "text": "Destinations w/ Snap\n\norigin_df.changi.snapped = snapPointsToLines2(origin_df.changi, osm_changi)\ndestination_df.changi.snapped = snapPointsToLines2(destination_df.changi, osm_changi)\n\nplot(destination_df.changi.snapped)"
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#origins-w-snap",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#origins-w-snap",
    "title": "Take-Home Exercise 1",
    "section": "Origins w/ Snap",
    "text": "Origins w/ Snap\n\nplot(origin_df.changi.snapped)\n\n\n\n\n\n\n\n\n:::\nWith our points on the network and study area constrained, we can visualise the events at Changi, especially the airport.\n\ntm_shape(osm_changi) + \n  tm_lines() +\ntm_shape(destination_df.changi.snapped) +\n  tm_dots(col = \"red\")\n\n\n\n\n\n\n\n\n\nNKDE Calculation\n\nlixels &lt;- lixelize_lines(osm_changi, 200, mindist = 100)\nsamples &lt;- lines_center(lixels)\n\n\ndensities.destination &lt;- nkde(osm_changi,\n                  events=destination_df.changi.snapped,\n                  w=rep(1, nrow(destination_df.changi.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_changi)\n\ndensities.origin &lt;- nkde(osm_changi,\n                  events=origin_df.changi.snapped,\n                  w=rep(1, nrow(origin_df.changi.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_changi)\n\n\nsamples$density.destination &lt;- densities.destination*1000\nlixels$density.destination &lt;- densities.destination*1000\n\nsamples$density.origin &lt;- densities.origin*1000\nlixels$density.origin &lt;- densities.origin*1000\n\nsamples2.origin &lt;- samples[order(samples$density.origin),]\nsamples2.destination &lt;- samples[order(samples$density.destination),]\n\nI tried a simple method taught in class to visualise the density of events on the road network at Changi. Unfortunately, the huge proportion of events at what is presumedly a dropoff point makes the rest of the area very light in comparison.\nHowever, it can be noted that a good portion of trips are ended along the road leading up to Changi. This is not visible in the origin.\nThis shows that travellers sometimes preferred to disembark and walk the remaining distance. This likely happens if there is a sufficiently dense traffic jam at the actual dropoff point to cause traffic to completely stop for long enough for passengers to disembark.\nOn the other hand, origins are typically constrained to the lawful pickup/dropoff area.\nI suspect that trips ended along the road before the pickup/dropoff area can be an indicator of bad traffic jams, because the riders would otherwise have no reason to disembark early.\n\nOriginsDestinations\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.origin\")\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.destination\")\n\n\n\n\n\n\n\n\n\n\n\nIn this alternative visualisation of NKDE at Changi, where the density steps are increasingly large, we can begin to see the other hotspots in the vicinity. When looking the magnitude of the lighter colors in the legend, we can see that these areas are nowhere near as dense as the pickup/dropoff area.\n\nNKDE Origins ChangiNKDE Destinations Changi\n\n\n\ncolorRamp &lt;- brewer.pal(n = 7, name = \"Spectral\")\ncolorRamp &lt;- rev(colorRamp)\n\ntm_shape(osm_changi) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.origin) + \n  tm_dots(\"density.origin\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Origins in Changi' , main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(osm_changi) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.destination) + \n  tm_dots(\"density.destination\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Destinations in Changi' , main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n5.2 Woodlands and Woodlands Checkpoint\nBased on the KDE calculation, we noticed that the area near the Woodlands checkpoint the general Woodlands area was a hotspot for both trip starts and ends.\nFrom my anecdotal experience, I suspected that Grab rides from the checkpoint may not start very near to it.\nI found it difficult to get Grab rides directly outside the checkpoint during peak hours. Usually, commuters will take public buses to nearby areas before booking their rides home.\nHowever, I would like the number and maps to paint a clearer picture of where commuters start and end their grab rides.\n\nNKDE Data Preparation\nIn the map below, the checkpoint is clearly denoted by the cluster of parallel roads in the top left.\n\nmpsz_woodlands = mpsz %&gt;% filter(PLN_AREA_N==\"WOODLANDS\")\nmpsz_woodlands &lt;- st_intersection(mpsz_woodlands, merged_sg)\n\nosm_woodlands_i &lt;- st_intersection(osm_sg, mpsz_woodlands)\nosm_woodlands_idxs &lt;- as.numeric(osm_woodlands_i$osm_id)\nosm_woodlands &lt;- osm_sg[osm_sg$osm_id %in% osm_woodlands_idxs, ]\n\nplot(osm_woodlands)\n\n\n\n\n\n\n\n\nAs in the previous example at Changi, we snap the points to the network and constrain the study area.\n\ndestination_df.woodlands = st_intersection(destination_df, mpsz_woodlands)\norigin_df.woodlands = st_intersection(origin_df, mpsz_woodlands)\n\norigin_df.woodlands.snapped = snapPointsToLines2(origin_df.woodlands, osm_woodlands)\ndestination_df.woodlands.snapped = snapPointsToLines2(destination_df.woodlands, osm_woodlands)\n\nAs expected, few rides occur in the direct vicinity of the checkpoint.\n\ntm_shape(osm_woodlands) + \n  tm_lines() +\ntm_shape(destination_df.woodlands.snapped) +\n  tm_dots(col = \"red\")\n\n\n\n\n\n\n\n\n\n\nNKDE Calculation\nSince I want a sharper curve to more clearly identify hotspots on the network, I use a quartic kernel. When trying an adaptive bandwidth, only one hotspot was clearly identified. As such, I have set a static bandwidth.\n\nlixels &lt;- lixelize_lines(osm_woodlands, 200, mindist = 100)\nsamples &lt;- lines_center(lixels)\n\n\ndensities.destination &lt;- nkde(osm_woodlands,\n                  events=destination_df.woodlands.snapped,\n                  w=rep(1, nrow(destination_df.woodlands.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_woodlands)\n\ndensities.origin &lt;- nkde(osm_woodlands,\n                  events=origin_df.woodlands.snapped,\n                  w=rep(1, nrow(origin_df.woodlands.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_woodlands)\n\n\nsamples$density.destination &lt;- densities.destination*1000\nlixels$density.destination &lt;- densities.destination*1000\n\nsamples$density.origin &lt;- densities.origin*1000\nlixels$density.origin &lt;- densities.origin*1000\n\nsamples2.origin &lt;- samples[order(samples$density.origin),]\nsamples2.destination &lt;- samples[order(samples$density.destination),]\n\nFrom this NKDE map, we can already tell that more people use Grab to leave Woodlands than to come in. This applies to the residential areas as well, sufficiently far from the checkpoint.\n\nNKDE Origins WoodlandsNKDE Destinations Woodlands\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.origin\")\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.destination\")\n\n\n\n\n\n\n\n\n\n\n\nIn this alternative map, I can tell that my suspicion was wrong. While origins are more distributed than destinations in woodlands, a clear hotspot for origins can be identified right outside the checkpoint. This could mean that grab drivers and passengers are willing to brave the traffic jam for a grab ride.\nI was also surprised that there were no clear signs that passengers alighted prematurely from their rides to the checkpoint, as was the case at Changi airport. ::: {.panel-tabset} ## NKDE Origins Woodlands\n\ncolorRamp &lt;- brewer.pal(n = 7, name = \"Spectral\")\ncolorRamp &lt;- rev(colorRamp)\n\npar(mfrow=c(1,2))\n\ntm_shape(osm_woodlands) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.origin) + \n  tm_dots(\"density.origin\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Origins in Woodlands' , main.title.size = 1)"
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#nkde-destinations-woodlands-1",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#nkde-destinations-woodlands-1",
    "title": "Take-Home Exercise 1",
    "section": "NKDE Destinations Woodlands",
    "text": "NKDE Destinations Woodlands\n\ntm_shape(osm_woodlands) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.destination) + \n  tm_dots(\"density.destination\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Destinations in Woodlands' , main.title.size = 1)\n\n\n\n\n\n\n\n\n:::\n\n5.3 Downtown\nThe downtown area is intuitively a slow, congested area during rush hours. In the KDE maps, the downtown area was consistently bright, indicating that many Grab rides started and ended there. In this segment I wanted to see if there were particular areas within the downtown core area that many commuters head to.\n\nNKDE Data Preparation\n\nmpsz_town = mpsz %&gt;% filter(PLN_AREA_N==\"DOWNTOWN CORE\")\nmpsz_town &lt;- st_intersection(mpsz_town, merged_sg)\n\nosm_town_i &lt;- st_intersection(osm_sg, mpsz_town)\nosm_town_idxs &lt;- as.numeric(osm_town_i$osm_id)\nosm_town &lt;- osm_sg[osm_sg$osm_id %in% osm_town_idxs, ]\n\n\ndestination_df.town = st_intersection(destination_df, mpsz_town)\norigin_df.town = st_intersection(origin_df, mpsz_town)\n\norigin_df.town.snapped = snapPointsToLines2(origin_df.town, osm_town)\ndestination_df.town.snapped = snapPointsToLines2(destination_df.town, osm_town)\n\n\ntm_shape(osm_town) + \n  tm_lines() +\ntm_shape(destination_df.town.snapped) +\n  tm_dots(col = \"red\")\n\n\n\n\n\n\n\n\n\n\nNKDE Calculation\n\nlixels &lt;- lixelize_lines(osm_town, 200, mindist = 100)\nsamples &lt;- lines_center(lixels)\n\n\ndensities.destination &lt;- nkde(osm_town,\n                  events=destination_df.town.snapped,\n                  w=rep(1, nrow(destination_df.town.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_town)\n\ndensities.origin &lt;- nkde(osm_town,\n                  events=origin_df.town.snapped,\n                  w=rep(1, nrow(origin_df.town.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_town)\n\n\nsamples$density.destination &lt;- densities.destination*1000\nlixels$density.destination &lt;- densities.destination*1000\n\nsamples$density.origin &lt;- densities.origin*1000\nlixels$density.origin &lt;- densities.origin*1000\n\nsamples2.origin &lt;- samples[order(samples$density.origin),]\nsamples2.destination &lt;- samples[order(samples$density.destination),]\n\n\nNKDE Origins TownNKDE Destinations Town\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.origin\")\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.destination\")\n\n\n\n\n\n\n\n\n\n\n\nWhen observing the destinations map, it becomes clear that many intersections in the upper area, near Raffle’s city, become extremely packed with people on their way there. On the southern part of the map, roads near Marina Bay Financial centre also see a lot fo traffic from private hire vehicles.\nHowever, most interesting about these maps is that the origins in this map are primarily clustered around an area with high end office building and attractions, but nothing out of the ordinary relative to the surrounding area.\nIt might be possible that the area above Lau Pa Sat is used as an area to get a Grab ride after a meal, where smaller roads make it easier for cars to stop to pick up passengers.\n\nNKDE Origins TownNKDE Destinations Town\n\n\n\ncolorRamp &lt;- brewer.pal(n = 7, name = \"Spectral\")\ncolorRamp &lt;- rev(colorRamp)\n\npar(mfrow=c(1,2))\n\ntm_shape(osm_town) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.origin) + \n  tm_dots(\"density.origin\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Origins in Downtown Core' , main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(osm_town) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.destination) + \n  tm_dots(\"density.destination\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Destinations in Downtown Core' , main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5.4 NKDE General Insights\nThe NKDE is very useful to visualise the impact of events on a network. In the case of traffic, more events likely correlates with more traffic, giving us insights on potentially impacted roads during peak hours. However, NKDE maps are limited by their ambiguous time frame. I would like to visualise smaller subsets of events corresponding to daily patterns, including meal times, commuting times, and perhaps post-nightlife rides back home.\nThat’s what I hope to learn from the TNKDE!"
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#nkde-destinations-town-1",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#nkde-destinations-town-1",
    "title": "Take-Home Exercise 1",
    "section": "NKDE Destinations Town",
    "text": "NKDE Destinations Town\n\ntm_shape(osm_town) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.destination) + \n  tm_dots(\"density.destination\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Destinations in Downtown Core' , main.title.size = 1)\n\n\n\n\n\n\n\n\n:::\n\n5.4 NKDE General Insights\nThe NKDE is very useful to visualise the impact of events on a network. In the case of traffic, more events likely correlates with more traffic, giving us insights on potentially impacted roads during peak hours. However, NKDE maps are limited by their ambiguous time frame. I would like to visualise smaller subsets of events corresponding to daily patterns, including meal times, commuting times, and perhaps post-nightlife rides back home.\nThat’s what I hope to learn from the TNKDE!"
  },
  {
    "objectID": "HandsOnEx/HE4/HE4.html",
    "href": "HandsOnEx/HE4/HE4.html",
    "title": "Hands-On Exercise 4: Spatial Weights and Applications",
    "section": "",
    "text": "We’re going to compute spatial weights!"
  },
  {
    "objectID": "HandsOnEx/HE4/HE4.html#overview",
    "href": "HandsOnEx/HE4/HE4.html#overview",
    "title": "Hands-On Exercise 4: Spatial Weights and Applications",
    "section": "",
    "text": "We’re going to compute spatial weights!"
  },
  {
    "objectID": "HandsOnEx/HE4/HE4.html#setup",
    "href": "HandsOnEx/HE4/HE4.html#setup",
    "title": "Hands-On Exercise 4: Spatial Weights and Applications",
    "section": "2.0 Setup",
    "text": "2.0 Setup\n\n2.1 Dependencies\nNew dependencies: - spdep: To create spatial weights matrix objects\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr)\n\n\n\n2.2 Importing Data\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/HandsOnEx/HE4/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n\n2.3 Relational Join\nUpdate the hunan dataframe with the attributes of the hunan2012 dataframe\n\nhunan &lt;- left_join(hunan,hunan2012)%&gt;%\n  select(1:4, 7, 15)\n\n\n\n2.4 Visualising Regional Development Indicator\nBack to using tmaps.\n\nbasemap &lt;- tm_shape(hunan) +\n  tm_polygons() +\n  tm_text(\"NAME_3\", size=0.5)\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "HandsOnEx/HE4/HE4.html#contiguity-spatial-weights",
    "href": "HandsOnEx/HE4/HE4.html#contiguity-spatial-weights",
    "title": "Hands-On Exercise 4: Spatial Weights and Applications",
    "section": "3.0 Contiguity Spatial Weights",
    "text": "3.0 Contiguity Spatial Weights\n\n3.1 QUEEN Contiguity Based Neighbours\nAll-directions common boundaries\n\nwm_q &lt;- poly2nb(hunan, queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nShow the neighbours for polygon 1. It has 5 neighbours.\n\nwm_q[[1]]\n\n[1]  2  3  4 57 85\n\n\nGet the county name of polygon 1\n\nhunan$County[1]\n\n[1] \"Anxiang\"\n\n\nShow names of 5 neighbours\n\nhunan$NAME_3[c(2,3,4,57,85)]\n\n[1] \"Hanshou\" \"Jinshi\"  \"Li\"      \"Nan\"     \"Taoyuan\"\n\n\nGet GDP per capita of the 5 neighbours\n\nnb1 &lt;- wm_q[[1]]\nnb1 &lt;- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\nShow the whole weight matrix (Long)\n\n\nShow the code\nstr(wm_q)\n\n\nList of 88\n $ : int [1:5] 2 3 4 57 85\n $ : int [1:5] 1 57 58 78 85\n $ : int [1:4] 1 4 5 85\n $ : int [1:4] 1 3 5 6\n $ : int [1:4] 3 4 6 85\n $ : int [1:5] 4 5 69 75 85\n $ : int [1:4] 67 71 74 84\n $ : int [1:7] 9 46 47 56 78 80 86\n $ : int [1:6] 8 66 68 78 84 86\n $ : int [1:8] 16 17 19 20 22 70 72 73\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:3] 11 15 17\n $ : int [1:4] 13 14 17 83\n $ : int [1:5] 10 17 22 72 83\n $ : int [1:7] 10 11 14 15 16 72 83\n $ : int [1:5] 20 22 23 77 83\n $ : int [1:6] 10 20 21 73 74 86\n $ : int [1:7] 10 18 19 21 22 23 82\n $ : int [1:5] 19 20 35 82 86\n $ : int [1:5] 10 16 18 20 83\n $ : int [1:7] 18 20 38 41 77 79 82\n $ : int [1:5] 25 28 31 32 54\n $ : int [1:5] 24 28 31 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:3] 26 29 42\n $ : int [1:5] 24 25 33 49 54\n $ : int [1:3] 27 37 42\n $ : int 33\n $ : int [1:8] 24 25 32 36 39 40 56 81\n $ : int [1:8] 24 31 50 54 55 56 75 85\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 47 80 82 86\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:4] 29 42 43 44\n $ : int [1:4] 23 44 77 79\n $ : int [1:5] 31 40 42 43 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:7] 26 27 29 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:4] 37 38 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:3] 8 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:5] 32 48 52 54 55\n $ : int [1:3] 48 49 52\n $ : int [1:5] 48 49 50 51 54\n $ : int [1:3] 48 55 75\n $ : int [1:6] 24 28 32 49 50 52\n $ : int [1:5] 32 48 50 53 75\n $ : int [1:7] 8 31 32 36 78 80 85\n $ : int [1:6] 1 2 58 64 76 85\n $ : int [1:5] 2 57 68 76 78\n $ : int [1:4] 60 61 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:7] 12 59 60 62 63 77 87\n $ : int [1:3] 61 77 87\n $ : int [1:4] 12 61 77 83\n $ : int [1:2] 57 76\n $ : int 76\n $ : int [1:5] 9 67 68 76 84\n $ : int [1:4] 7 66 76 84\n $ : int [1:5] 9 58 66 76 78\n $ : int [1:3] 6 75 85\n $ : int [1:3] 10 72 73\n $ : int [1:3] 7 73 74\n $ : int [1:5] 10 11 16 17 70\n $ : int [1:5] 10 19 70 71 74\n $ : int [1:6] 7 19 71 73 84 86\n $ : int [1:6] 6 32 53 55 69 85\n $ : int [1:7] 57 58 64 65 66 67 68\n $ : int [1:7] 18 23 38 61 62 63 83\n $ : int [1:7] 2 8 9 56 58 68 85\n $ : int [1:7] 23 38 40 41 43 44 45\n $ : int [1:8] 8 34 35 36 41 45 47 56\n $ : int [1:6] 25 26 31 33 39 42\n $ : int [1:5] 20 21 23 35 41\n $ : int [1:9] 12 13 15 16 17 18 22 63 77\n $ : int [1:6] 7 9 66 67 74 86\n $ : int [1:11] 1 2 3 5 6 32 56 57 69 75 ...\n $ : int [1:9] 8 9 19 21 35 46 47 74 84\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language poly2nb(pl = hunan, queen = TRUE)\n - attr(*, \"type\")= chr \"queen\"\n - attr(*, \"sym\")= logi TRUE\n\n\n\n\n3.2 ROOK Contiguity Based Neighbours\nUp down left right\n\nwm_r &lt;- poly2nb(hunan, queen=FALSE)\nsummary(wm_r)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 440 \nPercentage nonzero weights: 5.681818 \nAverage number of links: 5 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 10 \n 2  2 12 20 21 14 11  3  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 10 links\n\n\nGet longitude value of the centroid of each polygon in the geometry column\nGet latitude value of the centroid of each polygon in the geometry column\nCombine the coordinates\nShow the first few rows of the coords\n\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\ncoords &lt;- cbind(longitude, latitude)\nhead(coords)\n\n     longitude latitude\n[1,]  112.1531 29.44362\n[2,]  112.0372 28.86489\n[3,]  111.8917 29.47107\n[4,]  111.7031 29.74499\n[5,]  111.6138 29.49258\n[6,]  111.0341 29.79863\n\n\n\n\n3.3 Plotting the QUEEN Contiguity Based Neighbours Map\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\n\n\n\n\n\n\n\n\n\n\n3.4 Plotting the ROOK Contiguity Based Neighbours Map\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\n\n\n\n\n\n\n\n\n\n3.5 Plotting both\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"Queen Contiguity\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\nplot(hunan$geometry, border=\"lightgrey\", main=\"Rook Contiguity\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "HandsOnEx/HE4/HE4.html#computing-distance-based-neighbours",
    "href": "HandsOnEx/HE4/HE4.html#computing-distance-based-neighbours",
    "title": "Hands-On Exercise 4: Spatial Weights and Applications",
    "section": "4.0 Computing distance based neighbours",
    "text": "4.0 Computing distance based neighbours\n\n4.1 Determining cut-off distance\nGet a matrix of the indices of points from the set of the k nearest neighbours\nConvert into a neighbours list of nb class.\nUse nbdists to get the length of neighbour relationship edges. Returns coordinate pairs if projected, otherwise kilometers\nRemove the list structure with unlist\n\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\n\n\n4.2 Computing fixed distance weight matrix\nUse dnearneigh for this\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nPrint matrix with str\n\nstr(wm_d62)\n\nList of 88\n $ : int [1:5] 3 4 5 57 64\n $ : int [1:4] 57 58 78 85\n $ : int [1:4] 1 4 5 57\n $ : int [1:3] 1 3 5\n $ : int [1:4] 1 3 4 85\n $ : int 69\n $ : int [1:2] 67 84\n $ : int [1:4] 9 46 47 78\n $ : int [1:4] 8 46 68 84\n $ : int [1:4] 16 22 70 72\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:2] 11 17\n $ : int 13\n $ : int [1:4] 10 17 22 83\n $ : int [1:3] 11 14 16\n $ : int [1:3] 20 22 63\n $ : int [1:5] 20 21 73 74 82\n $ : int [1:5] 18 19 21 22 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:4] 10 16 18 20\n $ : int [1:3] 41 77 82\n $ : int [1:4] 25 28 31 54\n $ : int [1:4] 24 28 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:2] 26 29\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:2] 27 37\n $ : int 33\n $ : int [1:2] 24 36\n $ : int 50\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:5] 31 34 45 56 80\n $ : int [1:2] 29 42\n $ : int [1:3] 44 77 79\n $ : int [1:4] 40 42 43 81\n $ : int [1:3] 39 45 79\n $ : int [1:5] 23 35 45 79 82\n $ : int [1:5] 26 37 39 43 81\n $ : int [1:3] 39 42 44\n $ : int [1:2] 38 43\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:5] 8 9 35 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:4] 48 49 50 52\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:2] 48 55\n $ : int [1:5] 24 28 49 50 52\n $ : int [1:4] 48 50 53 75\n $ : int 36\n $ : int [1:5] 1 2 3 58 64\n $ : int [1:5] 2 57 64 66 68\n $ : int [1:3] 60 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:5] 12 60 62 63 87\n $ : int [1:4] 61 63 77 87\n $ : int [1:5] 12 18 61 62 83\n $ : int [1:4] 1 57 58 76\n $ : int 76\n $ : int [1:5] 58 67 68 76 84\n $ : int [1:2] 7 66\n $ : int [1:4] 9 58 66 84\n $ : int [1:2] 6 75\n $ : int [1:3] 10 72 73\n $ : int [1:2] 73 74\n $ : int [1:3] 10 11 70\n $ : int [1:4] 19 70 71 74\n $ : int [1:5] 19 21 71 73 86\n $ : int [1:2] 55 69\n $ : int [1:3] 64 65 66\n $ : int [1:3] 23 38 62\n $ : int [1:2] 2 8\n $ : int [1:4] 38 40 41 45\n $ : int [1:5] 34 35 36 45 47\n $ : int [1:5] 25 26 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:4] 12 13 16 63\n $ : int [1:4] 7 9 66 68\n $ : int [1:2] 2 5\n $ : int [1:4] 21 46 47 74\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language dnearneigh(x = coords, d1 = 0, d2 = 62, longlat = TRUE)\n - attr(*, \"dnn\")= num [1:2] 0 62\n - attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n - attr(*, \"nbtype\")= chr \"distance\"\n - attr(*, \"sym\")= logi TRUE\n\n\nCan use table() and card() to do the same but nicer\n\ntable(hunan$County, card(wm_d62))\n\n               \n                1 2 3 4 5 6\n  Anhua         1 0 0 0 0 0\n  Anren         0 0 0 1 0 0\n  Anxiang       0 0 0 0 1 0\n  Baojing       0 0 0 0 1 0\n  Chaling       0 0 1 0 0 0\n  Changning     0 0 1 0 0 0\n  Changsha      0 0 0 1 0 0\n  Chengbu       0 1 0 0 0 0\n  Chenxi        0 0 0 1 0 0\n  Cili          0 1 0 0 0 0\n  Dao           0 0 0 1 0 0\n  Dongan        0 0 1 0 0 0\n  Dongkou       0 0 0 1 0 0\n  Fenghuang     0 0 0 1 0 0\n  Guidong       0 0 1 0 0 0\n  Guiyang       0 0 0 1 0 0\n  Guzhang       0 0 0 0 0 1\n  Hanshou       0 0 0 1 0 0\n  Hengdong      0 0 0 0 1 0\n  Hengnan       0 0 0 0 1 0\n  Hengshan      0 0 0 0 0 1\n  Hengyang      0 0 0 0 0 1\n  Hongjiang     0 0 0 0 1 0\n  Huarong       0 0 0 1 0 0\n  Huayuan       0 0 0 1 0 0\n  Huitong       0 0 0 1 0 0\n  Jiahe         0 0 0 0 1 0\n  Jianghua      0 0 1 0 0 0\n  Jiangyong     0 1 0 0 0 0\n  Jingzhou      0 1 0 0 0 0\n  Jinshi        0 0 0 1 0 0\n  Jishou        0 0 0 0 0 1\n  Lanshan       0 0 0 1 0 0\n  Leiyang       0 0 0 1 0 0\n  Lengshuijiang 0 0 1 0 0 0\n  Li            0 0 1 0 0 0\n  Lianyuan      0 0 0 0 1 0\n  Liling        0 1 0 0 0 0\n  Linli         0 0 0 1 0 0\n  Linwu         0 0 0 1 0 0\n  Linxiang      1 0 0 0 0 0\n  Liuyang       0 1 0 0 0 0\n  Longhui       0 0 1 0 0 0\n  Longshan      0 1 0 0 0 0\n  Luxi          0 0 0 0 1 0\n  Mayang        0 0 0 0 0 1\n  Miluo         0 0 0 0 1 0\n  Nan           0 0 0 0 1 0\n  Ningxiang     0 0 0 1 0 0\n  Ningyuan      0 0 0 0 1 0\n  Pingjiang     0 1 0 0 0 0\n  Qidong        0 0 1 0 0 0\n  Qiyang        0 0 1 0 0 0\n  Rucheng       0 1 0 0 0 0\n  Sangzhi       0 1 0 0 0 0\n  Shaodong      0 0 0 0 1 0\n  Shaoshan      0 0 0 0 1 0\n  Shaoyang      0 0 0 1 0 0\n  Shimen        1 0 0 0 0 0\n  Shuangfeng    0 0 0 0 0 1\n  Shuangpai     0 0 0 1 0 0\n  Suining       0 0 0 0 1 0\n  Taojiang      0 1 0 0 0 0\n  Taoyuan       0 1 0 0 0 0\n  Tongdao       0 1 0 0 0 0\n  Wangcheng     0 0 0 1 0 0\n  Wugang        0 0 1 0 0 0\n  Xiangtan      0 0 0 1 0 0\n  Xiangxiang    0 0 0 0 1 0\n  Xiangyin      0 0 0 1 0 0\n  Xinhua        0 0 0 0 1 0\n  Xinhuang      1 0 0 0 0 0\n  Xinning       0 1 0 0 0 0\n  Xinshao       0 0 0 0 0 1\n  Xintian       0 0 0 0 1 0\n  Xupu          0 1 0 0 0 0\n  Yanling       0 0 1 0 0 0\n  Yizhang       1 0 0 0 0 0\n  Yongshun      0 0 0 1 0 0\n  Yongxing      0 0 0 1 0 0\n  You           0 0 0 1 0 0\n  Yuanjiang     0 0 0 0 1 0\n  Yuanling      1 0 0 0 0 0\n  Yueyang       0 0 1 0 0 0\n  Zhijiang      0 0 0 0 1 0\n  Zhongfang     0 0 0 1 0 0\n  Zhuzhou       0 0 0 0 1 0\n  Zixing        0 0 1 0 0 0\n\nn_comp &lt;- n.comp.nb(wm_d62)\nn_comp$nc\n\n[1] 1\n\n\n\ntable(n_comp$comp.id)\n\n\n 1 \n88 \n\n\n\n\n4.3 Plot the fixed distance weight matrix\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_d62, coords, add=TRUE)\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\n\n\n\n\n\n\n\n\n\n\n4.4 Plot 1st nearest neighbours and distance link\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"1st nearest neighbours\")\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\nplot(hunan$geometry, border=\"lightgrey\", main=\"Distance link\")\nplot(wm_d62, coords, add=TRUE, pch = 19, cex = 0.6)"
  },
  {
    "objectID": "HandsOnEx/HE4/HE4.html#adaptive-distance-weight-matrix",
    "href": "HandsOnEx/HE4/HE4.html#adaptive-distance-weight-matrix",
    "title": "Hands-On Exercise 4: Spatial Weights and Applications",
    "section": "5.0 Adaptive distance weight matrix",
    "text": "5.0 Adaptive distance weight matrix\nCan control #neighbours with k parameter.\n\nknn6 &lt;- knn2nb(knearneigh(coords, k=6))\nknn6\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 528 \nPercentage nonzero weights: 6.818182 \nAverage number of links: 6 \nNon-symmetric neighbours list\n\n\nPrint the matrix, 6 columns\n\nstr(knn6)\n\nList of 88\n $ : int [1:6] 2 3 4 5 57 64\n $ : int [1:6] 1 3 57 58 78 85\n $ : int [1:6] 1 2 4 5 57 85\n $ : int [1:6] 1 3 5 6 69 85\n $ : int [1:6] 1 3 4 6 69 85\n $ : int [1:6] 3 4 5 69 75 85\n $ : int [1:6] 9 66 67 71 74 84\n $ : int [1:6] 9 46 47 78 80 86\n $ : int [1:6] 8 46 66 68 84 86\n $ : int [1:6] 16 19 22 70 72 73\n $ : int [1:6] 10 14 16 17 70 72\n $ : int [1:6] 13 15 60 61 63 83\n $ : int [1:6] 12 15 60 61 63 83\n $ : int [1:6] 11 15 16 17 72 83\n $ : int [1:6] 12 13 14 17 60 83\n $ : int [1:6] 10 11 17 22 72 83\n $ : int [1:6] 10 11 14 16 72 83\n $ : int [1:6] 20 22 23 63 77 83\n $ : int [1:6] 10 20 21 73 74 82\n $ : int [1:6] 18 19 21 22 23 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:6] 10 16 18 19 20 83\n $ : int [1:6] 18 20 41 77 79 82\n $ : int [1:6] 25 28 31 52 54 81\n $ : int [1:6] 24 28 31 33 54 81\n $ : int [1:6] 25 27 29 33 42 81\n $ : int [1:6] 26 29 30 37 42 81\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:6] 26 27 37 42 43 81\n $ : int [1:6] 26 27 28 33 49 81\n $ : int [1:6] 24 25 36 39 40 54\n $ : int [1:6] 24 31 50 54 55 56\n $ : int [1:6] 25 26 28 30 49 81\n $ : int [1:6] 36 40 41 45 56 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:6] 26 27 29 42 43 44\n $ : int [1:6] 23 43 44 62 77 79\n $ : int [1:6] 25 40 42 43 44 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:6] 26 27 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:6] 37 38 39 42 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:6] 8 9 35 47 78 86\n $ : int [1:6] 8 21 35 46 80 86\n $ : int [1:6] 49 50 51 52 53 55\n $ : int [1:6] 28 33 48 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:6] 28 48 49 50 52 54\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:6] 48 50 51 52 55 75\n $ : int [1:6] 24 28 49 50 51 52\n $ : int [1:6] 32 48 50 52 53 75\n $ : int [1:6] 32 34 36 78 80 85\n $ : int [1:6] 1 2 3 58 64 68\n $ : int [1:6] 2 57 64 66 68 78\n $ : int [1:6] 12 13 60 61 87 88\n $ : int [1:6] 12 13 59 61 63 87\n $ : int [1:6] 12 13 60 62 63 87\n $ : int [1:6] 12 38 61 63 77 87\n $ : int [1:6] 12 18 60 61 62 83\n $ : int [1:6] 1 3 57 58 68 76\n $ : int [1:6] 58 64 66 67 68 76\n $ : int [1:6] 9 58 67 68 76 84\n $ : int [1:6] 7 65 66 68 76 84\n $ : int [1:6] 9 57 58 66 78 84\n $ : int [1:6] 4 5 6 32 75 85\n $ : int [1:6] 10 16 19 22 72 73\n $ : int [1:6] 7 19 73 74 84 86\n $ : int [1:6] 10 11 14 16 17 70\n $ : int [1:6] 10 19 21 70 71 74\n $ : int [1:6] 19 21 71 73 84 86\n $ : int [1:6] 6 32 50 53 55 69\n $ : int [1:6] 58 64 65 66 67 68\n $ : int [1:6] 18 23 38 61 62 63\n $ : int [1:6] 2 8 9 46 58 68\n $ : int [1:6] 38 40 41 43 44 45\n $ : int [1:6] 34 35 36 41 45 47\n $ : int [1:6] 25 26 28 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:6] 12 13 15 16 22 63\n $ : int [1:6] 7 9 66 68 71 74\n $ : int [1:6] 2 3 4 5 56 69\n $ : int [1:6] 8 9 21 46 47 74\n $ : int [1:6] 59 60 61 62 63 88\n $ : int [1:6] 59 60 61 62 63 87\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language knearneigh(x = coords, k = 6)\n - attr(*, \"sym\")= logi FALSE\n - attr(*, \"type\")= chr \"knn\"\n - attr(*, \"knn-k\")= num 6\n - attr(*, \"class\")= chr \"nb\"\n\n\n\n5.1 Plot distance based neighbours\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(knn6, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "HandsOnEx/HE4/HE4.html#weights-based-on-inversed-distance-weights",
    "href": "HandsOnEx/HE4/HE4.html#weights-based-on-inversed-distance-weights",
    "title": "Hands-On Exercise 4: Spatial Weights and Applications",
    "section": "6.0 Weights based on Inversed Distance Weights",
    "text": "6.0 Weights based on Inversed Distance Weights\nCompute distances with nbdists\n\ndist &lt;- nbdists(wm_q, coords, longlat = TRUE)\nids &lt;- lapply(dist, function(x) 1/(x))\nids\n\n[[1]]\n[1] 0.01535405 0.03916350 0.01820896 0.02807922 0.01145113\n\n[[2]]\n[1] 0.01535405 0.01764308 0.01925924 0.02323898 0.01719350\n\n[[3]]\n[1] 0.03916350 0.02822040 0.03695795 0.01395765\n\n[[4]]\n[1] 0.01820896 0.02822040 0.03414741 0.01539065\n\n[[5]]\n[1] 0.03695795 0.03414741 0.01524598 0.01618354\n\n[[6]]\n[1] 0.015390649 0.015245977 0.021748129 0.011883901 0.009810297\n\n[[7]]\n[1] 0.01708612 0.01473997 0.01150924 0.01872915\n\n[[8]]\n[1] 0.02022144 0.03453056 0.02529256 0.01036340 0.02284457 0.01500600 0.01515314\n\n[[9]]\n[1] 0.02022144 0.01574888 0.02109502 0.01508028 0.02902705 0.01502980\n\n[[10]]\n[1] 0.02281552 0.01387777 0.01538326 0.01346650 0.02100510 0.02631658 0.01874863\n[8] 0.01500046\n\n[[11]]\n[1] 0.01882869 0.02243492 0.02247473\n\n[[12]]\n[1] 0.02779227 0.02419652 0.02333385 0.02986130 0.02335429\n\n[[13]]\n[1] 0.02779227 0.02650020 0.02670323 0.01714243\n\n[[14]]\n[1] 0.01882869 0.01233868 0.02098555\n\n[[15]]\n[1] 0.02650020 0.01233868 0.01096284 0.01562226\n\n[[16]]\n[1] 0.02281552 0.02466962 0.02765018 0.01476814 0.01671430\n\n[[17]]\n[1] 0.01387777 0.02243492 0.02098555 0.01096284 0.02466962 0.01593341 0.01437996\n\n[[18]]\n[1] 0.02039779 0.02032767 0.01481665 0.01473691 0.01459380\n\n[[19]]\n[1] 0.01538326 0.01926323 0.02668415 0.02140253 0.01613589 0.01412874\n\n[[20]]\n[1] 0.01346650 0.02039779 0.01926323 0.01723025 0.02153130 0.01469240 0.02327034\n\n[[21]]\n[1] 0.02668415 0.01723025 0.01766299 0.02644986 0.02163800\n\n[[22]]\n[1] 0.02100510 0.02765018 0.02032767 0.02153130 0.01489296\n\n[[23]]\n[1] 0.01481665 0.01469240 0.01401432 0.02246233 0.01880425 0.01530458 0.01849605\n\n[[24]]\n[1] 0.02354598 0.01837201 0.02607264 0.01220154 0.02514180\n\n[[25]]\n[1] 0.02354598 0.02188032 0.01577283 0.01949232 0.02947957\n\n[[26]]\n[1] 0.02155798 0.01745522 0.02212108 0.02220532\n\n[[27]]\n[1] 0.02155798 0.02490625 0.01562326\n\n[[28]]\n[1] 0.01837201 0.02188032 0.02229549 0.03076171 0.02039506\n\n[[29]]\n[1] 0.02490625 0.01686587 0.01395022\n\n[[30]]\n[1] 0.02090587\n\n[[31]]\n[1] 0.02607264 0.01577283 0.01219005 0.01724850 0.01229012 0.01609781 0.01139438\n[8] 0.01150130\n\n[[32]]\n[1] 0.01220154 0.01219005 0.01712515 0.01340413 0.01280928 0.01198216 0.01053374\n[8] 0.01065655\n\n[[33]]\n[1] 0.01949232 0.01745522 0.02229549 0.02090587 0.01979045\n\n[[34]]\n[1] 0.03113041 0.03589551 0.02882915\n\n[[35]]\n[1] 0.01766299 0.02185795 0.02616766 0.02111721 0.02108253 0.01509020\n\n[[36]]\n[1] 0.01724850 0.03113041 0.01571707 0.01860991 0.02073549 0.01680129\n\n[[37]]\n[1] 0.01686587 0.02234793 0.01510990 0.01550676\n\n[[38]]\n[1] 0.01401432 0.02407426 0.02276151 0.01719415\n\n[[39]]\n[1] 0.01229012 0.02172543 0.01711924 0.02629732 0.01896385\n\n[[40]]\n[1] 0.01609781 0.01571707 0.02172543 0.01506473 0.01987922 0.01894207\n\n[[41]]\n[1] 0.02246233 0.02185795 0.02205991 0.01912542 0.01601083 0.01742892\n\n[[42]]\n[1] 0.02212108 0.01562326 0.01395022 0.02234793 0.01711924 0.01836831 0.01683518\n\n[[43]]\n[1] 0.01510990 0.02629732 0.01506473 0.01836831 0.03112027 0.01530782\n\n[[44]]\n[1] 0.01550676 0.02407426 0.03112027 0.01486508\n\n[[45]]\n[1] 0.03589551 0.01860991 0.01987922 0.02205991 0.02107101 0.01982700\n\n[[46]]\n[1] 0.03453056 0.04033752 0.02689769\n\n[[47]]\n[1] 0.02529256 0.02616766 0.04033752 0.01949145 0.02181458\n\n[[48]]\n[1] 0.02313819 0.03370576 0.02289485 0.01630057 0.01818085\n\n[[49]]\n[1] 0.03076171 0.02138091 0.02394529 0.01990000\n\n[[50]]\n[1] 0.01712515 0.02313819 0.02551427 0.02051530 0.02187179\n\n[[51]]\n[1] 0.03370576 0.02138091 0.02873854\n\n[[52]]\n[1] 0.02289485 0.02394529 0.02551427 0.02873854 0.03516672\n\n[[53]]\n[1] 0.01630057 0.01979945 0.01253977\n\n[[54]]\n[1] 0.02514180 0.02039506 0.01340413 0.01990000 0.02051530 0.03516672\n\n[[55]]\n[1] 0.01280928 0.01818085 0.02187179 0.01979945 0.01882298\n\n[[56]]\n[1] 0.01036340 0.01139438 0.01198216 0.02073549 0.01214479 0.01362855 0.01341697\n\n[[57]]\n[1] 0.028079221 0.017643082 0.031423501 0.029114131 0.013520292 0.009903702\n\n[[58]]\n[1] 0.01925924 0.03142350 0.02722997 0.01434859 0.01567192\n\n[[59]]\n[1] 0.01696711 0.01265572 0.01667105 0.01785036\n\n[[60]]\n[1] 0.02419652 0.02670323 0.01696711 0.02343040\n\n[[61]]\n[1] 0.02333385 0.01265572 0.02343040 0.02514093 0.02790764 0.01219751 0.02362452\n\n[[62]]\n[1] 0.02514093 0.02002219 0.02110260\n\n[[63]]\n[1] 0.02986130 0.02790764 0.01407043 0.01805987\n\n[[64]]\n[1] 0.02911413 0.01689892\n\n[[65]]\n[1] 0.02471705\n\n[[66]]\n[1] 0.01574888 0.01726461 0.03068853 0.01954805 0.01810569\n\n[[67]]\n[1] 0.01708612 0.01726461 0.01349843 0.01361172\n\n[[68]]\n[1] 0.02109502 0.02722997 0.03068853 0.01406357 0.01546511\n\n[[69]]\n[1] 0.02174813 0.01645838 0.01419926\n\n[[70]]\n[1] 0.02631658 0.01963168 0.02278487\n\n[[71]]\n[1] 0.01473997 0.01838483 0.03197403\n\n[[72]]\n[1] 0.01874863 0.02247473 0.01476814 0.01593341 0.01963168\n\n[[73]]\n[1] 0.01500046 0.02140253 0.02278487 0.01838483 0.01652709\n\n[[74]]\n[1] 0.01150924 0.01613589 0.03197403 0.01652709 0.01342099 0.02864567\n\n[[75]]\n[1] 0.011883901 0.010533736 0.012539774 0.018822977 0.016458383 0.008217581\n\n[[76]]\n[1] 0.01352029 0.01434859 0.01689892 0.02471705 0.01954805 0.01349843 0.01406357\n\n[[77]]\n[1] 0.014736909 0.018804247 0.022761507 0.012197506 0.020022195 0.014070428\n[7] 0.008440896\n\n[[78]]\n[1] 0.02323898 0.02284457 0.01508028 0.01214479 0.01567192 0.01546511 0.01140779\n\n[[79]]\n[1] 0.01530458 0.01719415 0.01894207 0.01912542 0.01530782 0.01486508 0.02107101\n\n[[80]]\n[1] 0.01500600 0.02882915 0.02111721 0.01680129 0.01601083 0.01982700 0.01949145\n[8] 0.01362855\n\n[[81]]\n[1] 0.02947957 0.02220532 0.01150130 0.01979045 0.01896385 0.01683518\n\n[[82]]\n[1] 0.02327034 0.02644986 0.01849605 0.02108253 0.01742892\n\n[[83]]\n[1] 0.023354289 0.017142433 0.015622258 0.016714303 0.014379961 0.014593799\n[7] 0.014892965 0.018059871 0.008440896\n\n[[84]]\n[1] 0.01872915 0.02902705 0.01810569 0.01361172 0.01342099 0.01297994\n\n[[85]]\n [1] 0.011451133 0.017193502 0.013957649 0.016183544 0.009810297 0.010656545\n [7] 0.013416965 0.009903702 0.014199260 0.008217581 0.011407794\n\n[[86]]\n[1] 0.01515314 0.01502980 0.01412874 0.02163800 0.01509020 0.02689769 0.02181458\n[8] 0.02864567 0.01297994\n\n[[87]]\n[1] 0.01667105 0.02362452 0.02110260 0.02058034\n\n[[88]]\n[1] 0.01785036 0.02058034\n\n\n\n6.1 Row Standardised Weights Matrix\nAssign equal weight with W.\nAssign weights as 1/x where x is the no of neighbours\n\nrswm_q &lt;- nb2listw(wm_q, style=\"W\", zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\nShow weight of first polygon’s 8 neighbours\n\nrswm_q$weights[10]\n\n[[1]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n\nDerive row standardised distance weight matrix\n\nrswm_ids &lt;- nb2listw(wm_q, glist=ids, style=\"B\", zero.policy=TRUE)\nrswm_ids\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn       S0        S1     S2\nB 88 7744 8.786867 0.3776535 3.8137\n\n\nShow the weights\n\nrswm_ids$weights[1]\n\n[[1]]\n[1] 0.01535405 0.03916350 0.01820896 0.02807922 0.01145113\n\n\n\nsummary(unlist(rswm_ids$weights))\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n0.008218 0.015088 0.018739 0.019614 0.022823 0.040338"
  },
  {
    "objectID": "HandsOnEx/HE4/HE4.html#spatial-weight-matrix-application",
    "href": "HandsOnEx/HE4/HE4.html#spatial-weight-matrix-application",
    "title": "Hands-On Exercise 4: Spatial Weights and Applications",
    "section": "7.0 Spatial Weight Matrix Application",
    "text": "7.0 Spatial Weight Matrix Application\nSpatially lagged values: Average neighbor GDPPC value for each polygon\n\nGDPPC.lag &lt;- lag.listw(rswm_q, hunan$GDPPC)\nGDPPC.lag\n\n [1] 24847.20 22724.80 24143.25 27737.50 27270.25 21248.80 43747.00 33582.71\n [9] 45651.17 32027.62 32671.00 20810.00 25711.50 30672.33 33457.75 31689.20\n[17] 20269.00 23901.60 25126.17 21903.43 22718.60 25918.80 20307.00 20023.80\n[25] 16576.80 18667.00 14394.67 19848.80 15516.33 20518.00 17572.00 15200.12\n[33] 18413.80 14419.33 24094.50 22019.83 12923.50 14756.00 13869.80 12296.67\n[41] 15775.17 14382.86 11566.33 13199.50 23412.00 39541.00 36186.60 16559.60\n[49] 20772.50 19471.20 19827.33 15466.80 12925.67 18577.17 14943.00 24913.00\n[57] 25093.00 24428.80 17003.00 21143.75 20435.00 17131.33 24569.75 23835.50\n[65] 26360.00 47383.40 55157.75 37058.00 21546.67 23348.67 42323.67 28938.60\n[73] 25880.80 47345.67 18711.33 29087.29 20748.29 35933.71 15439.71 29787.50\n[81] 18145.00 21617.00 29203.89 41363.67 22259.09 44939.56 16902.00 16930.00\n\n\nGet the GDPPC for the 5 neighbours\n\nnb1 &lt;- wm_q[[1]]\nnb1 &lt;- hunan$GDPPC[nb1]\nnb1\n\n[1] 20981 34592 24473 21311 22879\n\n\nAppend values to hunan dataframe\n\nlag.list &lt;- list(hunan$NAME_3, lag.listw(rswm_q, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag.list)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag GDPPC\")\nhunan &lt;- left_join(hunan,lag.res)\n\nShow the new head\n\nhead(hunan)\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC lag GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667  24847.20\n2 Changde 21100 Hanshou      County Hanshou 20981  22724.80\n3 Changde 21101  Jinshi County City  Jinshi 34592  24143.25\n4 Changde 21102      Li      County      Li 24473  27737.50\n5 Changde 21103   Linli      County   Linli 25554  27270.25\n6 Changde 21104  Shimen      County  Shimen 27137  21248.80\n                        geometry\n1 POLYGON ((112.0625 29.75523...\n2 POLYGON ((112.2288 29.11684...\n3 POLYGON ((111.8927 29.6013,...\n4 POLYGON ((111.3731 29.94649...\n5 POLYGON ((111.6324 29.76288...\n6 POLYGON ((110.8825 30.11675...\n\n\nPlot the GDPPC and spatial lag GDPPC, the map looks more gradual\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\nlag_gdppc &lt;- qtm(hunan, \"lag GDPPC\")\ntmap_arrange(gdppc, lag_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n7.1 Spatial lag as a sum of neighbouring values\nAssign value of 1 per neighbour\n\nb_weights &lt;- lapply(wm_q, function(x) 0*x + 1)\nb_weights2 &lt;- nb2listw(wm_q, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1    S2\nB 88 7744 448 896 10224\n\n\nlag.listw: Computes lag variable from weight and GDPPC\n\nlag_sum &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag_sum)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag_sum GDPPC\")\n\nShow result\n\nlag_sum\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 124236 113624  96573 110950 109081 106244 174988 235079 273907 256221\n[11]  98013 104050 102846  92017 133831 158446 141883 119508 150757 153324\n[21] 113593 129594 142149 100119  82884  74668  43184  99244  46549  20518\n[31] 140576 121601  92069  43258 144567 132119  51694  59024  69349  73780\n[41]  94651 100680  69398  52798 140472 118623 180933  82798  83090  97356\n[51]  59482  77334  38777 111463  74715 174391 150558 122144  68012  84575\n[61] 143045  51394  98279  47671  26360 236917 220631 185290  64640  70046\n[71] 126971 144693 129404 284074 112268 203611 145238 251536 108078 238300\n[81] 108870 108085 262835 248182 244850 404456  67608  33860\n\n\nAppend lag_sum GDPPC column to hunan dataframe\n\nhunan &lt;- left_join(hunan, lag.res)\n\nPlot both GDPPC and Spatial Lag Sum GDPPC to compare\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\nlag_sum_gdppc &lt;- qtm(hunan, \"lag_sum GDPPC\")\ntmap_arrange(gdppc, lag_sum_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n7.2 Spatial Window Average\nAdd diagonal element to neighbour list\n\nwm_qs &lt;- include.self(wm_q)\n\nShow neighbour list of area 1. Observe 1 added neighbour\n\nwm_qs[[1]]\n\n[1]  1  2  3  4 57 85\n\n\nGet weights with nb2listw\n\nwm_qs &lt;- nb2listw(wm_qs)\nwm_qs\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 30.90265 357.5308\n\n\nCreate lag variable from weight structure and GDPPC variable\n\nlag_w_avg_gpdpc &lt;- lag.listw(wm_qs, \n                             hunan$GDPPC)\nlag_w_avg_gpdpc\n\n [1] 24650.50 22434.17 26233.00 27084.60 26927.00 22230.17 47621.20 37160.12\n [9] 49224.71 29886.89 26627.50 22690.17 25366.40 25825.75 30329.00 32682.83\n[17] 25948.62 23987.67 25463.14 21904.38 23127.50 25949.83 20018.75 19524.17\n[25] 18955.00 17800.40 15883.00 18831.33 14832.50 17965.00 17159.89 16199.44\n[33] 18764.50 26878.75 23188.86 20788.14 12365.20 15985.00 13764.83 11907.43\n[41] 17128.14 14593.62 11644.29 12706.00 21712.29 43548.25 35049.00 16226.83\n[49] 19294.40 18156.00 19954.75 18145.17 12132.75 18419.29 14050.83 23619.75\n[57] 24552.71 24733.67 16762.60 20932.60 19467.75 18334.00 22541.00 26028.00\n[65] 29128.50 46569.00 47576.60 36545.50 20838.50 22531.00 42115.50 27619.00\n[73] 27611.33 44523.29 18127.43 28746.38 20734.50 33880.62 14716.38 28516.22\n[81] 18086.14 21244.50 29568.80 48119.71 22310.75 43151.60 17133.40 17009.33\n\n\nConvert lag variable listw to dataframe\n\nlag.list.wm_qs &lt;- list(hunan$NAME_3, lag.listw(wm_qs, hunan$GDPPC))\nlag_wm_qs.res &lt;- as.data.frame(lag.list.wm_qs)\ncolnames(lag_wm_qs.res) &lt;- c(\"NAME_3\", \"lag_window_avg GDPPC\")\n\nUse left join to attach the lag_window_avg GDPPC values\n\nhunan &lt;- left_join(hunan, lag_wm_qs.res)\n\nUse kable() to compare lag GDPPC and spatial window average values. Comes from knitr\n\nhunan %&gt;%\n  select(\"County\", \n         \"lag GDPPC\", \n         \"lag_window_avg GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag GDPPC\nlag_window_avg GDPPC\ngeometry\n\n\n\n\nAnxiang\n24847.20\n24650.50\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n22724.80\n22434.17\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n24143.25\n26233.00\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n27737.50\n27084.60\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n27270.25\n26927.00\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n21248.80\n22230.17\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n43747.00\n47621.20\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n33582.71\n37160.12\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n45651.17\n49224.71\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n32027.62\n29886.89\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n32671.00\n26627.50\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n20810.00\n22690.17\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n25711.50\n25366.40\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n30672.33\n25825.75\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n33457.75\n30329.00\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n31689.20\n32682.83\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n20269.00\n25948.62\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n23901.60\n23987.67\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n25126.17\n25463.14\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n21903.43\n21904.38\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n22718.60\n23127.50\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n25918.80\n25949.83\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n20307.00\n20018.75\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n20023.80\n19524.17\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n16576.80\n18955.00\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n18667.00\n17800.40\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n14394.67\n15883.00\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n19848.80\n18831.33\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n15516.33\n14832.50\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518.00\n17965.00\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n17572.00\n17159.89\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n15200.12\n16199.44\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n18413.80\n18764.50\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n14419.33\n26878.75\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n24094.50\n23188.86\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n22019.83\n20788.14\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n12923.50\n12365.20\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n14756.00\n15985.00\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n13869.80\n13764.83\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n12296.67\n11907.43\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n15775.17\n17128.14\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n14382.86\n14593.62\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n11566.33\n11644.29\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n13199.50\n12706.00\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n23412.00\n21712.29\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n39541.00\n43548.25\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n36186.60\n35049.00\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n16559.60\n16226.83\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n20772.50\n19294.40\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n19471.20\n18156.00\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n19827.33\n19954.75\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n15466.80\n18145.17\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n12925.67\n12132.75\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n18577.17\n18419.29\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n14943.00\n14050.83\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n24913.00\n23619.75\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n25093.00\n24552.71\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n24428.80\n24733.67\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n17003.00\n16762.60\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n21143.75\n20932.60\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n20435.00\n19467.75\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n17131.33\n18334.00\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n24569.75\n22541.00\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n23835.50\n26028.00\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360.00\n29128.50\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n47383.40\n46569.00\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n55157.75\n47576.60\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n37058.00\n36545.50\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n21546.67\n20838.50\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n23348.67\n22531.00\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n42323.67\n42115.50\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n28938.60\n27619.00\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n25880.80\n27611.33\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n47345.67\n44523.29\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n18711.33\n18127.43\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n29087.29\n28746.38\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n20748.29\n20734.50\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n35933.71\n33880.62\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n15439.71\n14716.38\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n29787.50\n28516.22\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n18145.00\n18086.14\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n21617.00\n21244.50\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n29203.89\n29568.80\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n41363.67\n48119.71\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n22259.09\n22310.75\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n44939.56\n43151.60\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n16902.00\n17133.40\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n16930.00\n17009.33\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\nUse tmap again to plot lag_gdppc and w_ave_gdppc maps\n\nw_avg_gdppc &lt;- qtm(hunan, \"lag_window_avg GDPPC\")\ntmap_arrange(lag_gdppc, w_avg_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n7.3 Spatial window sum\nUse include.self() to include diagonal elements\n\nwm_qs &lt;- include.self(wm_q)\nwm_qs\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\n\nAssign binary weights to neighbour structure which includes the diagonal element\n\nb_weights &lt;- lapply(wm_qs, function(x) 0*x + 1)\nb_weights[1]\n\n[[1]]\n[1] 1 1 1 1 1 1\n\n\nnb2listw and glist to assign weight values\n\nb_weights2 &lt;- nb2listw(wm_qs, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 536 1072 14160\n\n\nCompute lag variable with lag.listw()\n\nw_sum_gdppc &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nw_sum_gdppc\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 147903 134605 131165 135423 134635 133381 238106 297281 344573 268982\n[11] 106510 136141 126832 103303 151645 196097 207589 143926 178242 175235\n[21] 138765 155699 160150 117145 113730  89002  63532 112988  59330  35930\n[31] 154439 145795 112587 107515 162322 145517  61826  79925  82589  83352\n[41] 119897 116749  81510  63530 151986 174193 210294  97361  96472 108936\n[51]  79819 108871  48531 128935  84305 188958 171869 148402  83813 104663\n[61] 155742  73336 112705  78084  58257 279414 237883 219273  83354  90124\n[71] 168462 165714 165668 311663 126892 229971 165876 271045 117731 256646\n[81] 126603 127467 295688 336838 267729 431516  85667  51028\n\n\nConvert lag listw to dataframe\n\nw_sum_gdppc.res &lt;- as.data.frame(w_sum_gdppc)\ncolnames(w_sum_gdppc.res) &lt;- c(\"NAME_3\", \"w_sum GDPPC\")\n\nLeft join to add w_sum GDPPC to hunan\n\nhunan &lt;- left_join(hunan, w_sum_gdppc.res)\n\nkable() in knitr to prepare a table for preparation\n\nhunan %&gt;%\n  select(\"County\", \"lag_sum GDPPC\", \"w_sum GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\nCounty\nlag_sum GDPPC\nw_sum GDPPC\ngeometry\n\n\n\n\nAnxiang\n124236\n147903\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n113624\n134605\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n96573\n131165\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n110950\n135423\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n109081\n134635\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n106244\n133381\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n174988\n238106\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n235079\n297281\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n273907\n344573\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n256221\n268982\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n98013\n106510\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n104050\n136141\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n102846\n126832\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n92017\n103303\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n133831\n151645\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n158446\n196097\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n141883\n207589\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n119508\n143926\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n150757\n178242\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n153324\n175235\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n113593\n138765\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n129594\n155699\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n142149\n160150\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n100119\n117145\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n82884\n113730\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n74668\n89002\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n43184\n63532\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n99244\n112988\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n46549\n59330\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518\n35930\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n140576\n154439\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n121601\n145795\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n92069\n112587\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n43258\n107515\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n144567\n162322\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n132119\n145517\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n51694\n61826\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n59024\n79925\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n69349\n82589\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n73780\n83352\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n94651\n119897\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n100680\n116749\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n69398\n81510\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n52798\n63530\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n140472\n151986\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n118623\n174193\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n180933\n210294\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n82798\n97361\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n83090\n96472\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n97356\n108936\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n59482\n79819\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n77334\n108871\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n38777\n48531\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n111463\n128935\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n74715\n84305\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n174391\n188958\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n150558\n171869\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n122144\n148402\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n68012\n83813\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n84575\n104663\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n143045\n155742\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n51394\n73336\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n98279\n112705\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n47671\n78084\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360\n58257\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n236917\n279414\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n220631\n237883\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n185290\n219273\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n64640\n83354\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n70046\n90124\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n126971\n168462\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n144693\n165714\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n129404\n165668\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n284074\n311663\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n112268\n126892\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n203611\n229971\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n145238\n165876\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n251536\n271045\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n108078\n117731\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n238300\n256646\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n108870\n126603\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n108085\n127467\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n262835\n295688\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n248182\n336838\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n244850\n267729\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n404456\n431516\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n67608\n85667\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n33860\n51028\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\ntmap to visualise the difference\n\nw_sum_gdppc &lt;- qtm(hunan, \"w_sum GDPPC\")\ntmap_arrange(lag_sum_gdppc, w_sum_gdppc, asp=1, ncol=2)"
  },
  {
    "objectID": "InClassEx/ICE4/ICE4.html",
    "href": "InClassEx/ICE4/ICE4.html",
    "title": "In-Class Exercise 4: Spatial Weights and Applications",
    "section": "",
    "text": "Are the planning subzones with high proportion of dependency ratios randomly distributed over space?\n\n\n\n\nUsed to define neighbours to determine relationships between geographical units.\nDefine spatial neighbourhoods\nThe difference comes from the definition of ‘neighbour’\n\nMost common: Rooks & Queen’s\nBishop’s case less frequently used\n\n\n\n\n\n\nAdjacency Criterion\n\n\\(W_{ij} = \\begin{dcases}\n1, & \\text{if location j is adjacent to i}\\\\\n0, & \\text{otherwise}\\end{dcases}\\)\n\nDistance Criterion\n\n\\(W_{ij} = \\begin{dcases}\n1, & \\text{if location j is within distance of i}\\\\\n0, & \\text{otherwise}\\end{dcases}\\)\n\nGeneral spatial distance weight matrix\n\n\\(w_{id}=d_{ij}^{-a} \\cdot \\beta^b\\)\n\n\n\n\n\nConsider lagged contiguity and whether to use second order contiguity, i.e second degree neighbour\n\n\n\nSame as conventional graph algorithm implementations, but do not count self as neighbour (Count as zero)\n\n\n\n\nSet a distance threshold \\(d\\)\nDerive adjacency matrix, consider neighbour if \\(d_i \\gt d\\)\nCan use centroids for distances\n\nCan cause issues, can try inverse weights\n\n\n\n\n\n\n\\(W_{ij} = \\frac{1}{d_{ij}}\\)\nHelps odd shapes or long distances from centroids\n\n\n\n\n\nBinary matrix: Matrix of 0/1s\n\nSymmetric matrix\n\nRow standardised matrix:\n\nDivide row by no. neighbours.\nNo longer symmetric\nTypically used over column\n\n\n\n\n\nGiven observation \\(i\\), spatial lag of \\(y_i\\), referred to as \\([Wy]_i\\)\n\\([Wy]_i=\\sum_{j=1}^{n}w_{ij}y_j\\)\n\\(W_{ii} = 0 \\forall i \\forall W\\)\n\n\n\n\nConsider that boundaries and subzones will change over the years\nAreas may get split or moved"
  },
  {
    "objectID": "InClassEx/ICE4/ICE4.html#class-notes",
    "href": "InClassEx/ICE4/ICE4.html#class-notes",
    "title": "In-Class Exercise 4: Spatial Weights and Applications",
    "section": "",
    "text": "Are the planning subzones with high proportion of dependency ratios randomly distributed over space?\n\n\n\n\nUsed to define neighbours to determine relationships between geographical units.\nDefine spatial neighbourhoods\nThe difference comes from the definition of ‘neighbour’\n\nMost common: Rooks & Queen’s\nBishop’s case less frequently used\n\n\n\n\n\n\nAdjacency Criterion\n\n\\(W_{ij} = \\begin{dcases}\n1, & \\text{if location j is adjacent to i}\\\\\n0, & \\text{otherwise}\\end{dcases}\\)\n\nDistance Criterion\n\n\\(W_{ij} = \\begin{dcases}\n1, & \\text{if location j is within distance of i}\\\\\n0, & \\text{otherwise}\\end{dcases}\\)\n\nGeneral spatial distance weight matrix\n\n\\(w_{id}=d_{ij}^{-a} \\cdot \\beta^b\\)\n\n\n\n\n\nConsider lagged contiguity and whether to use second order contiguity, i.e second degree neighbour\n\n\n\nSame as conventional graph algorithm implementations, but do not count self as neighbour (Count as zero)\n\n\n\n\nSet a distance threshold \\(d\\)\nDerive adjacency matrix, consider neighbour if \\(d_i \\gt d\\)\nCan use centroids for distances\n\nCan cause issues, can try inverse weights\n\n\n\n\n\n\n\\(W_{ij} = \\frac{1}{d_{ij}}\\)\nHelps odd shapes or long distances from centroids\n\n\n\n\n\nBinary matrix: Matrix of 0/1s\n\nSymmetric matrix\n\nRow standardised matrix:\n\nDivide row by no. neighbours.\nNo longer symmetric\nTypically used over column\n\n\n\n\n\nGiven observation \\(i\\), spatial lag of \\(y_i\\), referred to as \\([Wy]_i\\)\n\\([Wy]_i=\\sum_{j=1}^{n}w_{ij}y_j\\)\n\\(W_{ii} = 0 \\forall i \\forall W\\)\n\n\n\n\nConsider that boundaries and subzones will change over the years\nAreas may get split or moved"
  },
  {
    "objectID": "InClassEx/ICE4/ICE4.html#ice",
    "href": "InClassEx/ICE4/ICE4.html#ice",
    "title": "In-Class Exercise 4: Spatial Weights and Applications",
    "section": "ICE",
    "text": "ICE\nGWmodel: Distance-based only\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr, GWmodel)\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", layer=\"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/InClassEx/ICE4/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n# Auto join on County\nhunan &lt;- left_join(hunan, hunan2012) %&gt;% select(1:4, 7, 15)\n\nOld package, need to convert from sf to sp\n\nhunan_sp &lt;- hunan %&gt;%\n  as_Spatial()\n\nSet bw because adaptive is true. (Adapt to get 6 neighbours) Can choose a kernel just like Spatial Point Pattern Analysis\n\ngwstat &lt;- gwss(data=hunan_sp,\n               vars = \"GDPPC\",\n               bw = 6,\n               kernel = \"bisquare\",\n               adaptive = TRUE, \n               longlat = T)\n\nTrying using GDPPC_LM / SD / Var / SKe / CV like Spatial Window Sums figure from the gwstat data structure"
  },
  {
    "objectID": "InClassEx/ICE4/ICE4.html#hands-on-notes",
    "href": "InClassEx/ICE4/ICE4.html#hands-on-notes",
    "title": "In-Class Exercise 4: Spatial Weights and Applications",
    "section": "Hands On Notes",
    "text": "Hands On Notes\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr, GWmodel)\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", layer=\"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/InClassEx/ICE4/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\n# Auto join on County\nhunan &lt;- left_join(hunan, hunan2012) %&gt;% select(1:4, 7, 15)\n\ntm_text is useful to display names on top of the polygons. Also adjust text size\n\nbasemap &lt;- tm_shape(hunan) +\n  tm_polygons() +\n  tm_text(\"NAME_3\", size=0.5)\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\ntmap_arrange(basemap, gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\n\nGet the number of links for each polygon or region\n\nwm_q &lt;- poly2nb(hunan, queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nHow to convert latlongs and get centroids\n\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\ncoords &lt;- cbind(longitude, latitude)\nhead(coords)\n\n     longitude latitude\n[1,]  112.1531 29.44362\n[2,]  112.0372 28.86489\n[3,]  111.8917 29.47107\n[4,]  111.7031 29.74499\n[5,]  111.6138 29.49258\n[6,]  111.0341 29.79863\n\n\n\nwm_q[[1]]\n\n[1]  2  3  4 57 85\n\nhunan$County[1]\n\n[1] \"Anxiang\"\n\n# show county names of 5 neighbours\nhunan$NAME_3[c(2,3,4,57,85)]\n\n[1] \"Hanshou\" \"Jinshi\"  \"Li\"      \"Nan\"     \"Taoyuan\"\n\n\n\n# Uses rook, fewer links\nwm_r &lt;- poly2nb(hunan, queen=FALSE)\nsummary(wm_r)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 440 \nPercentage nonzero weights: 5.681818 \nAverage number of links: 5 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 10 \n 2  2 12 20 21 14 11  3  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 10 links\n\n\nNotice the missing lines for Rook’s\n\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"Queen Contiguity\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\nplot(hunan$geometry, border=\"lightgrey\", main=\"Rook Contiguity\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\n\n\n\n\n\n\n\nNo distance limit to find distance neighbours Also note we are not using centroids\nNote the largest value to set a cutoff\n\nk1 &lt;- knn2nb(knearneigh(coords))\n# Must indicate that we are using longlats\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\nUse that cutoff for fixed distance weight matrix Remember to set longlat TRUE as well\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\n\nstr(wm_d62)\n\nList of 88\n $ : int [1:5] 3 4 5 57 64\n $ : int [1:4] 57 58 78 85\n $ : int [1:4] 1 4 5 57\n $ : int [1:3] 1 3 5\n $ : int [1:4] 1 3 4 85\n $ : int 69\n $ : int [1:2] 67 84\n $ : int [1:4] 9 46 47 78\n $ : int [1:4] 8 46 68 84\n $ : int [1:4] 16 22 70 72\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:2] 11 17\n $ : int 13\n $ : int [1:4] 10 17 22 83\n $ : int [1:3] 11 14 16\n $ : int [1:3] 20 22 63\n $ : int [1:5] 20 21 73 74 82\n $ : int [1:5] 18 19 21 22 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:4] 10 16 18 20\n $ : int [1:3] 41 77 82\n $ : int [1:4] 25 28 31 54\n $ : int [1:4] 24 28 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:2] 26 29\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:2] 27 37\n $ : int 33\n $ : int [1:2] 24 36\n $ : int 50\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:5] 31 34 45 56 80\n $ : int [1:2] 29 42\n $ : int [1:3] 44 77 79\n $ : int [1:4] 40 42 43 81\n $ : int [1:3] 39 45 79\n $ : int [1:5] 23 35 45 79 82\n $ : int [1:5] 26 37 39 43 81\n $ : int [1:3] 39 42 44\n $ : int [1:2] 38 43\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:5] 8 9 35 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:4] 48 49 50 52\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:2] 48 55\n $ : int [1:5] 24 28 49 50 52\n $ : int [1:4] 48 50 53 75\n $ : int 36\n $ : int [1:5] 1 2 3 58 64\n $ : int [1:5] 2 57 64 66 68\n $ : int [1:3] 60 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:5] 12 60 62 63 87\n $ : int [1:4] 61 63 77 87\n $ : int [1:5] 12 18 61 62 83\n $ : int [1:4] 1 57 58 76\n $ : int 76\n $ : int [1:5] 58 67 68 76 84\n $ : int [1:2] 7 66\n $ : int [1:4] 9 58 66 84\n $ : int [1:2] 6 75\n $ : int [1:3] 10 72 73\n $ : int [1:2] 73 74\n $ : int [1:3] 10 11 70\n $ : int [1:4] 19 70 71 74\n $ : int [1:5] 19 21 71 73 86\n $ : int [1:2] 55 69\n $ : int [1:3] 64 65 66\n $ : int [1:3] 23 38 62\n $ : int [1:2] 2 8\n $ : int [1:4] 38 40 41 45\n $ : int [1:5] 34 35 36 45 47\n $ : int [1:5] 25 26 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:4] 12 13 16 63\n $ : int [1:4] 7 9 66 68\n $ : int [1:2] 2 5\n $ : int [1:4] 21 46 47 74\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language dnearneigh(x = coords, d1 = 0, d2 = 62, longlat = TRUE)\n - attr(*, \"dnn\")= num [1:2] 0 62\n - attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n - attr(*, \"nbtype\")= chr \"distance\"\n - attr(*, \"sym\")= logi TRUE\n\n\nAdaptive neighbours: Will go as far as needed to get the number of neighbours\n\nknn6 &lt;- knn2nb(knearneigh(coords, k=6))\nknn6\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 528 \nPercentage nonzero weights: 6.818182 \nAverage number of links: 6 \nNon-symmetric neighbours list\n\n\n\nstr(knn6)\n\nList of 88\n $ : int [1:6] 2 3 4 5 57 64\n $ : int [1:6] 1 3 57 58 78 85\n $ : int [1:6] 1 2 4 5 57 85\n $ : int [1:6] 1 3 5 6 69 85\n $ : int [1:6] 1 3 4 6 69 85\n $ : int [1:6] 3 4 5 69 75 85\n $ : int [1:6] 9 66 67 71 74 84\n $ : int [1:6] 9 46 47 78 80 86\n $ : int [1:6] 8 46 66 68 84 86\n $ : int [1:6] 16 19 22 70 72 73\n $ : int [1:6] 10 14 16 17 70 72\n $ : int [1:6] 13 15 60 61 63 83\n $ : int [1:6] 12 15 60 61 63 83\n $ : int [1:6] 11 15 16 17 72 83\n $ : int [1:6] 12 13 14 17 60 83\n $ : int [1:6] 10 11 17 22 72 83\n $ : int [1:6] 10 11 14 16 72 83\n $ : int [1:6] 20 22 23 63 77 83\n $ : int [1:6] 10 20 21 73 74 82\n $ : int [1:6] 18 19 21 22 23 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:6] 10 16 18 19 20 83\n $ : int [1:6] 18 20 41 77 79 82\n $ : int [1:6] 25 28 31 52 54 81\n $ : int [1:6] 24 28 31 33 54 81\n $ : int [1:6] 25 27 29 33 42 81\n $ : int [1:6] 26 29 30 37 42 81\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:6] 26 27 37 42 43 81\n $ : int [1:6] 26 27 28 33 49 81\n $ : int [1:6] 24 25 36 39 40 54\n $ : int [1:6] 24 31 50 54 55 56\n $ : int [1:6] 25 26 28 30 49 81\n $ : int [1:6] 36 40 41 45 56 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:6] 26 27 29 42 43 44\n $ : int [1:6] 23 43 44 62 77 79\n $ : int [1:6] 25 40 42 43 44 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:6] 26 27 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:6] 37 38 39 42 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:6] 8 9 35 47 78 86\n $ : int [1:6] 8 21 35 46 80 86\n $ : int [1:6] 49 50 51 52 53 55\n $ : int [1:6] 28 33 48 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:6] 28 48 49 50 52 54\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:6] 48 50 51 52 55 75\n $ : int [1:6] 24 28 49 50 51 52\n $ : int [1:6] 32 48 50 52 53 75\n $ : int [1:6] 32 34 36 78 80 85\n $ : int [1:6] 1 2 3 58 64 68\n $ : int [1:6] 2 57 64 66 68 78\n $ : int [1:6] 12 13 60 61 87 88\n $ : int [1:6] 12 13 59 61 63 87\n $ : int [1:6] 12 13 60 62 63 87\n $ : int [1:6] 12 38 61 63 77 87\n $ : int [1:6] 12 18 60 61 62 83\n $ : int [1:6] 1 3 57 58 68 76\n $ : int [1:6] 58 64 66 67 68 76\n $ : int [1:6] 9 58 67 68 76 84\n $ : int [1:6] 7 65 66 68 76 84\n $ : int [1:6] 9 57 58 66 78 84\n $ : int [1:6] 4 5 6 32 75 85\n $ : int [1:6] 10 16 19 22 72 73\n $ : int [1:6] 7 19 73 74 84 86\n $ : int [1:6] 10 11 14 16 17 70\n $ : int [1:6] 10 19 21 70 71 74\n $ : int [1:6] 19 21 71 73 84 86\n $ : int [1:6] 6 32 50 53 55 69\n $ : int [1:6] 58 64 65 66 67 68\n $ : int [1:6] 18 23 38 61 62 63\n $ : int [1:6] 2 8 9 46 58 68\n $ : int [1:6] 38 40 41 43 44 45\n $ : int [1:6] 34 35 36 41 45 47\n $ : int [1:6] 25 26 28 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:6] 12 13 15 16 22 63\n $ : int [1:6] 7 9 66 68 71 74\n $ : int [1:6] 2 3 4 5 56 69\n $ : int [1:6] 8 9 21 46 47 74\n $ : int [1:6] 59 60 61 62 63 88\n $ : int [1:6] 59 60 61 62 63 87\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language knearneigh(x = coords, k = 6)\n - attr(*, \"sym\")= logi FALSE\n - attr(*, \"type\")= chr \"knn\"\n - attr(*, \"knn-k\")= num 6\n - attr(*, \"class\")= chr \"nb\"\n\n\n\nplot(hunan$geometry, border=\"lightgrey\")\nplot(knn6, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\n\n\n\n\n\n\n\nRow standardised with style=“W”\n\nrswm_q &lt;- nb2listw(wm_q, style=\"W\", zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\nrswm_q$weights[10]\n\n[[1]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n\n\nApplications\nGet the value but also apply a weight\n\nGDPPC.lag &lt;- lag.listw(rswm_q, hunan$GDPPC)\nGDPPC.lag\n\n [1] 24847.20 22724.80 24143.25 27737.50 27270.25 21248.80 43747.00 33582.71\n [9] 45651.17 32027.62 32671.00 20810.00 25711.50 30672.33 33457.75 31689.20\n[17] 20269.00 23901.60 25126.17 21903.43 22718.60 25918.80 20307.00 20023.80\n[25] 16576.80 18667.00 14394.67 19848.80 15516.33 20518.00 17572.00 15200.12\n[33] 18413.80 14419.33 24094.50 22019.83 12923.50 14756.00 13869.80 12296.67\n[41] 15775.17 14382.86 11566.33 13199.50 23412.00 39541.00 36186.60 16559.60\n[49] 20772.50 19471.20 19827.33 15466.80 12925.67 18577.17 14943.00 24913.00\n[57] 25093.00 24428.80 17003.00 21143.75 20435.00 17131.33 24569.75 23835.50\n[65] 26360.00 47383.40 55157.75 37058.00 21546.67 23348.67 42323.67 28938.60\n[73] 25880.80 47345.67 18711.33 29087.29 20748.29 35933.71 15439.71 29787.50\n[81] 18145.00 21617.00 29203.89 41363.67 22259.09 44939.56 16902.00 16930.00\n\n\nWindow methods: Includes self\nSpatial lag as a sum of neighboring values with weights. Does not include self\n\nb_weights &lt;- lapply(wm_q, function(x) 0*x + 1)\nb_weights2 &lt;- nb2listw(wm_q, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1    S2\nB 88 7744 448 896 10224\n\n\n\nlag_sum &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag_sum)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag_sum GDPPC\")\nlag_sum\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 124236 113624  96573 110950 109081 106244 174988 235079 273907 256221\n[11]  98013 104050 102846  92017 133831 158446 141883 119508 150757 153324\n[21] 113593 129594 142149 100119  82884  74668  43184  99244  46549  20518\n[31] 140576 121601  92069  43258 144567 132119  51694  59024  69349  73780\n[41]  94651 100680  69398  52798 140472 118623 180933  82798  83090  97356\n[51]  59482  77334  38777 111463  74715 174391 150558 122144  68012  84575\n[61] 143045  51394  98279  47671  26360 236917 220631 185290  64640  70046\n[71] 126971 144693 129404 284074 112268 203611 145238 251536 108078 238300\n[81] 108870 108085 262835 248182 244850 404456  67608  33860"
  },
  {
    "objectID": "HandsOnEx/HE5/HE5.html",
    "href": "HandsOnEx/HE5/HE5.html",
    "title": "Hands-On Exercise 5 & 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "",
    "text": "Note: HE5 & 6 are combined in this webpage since they were released in the same week. I have removed repeated code from both exercises so they flow continuously. It has gotten a bit large, I might separate the notes and code accordingly later on!"
  },
  {
    "objectID": "HandsOnEx/HE5/HE5.html#notes",
    "href": "HandsOnEx/HE5/HE5.html#notes",
    "title": "Hands-On Exercise 5 & 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "Notes",
    "text": "Notes\n\nTobler’s First law of Geography\nEverything is related to everything else but near things are more related than distant things.\nRelates to spatial dependence and spatial autocorrelation\n\n\nSpatial Dependency\nSpatial relationship of variable values over space or locations Measured as the existence of statistical dependence in a collection of random variables, each associated with a different geographical location\n\n\nSpatial Autocorrelation\nThe presence of systematic spatial variation in a variable\nCan assume values\n\nAt any point on a continuous surface\nAt a set of fixed states within a region\nAcross a set of areas subdividing a region (Like MPSZ Subzones)\n\n\n\nPositive Spatial Autocorrelation (Higher value)\n\nClustering: Values tend to be similar in similar locations\nNeighbors are similar: More similar than under spatial randomness\nCompatible with diffusion but not necessarily caused by diffusion\n\n\n\nNegative Spatial Autocorrelation\n\nCheckerboard: Opposite of clustering\nDifferent neighbors: More dissimilar than under randomness\nCompatible with competition but not necessarily caused by competition\n\n\n\nMeasures of Global Spatial Autocorrelation\n\nMoran’s I: How features differ from the values in the study area as a whole\nI &gt; 0: Clustered, observations tend ot be similar\nI &lt; 0: Dispersed, observations tend to be different\nI near 0: Observations are arranged randomly over space\nGeary’s C: Describes how features differ from their immediate neighbors\nC approaches 0 when clustered\nC approaches 3 when different values tend to cluster\nHigh values of C corresponds with low I\nInverse relationship\n\n\n\nSpatial Randomness\n\nNull Hypothesis \\(H_0\\)\nObserved spatial pattern is equally as likely as any other pattern\nValues at one location do not depend on neighbours\nUnder spatial randomness, value locations may be altered without affecting the information content of the data\nDoubting the assumption of Moran’s I on normality and randomisation\nUse Monte Carlo simulation\nSimulate Moran’s I under the assumption of no spatial pattern\nAssign all regions the mean value\nCalculate Moran’s I\nCompare actual Moran’s I to the simulations to obtain p-values\n\n\n\nMeasures of Global high/low clustering (Getis-Ord Global G)\n\nConcerns the overall concentration or lack thereof in all pairs of neighbours given the definition of “neighbour” (Rook or Queen?)\nCan only handle postiive values\n\n\n\nInterpreting Getis-Ord Global G\n\np value not statistically significant\nCannot reject null hypothesis\np value statistically significant and z score is positive\nCan reject null, spatial distribution of high values is more clustered than expected if random\np value is statistically significant z score is negative\nCan reject null, spatial distribution of low values is more clustered than expected if random\n\n\n\nLocal Spatial Autocorrelation Statistics\n\nGeospatial Statistical Analysis methods to analyse the location-related tendency (Clusters or not) in the attributes of geographically referenced data\nCan be indices from their global measures\n\nLocal Moran’s I\nLocal Geary’s C\nGetis-Ord Gi*\n\nGood for\nDetecting clusters or outleirs\nIdentify hot or cold spot areas\nAssess the assumptions of Stationarity\nIdentify distances beyond discernible associates (Long reaching influences?)\n\n\n\nLocal Indicator of Spatial Association (LISA)\n\nSubset of localised geospatial statistics methods\nAny spatial stats method satisfying:\nLISA for every observation indicates the extent of significant spatial clustering of similar values around that observation\nSum of LISAs for all observations is proportionate to a global indicator of spatial association\n\n\n\nDetecting Spatial Clusters and Outliers\n\nGiven a set of geospatial features and an analysis field, the spatial stats identify spatial clusters of features with high or low values. Also identifies spatial outliers\nLocal Moran’s I is most popular\nGenerally, the analysis calculates a local statistic value, z-score, pseudo p-value and code to represent the cluster type for every statistically signifcant feature.\nUse z-scores abd p-values to represent statistical significance of computed index values\n\n\n\nLocal Moran’s I\n\nOutlier: significant and negative if location i is associated with relatively low values in surrounding locations\nCluster: significant and postive if location i is associated with relative high values in surrounding locations\nCommon alphas: 0.1, 0.05, 0.01, 0.001\nConsider the quadrants when plotting Local Moran in Scatterplot\nLL & HH: Cluster, else outlier\nLH & HL: Low/High outlier among low/high neighbours\n\n\n\nHot and Cold Spot Areas\nFor a set of geospatial features in a study area, spatial stats tell us where values with high or low values cluster spatially\n\nUse the Gi* (Getis-Ord Gi*)\nHot-spot: Significant and positive if location i is associated with relatively high values\nCold-spot: Significant and negative if location i is associated with relatively low values\n\n\n\nFixed weighting schemes:\nSeveral considerations if using fixed distances\n\nAll features need at least one neighbour\nNo feature should be neighbours with all others\nFeatures should have about 8 neighbours each, especially if values for the inpout field are skewed\nMight proiduce large estiamte variances with sparse data and mask subtle local variations with dense data\nFixed schemes may not be able to calibrate in local areas where data is too sparse to meet calibration requirements (Observations must be more than parameters)\n\n\n\nAdaptive weighting schemes\nAdjust themselves according to data density (Not a global thing)\n\nBWs are shorter with dense data and vice versa\nFinding NN is a common approach\n\n\n\nBest Practices\n\nNeed at least 30 features\nInput field must be a continuous data type. Not categorical\n\n\n\nSpatial weighting method selection\n\nPolygon continuity\nGood if polygons are similar in size and distribution and when spatial relationships are a function of polygon proximity (shared borders increasing interaction)\nSelect row standardization if available\nFixed-distance works well for point data or where polygon data has large variance in polygon size and you want a consistent scale of analysis\nInverse distance: Best with continuous data or to model processes where closer features are more likely to interact with or influence each other\nIn this approach, every polygon is potentially a neighbor. Computationally difficult\n\n\n\nSpatial weighing method selection\n\nKNN is good to ensure a minimum number of neighbours\nVery good if values are skewed\nGood with varying distributions\nNote that spatial context of analysis changes with sparsity and density variations\nWhen fixing scale is less important than number of neighbours, KNN is good\n\n\n\nFixed=dsitance bandwidth values\n\nChoose a distance based on known geographic extent of the spatial processes promoting clustering for the studied phenomena\nNeeds to be big enough to guarantee at least one neighbour\nNeed the following criteria\nAt least one neighbour\nNo feature should be neighbours with all others\nAbout 8 if data is skewed\n\n\n\nEmerging Hotspot Analysis (EHSA)\n\nTechnique that falls under Exploratory Spatial Data Analysis (ESDA)\nCombines Hotspot analysis with Getis-Ord Gi* with time-series Mann-Kendall test for monotonic trends\nEvaluate how hot and cold spots change over time\n\nAre they becoming increasingly hotter? Cooling down? Staying same?\n\n\n\n\nMann-Kendall test for trend overview\n\nNon-parametric, but should not have serial correlation\nIf normal distribution, normal regression works\nCheck rate of change over time and statiscal significance\n\n\\(H_0\\) : No monotonic trend\n\\(H_1\\) : A trend exists, can be postive, negative or non-null\nDoes not assess the magnitude of change, can find trends in as few as 4 samples, but may not find it. Recommended at least 8-10 points\n\n\nData requirements\nEnsure that - Data is not collected seasonally (e.g. only in winter and summer). Needs the seasonal Kendall Test - No covarities, i.e. other factos influencing data other than the plotted data - Only one data point per time period. Use Median if more than one\n\n\nEHSA Patterns for Hot Spot Trends (Typically based on 90% of time-step intervals)\n\nNo pattern\nNew hot spot\nConsecutive hot spot\nIntensifying hot spot\nPersistent hot spot\nDiminishing hot spot\nSporadic hot spot\nOscillating hot spot\nHistorical hot spot\n\n\n\nEHSA Patterns for Cold Spot Trends\n\nNew cold spot\nConsecutive cold spot\nIntensifying cold spot\nPersistent cold spot\nDiminishing cold spot\nSporadic cold spot\nOscillating cold spot\nHistorical cold spot\n\n\n\nSpacetime cudes\nA spacetime object is a spacetime cube if every location has a value for every time index (each location has a regular time series)\nThe basic unit of a spacetime cube is a bin - Unique combo of location and time index - Collection at every location is a time-slice\n-   In every location, collection of evrey bin at each time index is a bin time-series"
  },
  {
    "objectID": "HandsOnEx/HE5/HE5.html#setup",
    "href": "HandsOnEx/HE5/HE5.html#setup",
    "title": "Hands-On Exercise 5 & 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "1.0 Setup",
    "text": "1.0 Setup\n\npacman::p_load(sf, spdep, tmap, tidyverse, ggplot2)\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/HandsOnEx/HE5/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\nhunan &lt;- left_join(hunan,hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\n\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "HandsOnEx/HE5/HE5.html#global-measure-of-spatial-autocorrelation",
    "href": "HandsOnEx/HE5/HE5.html#global-measure-of-spatial-autocorrelation",
    "title": "Hands-On Exercise 5 & 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "2.0 Global Measure of Spatial Autocorrelation",
    "text": "2.0 Global Measure of Spatial Autocorrelation\n\n2.1 Contiguity Spatial Weights\n\nwm_q &lt;- poly2nb(hunan, \n                queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\n\n\n2.2 Row standardised weights matrix\nW = Row B = Binary C = Global standardise S = Variance-stabilizing coding\nZero: Weights vectors of zero length are inserted for regions with no neighbours. Will create lag values of 0.\n\nrswm_q &lt;- nb2listw(wm_q, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrswm_q\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\n\n2.3 Moran’s I\n\nmoran.test(hunan$GDPPC, \n           listw=rswm_q, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\nThe result shows that it GDPPC is clustered, with a very small p-value, meaning it is very unlikely to occur by chance\n\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\nWhen run with the assumption of no spatial pattern, our data’s Moran’s I score outranks all of them. The pseudo-p value here is 0.001, meaning the chance that our data’s clustering pattern coincidentally happened to be the best is 1/1000.\n\nmean(bperm$res[1:999])\n\n[1] -0.01504572\n\nvar(bperm$res[1:999])\n\n[1] 0.004371574\n\nsummary(bperm$res[1:999])\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\n\n\nggplot(data = data.frame(res = bperm$res), aes(x = res)) +\n  geom_histogram(fill = \"lightblue\", color = \"black\") +\n  labs(x = \"Simulated Moran's I\", y = \"Frequency\") +\n  theme_minimal() +\n\n  geom_vline(xintercept = 0, color = \"red\")\n\n\n\n\n\n\n\n\n\n\n2.4 Geary’s C\nFrom this, we can tell that the data is skewed\n\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\nThe geary statistic is 0.69, which is closer to 0 than it is to 3, indicating clustering. The p value is also very small, meaning that this is unlikely to be a coincidence.\n\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\nIn case we doubt the result, we run the monte carlo test to get a pesudo p value. Similarly to the Moran’s I test, our data’s Geary’s C outranks all of the other simulations. This indicates that the chance of our data’s Geary C score outranking all of the other simulations by coincidence is 1/1000, which is very unlikely.\n\nmean(bperm$res[1:999])\n\n[1] 1.004402\n\nvar(bperm$res[1:999])\n\n[1] 0.007436493\n\nsummary(bperm$res[1:999])\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\n\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\") \n\n\n\n\n\n\n\n\nThe simulated values seem to follow a normal distribution\n\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\n\n\n\n\nprint(MI_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nThe plot above seems to show that the correlation between pairs of spatial observations decreases with distance. As such, the measured phenomena are likely localized.\nFrom the statistics, the Moran’s I scores are mostly statistically significant.\n\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\n\n\n\n\nprint(GC_corr)\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "HandsOnEx/HE5/HE5.html#local-measures-of-spatial-autocorrelation",
    "href": "HandsOnEx/HE5/HE5.html#local-measures-of-spatial-autocorrelation",
    "title": "Hands-On Exercise 5 & 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "3.0 Local Measures of Spatial Autocorrelation",
    "text": "3.0 Local Measures of Spatial Autocorrelation\n\n3.1 Cluster and Outlier Analysis\n\nfips &lt;- order(hunan$County)\nlocalMI &lt;- localmoran(hunan$GDPPC, rswm_q)\nhead(localMI)\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\n\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan$County[fips]),\n  check.names=FALSE)\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n\nhunan.localMI &lt;- cbind(hunan,localMI) %&gt;%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\nhunan.localMI$Pr.Ii2 &lt;- substr(hunan.localMI$Pr.Ii, 1, 5)\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5) + \n  tm_text(\"Pr.Ii2\", size = 1/2)\n\n\n\n\n\n\n\n\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nlocalMI.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n3.2 LISA Cluster Map\n\nMoran Scatterplots\n\nnci &lt;- moran.plot(hunan$GDPPC, rswm_q,\n                  labels=as.character(hunan$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\n\n\n\n\n\nhunan$Z.GDPPC &lt;- scale(hunan$GDPPC) %&gt;% \n  as.vector \n\n\nnci2 &lt;- moran.plot(hunan$Z.GDPPC, rswm_q,\n                   labels=as.character(hunan$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")\n\n\n\n\n\n\n\n\n\n\nLISA map classes\n\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\n\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)     \n\nLM_I &lt;- localMI[,1] - mean(localMI[,1])    \n\nsignif &lt;- 0.05 \n\n\nquadrant[DV &lt;0 & LM_I&gt;0] &lt;- 1\nquadrant[DV &gt;0 & LM_I&lt;0] &lt;- 2\nquadrant[DV &lt;0 & LM_I&lt;0] &lt;- 3  \nquadrant[DV &gt;0 & LM_I&gt;0] &lt;- 4      \n\nquadrant[localMI[,5]&gt;signif] &lt;- 0\n\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\n\n\n\n\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(gdppc, LISAmap, \n             asp=1, ncol=2)\n\n\n\n\n\n\n\n\nFrom this visualisation, we can infer that the GDPPC spatial clusters identified with local moran scores are generally statistically significant in the northeastern region"
  },
  {
    "objectID": "HandsOnEx/HE5/HE5.html#hot-spot-and-cold-spot-area-analysis",
    "href": "HandsOnEx/HE5/HE5.html#hot-spot-and-cold-spot-area-analysis",
    "title": "Hands-On Exercise 5 & 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "4.0 Hot spot and cold spot area analysis",
    "text": "4.0 Hot spot and cold spot area analysis\n\n4.1 Deriving Centroids\n\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\ncoords &lt;- cbind(longitude, latitude)\n\n\n\n4.2 Determining Cutoff Distance\n\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\n\n\n4.3 Computing fixed distance weight matrix\n\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\n\nwm62_lw &lt;- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440\n\n\n\n\n4.4 Computing adaptive distance weight matrix\n\nknn &lt;- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\n\nknn_lw &lt;- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014"
  },
  {
    "objectID": "HandsOnEx/HE5/HE5.html#computing-gi-statistics",
    "href": "HandsOnEx/HE5/HE5.html#computing-gi-statistics",
    "title": "Hands-On Exercise 5 & 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "5.0 Computing Gi Statistics",
    "text": "5.0 Computing Gi Statistics\n\n5.1 Gi statisitcs using fixed distance\n\nfips &lt;- order(hunan$County)\ngi.fixed &lt;- localG(hunan$GDPPC, wm62_lw)\ngi.fixed\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"internals\")\n               Gi      E(Gi)        V(Gi)        Z(Gi) Pr(z != E(Gi))\n [1,] 0.064192949 0.05747126 2.375922e-04  0.436075843   6.627817e-01\n [2,] 0.042300020 0.04597701 1.917951e-04 -0.265505650   7.906200e-01\n [3,] 0.044961480 0.04597701 1.933486e-04 -0.073033665   9.417793e-01\n [4,] 0.039475779 0.03448276 1.461473e-04  0.413017033   6.795941e-01\n [5,] 0.049767939 0.04597701 1.927263e-04  0.273070579   7.847990e-01\n [6,] 0.008825335 0.01149425 4.998177e-05 -0.377510776   7.057941e-01\n [7,] 0.050807266 0.02298851 9.435398e-05  2.863898821   4.184617e-03\n [8,] 0.083966739 0.04597701 1.848292e-04  2.794350420   5.200409e-03\n [9,] 0.115751554 0.04597701 1.789361e-04  5.216125401   1.827045e-07\n[10,] 0.049115587 0.04597701 1.891013e-04  0.228236603   8.194623e-01\n[11,] 0.045819180 0.03448276 1.420884e-04  0.951035346   3.415864e-01\n[12,] 0.049183846 0.05747126 2.387633e-04 -0.536334231   5.917276e-01\n[13,] 0.048429181 0.04597701 1.924532e-04  0.176761556   8.596957e-01\n[14,] 0.034733752 0.02298851 9.651140e-05  1.195564020   2.318667e-01\n[15,] 0.011262043 0.01149425 4.945294e-05 -0.033020610   9.736582e-01\n[16,] 0.065131196 0.04597701 1.931870e-04  1.378081093   1.681783e-01\n[17,] 0.027587075 0.03448276 1.385862e-04 -0.585756761   5.580390e-01\n[18,] 0.029409313 0.03448276 1.461397e-04 -0.419680565   6.747188e-01\n[19,] 0.061466754 0.05747126 2.383385e-04  0.258805141   7.957856e-01\n[20,] 0.057656917 0.05747126 2.371303e-04  0.012056111   9.903808e-01\n[21,] 0.066518379 0.06896552 2.820326e-04 -0.145716531   8.841452e-01\n[22,] 0.045599896 0.04597701 1.928108e-04 -0.027158687   9.783332e-01\n[23,] 0.030646753 0.03448276 1.449523e-04 -0.318615290   7.500183e-01\n[24,] 0.035635552 0.04597701 1.906613e-04 -0.748946051   4.538897e-01\n[25,] 0.032606647 0.04597701 1.932888e-04 -0.961700582   3.362000e-01\n[26,] 0.035001352 0.04597701 1.897172e-04 -0.796851342   4.255374e-01\n[27,] 0.012746354 0.02298851 9.812587e-05 -1.033949773   3.011596e-01\n[28,] 0.061287917 0.06896552 2.773884e-04 -0.460979158   6.448136e-01\n[29,] 0.014277403 0.02298851 9.683314e-05 -0.885240161   3.760271e-01\n[30,] 0.009622875 0.01149425 4.924586e-05 -0.266671512   7.897221e-01\n[31,] 0.014258398 0.02298851 9.705244e-05 -0.886168613   3.755267e-01\n[32,] 0.005453443 0.01149425 4.986245e-05 -0.855476971   3.922871e-01\n[33,] 0.043283712 0.05747126 2.367109e-04 -0.922143185   3.564539e-01\n[34,] 0.020763514 0.03448276 1.393165e-04 -1.162328599   2.451020e-01\n[35,] 0.081261843 0.06896552 2.794398e-04  0.735582222   4.619850e-01\n[36,] 0.057419907 0.05747126 2.338437e-04 -0.003358489   9.973203e-01\n[37,] 0.013497133 0.02298851 9.624821e-05 -0.967459309   3.333145e-01\n[38,] 0.019289310 0.03448276 1.455643e-04 -1.259299080   2.079223e-01\n[39,] 0.025996272 0.04597701 1.892938e-04 -1.452256513   1.464303e-01\n[40,] 0.016092694 0.03448276 1.424776e-04 -1.540671121   1.233968e-01\n[41,] 0.035952614 0.05747126 2.379439e-04 -1.395011407   1.630124e-01\n[42,] 0.031690963 0.05747126 2.350604e-04 -1.681505286   9.266481e-02\n[43,] 0.018750079 0.03448276 1.433314e-04 -1.314110709   1.888090e-01\n[44,] 0.015449080 0.02298851 9.638666e-05 -0.767944457   4.425202e-01\n[45,] 0.065760689 0.06896552 2.760533e-04 -0.192889342   8.470456e-01\n[46,] 0.098966900 0.05747126 2.326002e-04  2.720804542   6.512325e-03\n[47,] 0.085415780 0.05747126 2.385746e-04  1.809191360   7.042128e-02\n[48,] 0.038816536 0.05747126 2.343951e-04 -1.218469473   2.230456e-01\n[49,] 0.038931873 0.04597701 1.893501e-04 -0.511984469   6.086619e-01\n[50,] 0.055098610 0.06896552 2.760948e-04 -0.834546363   4.039732e-01\n[51,] 0.033405005 0.04597701 1.916312e-04 -0.908179070   3.637836e-01\n[52,] 0.043040784 0.06896552 2.829941e-04 -1.541081516   1.232969e-01\n[53,] 0.011297699 0.02298851 9.615920e-05 -1.192199867   2.331829e-01\n[54,] 0.040968457 0.05747126 2.356318e-04 -1.075080164   2.823388e-01\n[55,] 0.023629663 0.04597701 1.877170e-04 -1.631075961   1.028743e-01\n[56,] 0.006281129 0.01149425 4.916619e-05 -0.743472246   4.571958e-01\n[57,] 0.063918654 0.05747126 2.369553e-04  0.418842387   6.753313e-01\n[58,] 0.070325003 0.05747126 2.381374e-04  0.832943753   4.048765e-01\n[59,] 0.025947288 0.03448276 1.444058e-04 -0.710289083   4.775249e-01\n[60,] 0.039752578 0.04597701 1.915656e-04 -0.449718820   6.529132e-01\n[61,] 0.049934283 0.05747126 2.334965e-04 -0.493238743   6.218439e-01\n[62,] 0.030964195 0.04597701 1.920248e-04 -1.083386776   2.786368e-01\n[63,] 0.058129184 0.05747126 2.343319e-04  0.042979051   9.657182e-01\n[64,] 0.046096514 0.04597701 1.932637e-04  0.008596093   9.931414e-01\n[65,] 0.012459080 0.01149425 5.008051e-05  0.136337469   8.915545e-01\n[66,] 0.091447733 0.05747126 2.377744e-04  2.203411744   2.756574e-02\n[67,] 0.049575872 0.02298851 9.766513e-05  2.690329952   7.138140e-03\n[68,] 0.107907212 0.04597701 1.933581e-04  4.453703219   8.440175e-06\n[69,] 0.019616151 0.02298851 9.789454e-05 -0.340842743   7.332220e-01\n[70,] 0.032923393 0.03448276 1.454032e-04 -0.129318589   8.971056e-01\n[71,] 0.030317663 0.02298851 9.867859e-05  0.737806634   4.606320e-01\n[72,] 0.019437582 0.03448276 1.455870e-04 -1.246912658   2.124295e-01\n[73,] 0.055245460 0.04597701 1.932838e-04  0.666667559   5.049845e-01\n[74,] 0.074278054 0.05747126 2.383538e-04  1.088613505   2.763244e-01\n[75,] 0.013269580 0.02298851 9.719982e-05 -0.985792573   3.242349e-01\n[76,] 0.049407829 0.03448276 1.463785e-04  1.233609606   2.173484e-01\n[77,] 0.028605749 0.03448276 1.455139e-04 -0.487196415   6.261191e-01\n[78,] 0.039087662 0.02298851 9.801040e-05  1.626174042   1.039126e-01\n[79,] 0.031447120 0.04597701 1.877464e-04 -1.060416797   2.889550e-01\n[80,] 0.064005294 0.05747126 2.359641e-04  0.425361422   6.705732e-01\n[81,] 0.044606529 0.05747126 2.357330e-04 -0.837897118   4.020885e-01\n[82,] 0.063700493 0.06896552 2.801427e-04 -0.314565243   7.530918e-01\n[83,] 0.051142205 0.04597701 1.933560e-04  0.371456331   7.102977e-01\n[84,] 0.102121112 0.04597701 1.610278e-04  4.424392623   9.671399e-06\n[85,] 0.021901462 0.02298851 9.843172e-05 -0.109566928   9.127528e-01\n[86,] 0.064931813 0.04597701 1.929430e-04  1.364597995   1.723794e-01\n[87,] 0.031747344 0.04597701 1.909867e-04 -1.029658605   3.031703e-01\n[88,] 0.015893319 0.02298851 9.765131e-05 -0.718000620   4.727569e-01\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\n\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.fixed)) %&gt;%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\n\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;-tm_shape(hunan.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\n\n\n\n\n\n\n\nFrom this plot, we can see that there is a particularly hot spot in the north east, but also 4 particularly cold spots elsewhere that were not previously visible when using a distance weight matrix derived with a fixed bandwidth of 62KM.\n\n5.2 Adaptive Distance\n\nfips &lt;- order(hunan$County)\ngi.adaptive &lt;- localG(hunan$GDPPC, knn_lw)\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.adaptive)) %&gt;%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\ngdppc&lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)\n\n\n\n\n\n\n\n\nFrom this plot, we can see a hotspot in the north east, but the cold spots are focused in a small south-western region. This visualisation is different from the fixed weighting scheme because we used an adaptive weighting scheme, which may have helped overcome the issue of unevenly sized polygons."
  },
  {
    "objectID": "InClassEx/ICE5/ICE5.html",
    "href": "InClassEx/ICE5/ICE5.html",
    "title": "In-Class Exercise 5 & 6: Global and Local Measures of Spatial Autocorrelation",
    "section": "",
    "text": "pacman::p_load(sf, tmap, sfdep, tidyverse, plotly)\n\n\nhunan &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n\nReading layer `Hunan' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/InClassEx/ICE5/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\nhunan2012 &lt;- read_csv(\"data/aspatial/Hunan_2012.csv\")\n\n\nhunan_GDPPC &lt;- left_join(hunan, hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\n\ntmap_mode(\"plot\")\ntm_shape(hunan_GDPPC) +\n  tm_fill(\"GDPPC\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"GDPPC\") +\n  tm_layout(main.title = \"Distribution of GDP per capita by district, Hunan Province\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n\n\n\n\n\n\n\n\n\nnb_queen &lt;- hunan_GDPPC %&gt;% \n  mutate(nb = st_contiguity(geometry),\n         .before = 1)\nsummary(nb_queen$nb)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\n\nnb_queen$County[c(2,3,4,57,85)]\n\n[1] \"Hanshou\" \"Jinshi\"  \"Li\"      \"Nan\"     \"Taoyuan\"\n\n\n\nnb_rook &lt;- hunan_GDPPC %&gt;% \n  mutate(nb = st_contiguity(geometry,\n                            queen = FALSE),\n         .before = 1)\n\n\nnb2_queen &lt;- hunan_GDPPC %&gt;% \n  mutate(nb = st_contiguity(geometry),\n         nb2 = st_nb_lag_cumul(nb, 2),\n         .before = 1)\nnb2_queen\n\nSimple feature collection with 88 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                               nb\n1                 2, 3, 4, 57, 85\n2               1, 57, 58, 78, 85\n3                     1, 4, 5, 85\n4                      1, 3, 5, 6\n5                     3, 4, 6, 85\n6                4, 5, 69, 75, 85\n7                  67, 71, 74, 84\n8       9, 46, 47, 56, 78, 80, 86\n9           8, 66, 68, 78, 84, 86\n10 16, 17, 19, 20, 22, 70, 72, 73\n                                                                                        nb2\n1                                     2, 3, 4, 5, 6, 32, 56, 57, 58, 64, 69, 75, 76, 78, 85\n2                           1, 3, 4, 5, 6, 8, 9, 32, 56, 57, 58, 64, 68, 69, 75, 76, 78, 85\n3                                                 1, 2, 4, 5, 6, 32, 56, 57, 69, 75, 78, 85\n4                                                             1, 2, 3, 5, 6, 57, 69, 75, 85\n5                                                 1, 2, 3, 4, 6, 32, 56, 57, 69, 75, 78, 85\n6                                         1, 2, 3, 4, 5, 32, 53, 55, 56, 57, 69, 75, 78, 85\n7                                                     9, 19, 66, 67, 71, 73, 74, 76, 84, 86\n8  2, 9, 19, 21, 31, 32, 34, 35, 36, 41, 45, 46, 47, 56, 58, 66, 68, 74, 78, 80, 84, 85, 86\n9               2, 7, 8, 19, 21, 35, 46, 47, 56, 58, 66, 67, 68, 74, 76, 78, 80, 84, 85, 86\n10               11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 70, 71, 72, 73, 74, 82, 83, 86\n     NAME_2  ID_3    NAME_3   ENGTYPE_3    County GDPPC\n1   Changde 21098   Anxiang      County   Anxiang 23667\n2   Changde 21100   Hanshou      County   Hanshou 20981\n3   Changde 21101    Jinshi County City    Jinshi 34592\n4   Changde 21102        Li      County        Li 24473\n5   Changde 21103     Linli      County     Linli 25554\n6   Changde 21104    Shimen      County    Shimen 27137\n7  Changsha 21109   Liuyang County City   Liuyang 63118\n8  Changsha 21110 Ningxiang      County Ningxiang 62202\n9  Changsha 21111 Wangcheng      County Wangcheng 70666\n10 Chenzhou 21112     Anren      County     Anren 12761\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734...\n\n\n\nwm_q &lt;- hunan_GDPPC %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1) \nwm_q\n\nSimple feature collection with 88 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                               nb\n1                 2, 3, 4, 57, 85\n2               1, 57, 58, 78, 85\n3                     1, 4, 5, 85\n4                      1, 3, 5, 6\n5                     3, 4, 6, 85\n6                4, 5, 69, 75, 85\n7                  67, 71, 74, 84\n8       9, 46, 47, 56, 78, 80, 86\n9           8, 66, 68, 78, 84, 86\n10 16, 17, 19, 20, 22, 70, 72, 73\n                                                                            wt\n1                                                      0.2, 0.2, 0.2, 0.2, 0.2\n2                                                      0.2, 0.2, 0.2, 0.2, 0.2\n3                                                       0.25, 0.25, 0.25, 0.25\n4                                                       0.25, 0.25, 0.25, 0.25\n5                                                       0.25, 0.25, 0.25, 0.25\n6                                                      0.2, 0.2, 0.2, 0.2, 0.2\n7                                                       0.25, 0.25, 0.25, 0.25\n8  0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n9             0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667\n10                      0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125\n     NAME_2  ID_3    NAME_3   ENGTYPE_3    County GDPPC\n1   Changde 21098   Anxiang      County   Anxiang 23667\n2   Changde 21100   Hanshou      County   Hanshou 20981\n3   Changde 21101    Jinshi County City    Jinshi 34592\n4   Changde 21102        Li      County        Li 24473\n5   Changde 21103     Linli      County     Linli 25554\n6   Changde 21104    Shimen      County    Shimen 27137\n7  Changsha 21109   Liuyang County City   Liuyang 63118\n8  Changsha 21110 Ningxiang      County Ningxiang 62202\n9  Changsha 21111 Wangcheng      County Wangcheng 70666\n10 Chenzhou 21112     Anren      County     Anren 12761\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734...\n\n\nROOK method\n\nwm_r &lt;- hunan %&gt;%\n  mutate(nb = st_contiguity(geometry,\n                            queen = FALSE),\n         wt = st_weights(nb),\n         .before = 1) \nwm_r\n\nSimple feature collection with 88 features and 9 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                           nb\n1                3, 4, 57, 85\n2              57, 58, 78, 85\n3                 1, 4, 5, 85\n4                  1, 3, 5, 6\n5                 3, 4, 6, 85\n6            4, 5, 69, 75, 85\n7              67, 71, 74, 84\n8   9, 46, 47, 56, 78, 80, 86\n9       8, 66, 68, 78, 84, 86\n10 16, 19, 20, 22, 70, 72, 73\n                                                                            wt\n1                                                       0.25, 0.25, 0.25, 0.25\n2                                                       0.25, 0.25, 0.25, 0.25\n3                                                       0.25, 0.25, 0.25, 0.25\n4                                                       0.25, 0.25, 0.25, 0.25\n5                                                       0.25, 0.25, 0.25, 0.25\n6                                                      0.2, 0.2, 0.2, 0.2, 0.2\n7                                                       0.25, 0.25, 0.25, 0.25\n8  0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n9             0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667\n10 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n     NAME_2  ID_3    NAME_3   ENGTYPE_3 Shape_Leng Shape_Area    County\n1   Changde 21098   Anxiang      County   1.869074 0.10056190   Anxiang\n2   Changde 21100   Hanshou      County   2.360691 0.19978745   Hanshou\n3   Changde 21101    Jinshi County City   1.425620 0.05302413    Jinshi\n4   Changde 21102        Li      County   3.474325 0.18908121        Li\n5   Changde 21103     Linli      County   2.289506 0.11450357     Linli\n6   Changde 21104    Shimen      County   4.171918 0.37194707    Shimen\n7  Changsha 21109   Liuyang County City   4.060579 0.46016789   Liuyang\n8  Changsha 21110 Ningxiang      County   3.323754 0.26614198 Ningxiang\n9  Changsha 21111 Wangcheng      County   2.292093 0.13049161 Wangcheng\n10 Chenzhou 21112     Anren      County   2.240739 0.13343936     Anren\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734...\n\n\nQUEEN method\n\nwm_r &lt;- hunan %&gt;%\n  mutate(nb = st_contiguity(geometry,\n                            queen = FALSE),\n         wt = st_weights(nb),\n         .before = 1) \nwm_r\n\nSimple feature collection with 88 features and 9 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                           nb\n1                3, 4, 57, 85\n2              57, 58, 78, 85\n3                 1, 4, 5, 85\n4                  1, 3, 5, 6\n5                 3, 4, 6, 85\n6            4, 5, 69, 75, 85\n7              67, 71, 74, 84\n8   9, 46, 47, 56, 78, 80, 86\n9       8, 66, 68, 78, 84, 86\n10 16, 19, 20, 22, 70, 72, 73\n                                                                            wt\n1                                                       0.25, 0.25, 0.25, 0.25\n2                                                       0.25, 0.25, 0.25, 0.25\n3                                                       0.25, 0.25, 0.25, 0.25\n4                                                       0.25, 0.25, 0.25, 0.25\n5                                                       0.25, 0.25, 0.25, 0.25\n6                                                      0.2, 0.2, 0.2, 0.2, 0.2\n7                                                       0.25, 0.25, 0.25, 0.25\n8  0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n9             0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667\n10 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n     NAME_2  ID_3    NAME_3   ENGTYPE_3 Shape_Leng Shape_Area    County\n1   Changde 21098   Anxiang      County   1.869074 0.10056190   Anxiang\n2   Changde 21100   Hanshou      County   2.360691 0.19978745   Hanshou\n3   Changde 21101    Jinshi County City   1.425620 0.05302413    Jinshi\n4   Changde 21102        Li      County   3.474325 0.18908121        Li\n5   Changde 21103     Linli      County   2.289506 0.11450357     Linli\n6   Changde 21104    Shimen      County   4.171918 0.37194707    Shimen\n7  Changsha 21109   Liuyang County City   4.060579 0.46016789   Liuyang\n8  Changsha 21110 Ningxiang      County   3.323754 0.26614198 Ningxiang\n9  Changsha 21111 Wangcheng      County   2.292093 0.13049161 Wangcheng\n10 Chenzhou 21112     Anren      County   2.240739 0.13343936     Anren\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734...\n\n\n\ngeo &lt;- sf::st_geometry(hunan_GDPPC)\nnb &lt;- st_knn(geo, longlat = TRUE)\ndists &lt;- unlist(st_nb_dists(geo, nb))\nsummary(dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  21.56   29.11   36.89   37.34   43.21   65.80 \n\n\n\nmoranI &lt;- global_moran(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\nglimpse(moranI)\n\nList of 2\n $ I: num 0.301\n $ K: num 7.64\n\n\n\nset.seed(1234)\nglobal_moran_perm(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt,\n                        nsim=99)\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\nlisa &lt;- wm_q %&gt;% \n  mutate(local_moran = local_moran(\n    GDPPC, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\ntmap_mode(\"plot\")\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of GDPPC\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\n\n\n\n\n\n\n\n\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii &lt; 0.05)\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\n\nwm_idw &lt;- hunan_GDPPC %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\n\nHCSA &lt;- wm_idw %&gt;% \n  mutate(local_Gi = local_gstar_perm(\n    GDPPC, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_Gi)\nHCSA\n\nSimple feature collection with 88 features and 16 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n# A tibble: 88 × 17\n   gi_star   e_gi    var_gi p_value   p_sim p_folded_sim skewness kurtosis nb   \n     &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt; &lt;nb&gt; \n 1  0.0416 0.0114   6.41e-6  0.0493 9.61e-1         0.7      0.35    0.875 &lt;int&gt;\n 2 -0.333  0.0106   3.84e-6 -0.0941 9.25e-1         1        0.5     0.661 &lt;int&gt;\n 3  0.281  0.0126   7.51e-6 -0.151  8.80e-1         0.9      0.45    0.640 &lt;int&gt;\n 4  0.411  0.0118   9.22e-6  0.264  7.92e-1         0.6      0.3     0.853 &lt;int&gt;\n 5  0.387  0.0115   9.56e-6  0.339  7.34e-1         0.62     0.31    1.07  &lt;int&gt;\n 6 -0.368  0.0118   5.91e-6 -0.583  5.60e-1         0.72     0.36    0.594 &lt;int&gt;\n 7  3.56   0.0151   7.31e-6  2.61   9.01e-3         0.06     0.03    1.09  &lt;int&gt;\n 8  2.52   0.0136   6.14e-6  1.49   1.35e-1         0.2      0.1     1.12  &lt;int&gt;\n 9  4.56   0.0144   5.84e-6  3.53   4.17e-4         0.04     0.02    1.23  &lt;int&gt;\n10  1.16   0.0104   3.70e-6  1.82   6.86e-2         0.12     0.06    0.416 &lt;int&gt;\n# ℹ 78 more rows\n# ℹ 8 more variables: wts &lt;list&gt;, NAME_2 &lt;chr&gt;, ID_3 &lt;int&gt;, NAME_3 &lt;chr&gt;,\n#   ENGTYPE_3 &lt;chr&gt;, County &lt;chr&gt;, GDPPC &lt;dbl&gt;, geometry &lt;POLYGON [°]&gt;\n\n\n\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))\n\n\n\n\n\n\n\n\n\nHCSA_sig &lt;- HCSA  %&gt;%\n  filter(p_sim &lt; 0.05)\ntmap_mode(\"plot\")\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\n\nIn class ex smaller\n\nGDPPC &lt;- read_csv(\"data/aspatial/Hunan_GDPPC.csv\")\n\n\nGDPPC_st &lt;- spacetime(GDPPC, hunan,\n                      .loc_col = \"County\",\n                      .time_col = \"Year\")\nis_spacetime_cube(GDPPC_st)\n\n[1] TRUE\n\n\n\nGDPPC_nb &lt;- GDPPC_st %&gt;%\n  activate(\"geometry\") %&gt;%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1) %&gt;%\n  set_nbs(\"nb\") %&gt;%\n  set_wts(\"wt\")\n\n\nhead(GDPPC_nb)\n\n# A tibble: 6 × 5\n   Year County  GDPPC nb        wt       \n  &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;list&gt;    &lt;list&gt;   \n1  2005 Anxiang  8184 &lt;int [6]&gt; &lt;dbl [6]&gt;\n2  2005 Hanshou  6560 &lt;int [6]&gt; &lt;dbl [6]&gt;\n3  2005 Jinshi   9956 &lt;int [5]&gt; &lt;dbl [5]&gt;\n4  2005 Li       8394 &lt;int [5]&gt; &lt;dbl [5]&gt;\n5  2005 Linli    8850 &lt;int [5]&gt; &lt;dbl [5]&gt;\n6  2005 Shimen   9244 &lt;int [6]&gt; &lt;dbl [6]&gt;\n\n\n\ngi_stars &lt;- GDPPC_nb %&gt;% \n  group_by(Year) %&gt;% \n  mutate(gi_star = local_gstar_perm(\n    GDPPC, nb, wt)) %&gt;% \n  tidyr::unnest(gi_star)\n\n\ncbg &lt;- gi_stars %&gt;% \n  ungroup() %&gt;% \n  filter(County == \"Changsha\") |&gt; \n  select(County, Year, gi_star)\n\n\nehsa &lt;- gi_stars %&gt;%\n  group_by(County) %&gt;%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;%\n  tidyr::unnest_wider(mk)\n\n\nemerging &lt;- ehsa %&gt;% \n  arrange(sl, abs(tau)) %&gt;% \n  slice(1:5)\n\n\nehsa &lt;- emerging_hotspot_analysis(\n  x = GDPPC_st, \n  .var = \"GDPPC\", \n  k = 1, \n  nsim = 99\n)\n\n\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\nhunan_ehsa &lt;- hunan %&gt;%\n  left_join(ehsa,\n            by = join_by(County == location))\n\n\nehsa_sig &lt;- hunan_ehsa  %&gt;%\n  filter(p_value &lt; 0.05)\ntmap_mode(\"plot\")\ntm_shape(hunan_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx2/THE2.html#wrangling",
    "href": "TakeHomeEx/TakeHomeEx2/THE2.html#wrangling",
    "title": "Take-Home Exercise 1",
    "section": "2.0 Wrangling",
    "text": "2.0 Wrangling\n\npacman::p_load(sf, tmap, tidyverse, ggplot2, smoothr, lubridate, sfdep)\n\n\ntwv &lt;- st_read(dsn = \"data/geospatial\", \n                 layer = \"TAINAN_VILLAGE\")\n\nReading layer `TAINAN_VILLAGE' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/TakeHomeEx/TakeHomeEx2/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 649 features and 10 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0269 ymin: 22.88751 xmax: 120.6563 ymax: 23.41374\nGeodetic CRS:  TWD97\n\n\n\ndengued &lt;- read_csv(\"data/aspatial/Dengue_Daily.csv\")\n\n\ndengued &lt;- dengued[, c(1, 10, 11)]\nnames(dengued)\n\n[1] \"發病日\"            \"最小統計區中心點X\" \"最小統計區中心點Y\"\n\n\n\nnames(dengued) &lt;- c(\"Onset\", \"X\", \"Y\")\nnames(dengued)\n\n[1] \"Onset\" \"X\"     \"Y\"    \n\n\n\nhead(dengued)\n\n# A tibble: 6 × 3\n  Onset      X             Y           \n  &lt;date&gt;     &lt;chr&gt;         &lt;chr&gt;       \n1 1998-01-02 120.505898941 22.464206650\n2 1998-01-03 120.453657460 22.466338948\n3 1998-01-13 121.751433765 24.749214667\n4 1998-01-15 120.338158907 22.630316700\n5 1998-01-20 121.798235373 24.684507639\n6 1998-01-22 None          None        \n\n\n\noptions(digits = 15)\n\n\ndengued[, c(2, 3)] &lt;- lapply(dengued[, c(2, 3)], as.numeric)\nhead(dengued)\n\n# A tibble: 6 × 3\n  Onset          X     Y\n  &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt;\n1 1998-01-02  121.  22.5\n2 1998-01-03  120.  22.5\n3 1998-01-13  122.  24.7\n4 1998-01-15  120.  22.6\n5 1998-01-20  122.  24.7\n6 1998-01-22   NA   NA  \n\n\n\nsum(apply(dengued, 1, function(x) any(is.na(x))))\n\n[1] 780\n\n\n\ndengued &lt;- na.omit(dengued)\n\n\nsum(apply(dengued, 1, function(x) any(is.na(x))))\n\n[1] 0\n\n\n\nhist(dengued$Onset, breaks = \"days\", xlab = \"Date\", ylab = \"Frequency\", main = \"Histogram of Date Ranges\")\n\n\n\n\n\n\n\n\n\nst_crs(twv)\n\nCoordinate Reference System:\n  User input: TWD97 \n  wkt:\nGEOGCRS[\"TWD97\",\n    DATUM[\"Taiwan Datum 1997\",\n        ELLIPSOID[\"GRS 1980\",6378137,298.257222101,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    USAGE[\n        SCOPE[\"Horizontal component of 3D system.\"],\n        AREA[\"Taiwan, Republic of China - onshore and offshore - Taiwan Island, Penghu (Pescadores) Islands.\"],\n        BBOX[17.36,114.32,26.96,123.61]],\n    ID[\"EPSG\",3824]]\n\n\n\ndengued_sf &lt;- st_as_sf(dengued, coords = c(\"X\", \"Y\"),\n                      crs = 3824)\nst_crs(dengued_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3824 \n  wkt:\nGEOGCRS[\"TWD97\",\n    DATUM[\"Taiwan Datum 1997\",\n        ELLIPSOID[\"GRS 1980\",6378137,298.257222101,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    USAGE[\n        SCOPE[\"Horizontal component of 3D system.\"],\n        AREA[\"Taiwan, Republic of China - onshore and offshore - Taiwan Island, Penghu (Pescadores) Islands.\"],\n        BBOX[17.36,114.32,26.96,123.61]],\n    ID[\"EPSG\",3824]]\n\n\n\nhead(dengued_sf)\n\nSimple feature collection with 6 features and 1 field\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 120.338158907 ymin: 22.46420665 xmax: 121.798235373 ymax: 24.982467229\nGeodetic CRS:  TWD97\n# A tibble: 6 × 2\n  Onset                          geometry\n  &lt;date&gt;                      &lt;POINT [°]&gt;\n1 1998-01-02  (120.505898941 22.46420665)\n2 1998-01-03  (120.45365746 22.466338948)\n3 1998-01-13 (121.751433765 24.749214667)\n4 1998-01-15   (120.338158907 22.6303167)\n5 1998-01-20 (121.798235373 24.684507639)\n6 1998-01-23 (121.547480075 24.982467229)\n\n\n\ntwvsz &lt;- twv[twv$TOWNID %in% c(\"D01\", \"D02\", \"D04\", \"D06\", \"D07\", \"D08\", \"D32\", \"D39\"), ] %&gt;% \n  subset(select = -NOTE)\n\n\nhead(twvsz)\n\nSimple feature collection with 6 features and 9 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.093638 ymin: 22.9155962890001 xmax: 120.258510056 ymax: 23.0882695690001\nGeodetic CRS:  TWD97\n      VILLCODE COUNTYNAME TOWNNAME VILLNAME       VILLENG COUNTYID COUNTYCODE\n2  67000350032     臺南市   安南區   青草里  Qingcao Vil.        D      67000\n18 67000270011     臺南市   仁德區   保安里   Bao'an Vil.        D      67000\n66 67000370005     臺南市   中西區   赤嵌里  Chihkan Vil.        D      67000\n67 67000330004     臺南市     南區   大成里  Dacheng Vil.        D      67000\n68 67000350028     臺南市   安南區   城北里 Chengbei Vil.        D      67000\n69 67000350030     臺南市   安南區   城南里 Chengnan Vil.        D      67000\n   TOWNID TOWNCODE                       geometry\n2     D06 67000350 POLYGON ((120.117587175 23....\n18    D32 67000270 POLYGON ((120.230434632 22....\n66    D08 67000370 POLYGON ((120.201249051 22....\n67    D02 67000330 POLYGON ((120.198548305 22....\n68    D06 67000350 POLYGON ((120.129195464 23....\n69    D06 67000350 POLYGON ((120.124599602 23....\n\n\n\nplot(twvsz)\n\n\n\n\n\n\n\n\n\nu_twvsz &lt;- st_union(twvsz)\nplot(u_twvsz)\n\n\n\n\n\n\n\n\n\nunh_twvsz &lt;- fill_holes(u_twvsz, units::set_units(1, \"km^2\"))\nplot(unh_twvsz)\n\n\n\n\n\n\n\n\n\ndiff_twvsz &lt;- st_difference(unh_twvsz, u_twvsz)\nplot(diff_twvsz)\n\n\n\n\n\n\n\n\n\nhole_victims &lt;- st_intersection(dengued_sf, diff_twvsz)\nhead(hole_victims)\n\nSimple feature collection with 0 features and 1 field\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nGeodetic CRS:  TWD97\n# A tibble: 0 × 2\n# ℹ 2 variables: Onset &lt;date&gt;, geometry &lt;GEOMETRY [°]&gt;\n\n\nEpi weeks 31-50 2023: 30-07-23 to 16-12-23\n\ndengued_sf_epiweeks &lt;- dengued_sf %&gt;% filter(Onset &gt;= as.Date(\"2023-07-30\") & Onset &lt;= as.Date(\"2023-12-16\"))\n\n\ndengue_sf &lt;- st_intersection(dengued_sf_epiweeks, u_twvsz)\n\n\ndengue_sf$epi_week &lt;- epiweek(dengue_sf$Onset)\n\n\nwrite_rds(dengue_sf, \"data/rds/dengue_sf.rds\")\n\n\ntm_shape(u_twvsz) + \n  tm_polygons() +\ntm_shape(dengue_sf) +\n  tm_dots(col = \"red\")\n\n\n\n\n\n\n\n\n\ngeo_dupes &lt;- any(duplicated(dengue_sf$geometry))\ngeo_dupes\n\n[1] TRUE\n\n\n\nvil_dupes &lt;- any(duplicated(twvsz$VILLCODE))\nvil_dupes\n\n[1] FALSE\n\n\nKeep the NA for geometry purposes\n\ndengue_vils_sf &lt;- st_join(twvsz, dengue_sf)\n\n\ndengue_vils_sf[!rownames(dengue_vils_sf) %in% rownames(na.omit(dengue_vils_sf)), ]\n\nSimple feature collection with 1 feature and 11 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.108900267 ymin: 23.0186038130001 xmax: 120.137943444 ymax: 23.0431984580001\nGeodetic CRS:  TWD97\n       VILLCODE COUNTYNAME TOWNNAME VILLNAME    VILLENG COUNTYID COUNTYCODE\n444 67000350035     臺南市   安南區   鹿耳里 Lu'er Vil.        D      67000\n    TOWNID TOWNCODE Onset epi_week                       geometry\n444    D06 67000350  &lt;NA&gt;       NA POLYGON ((120.13322373 23.0...\n\n\n\ndengue_vils_sf &lt;- dengue_vils_sf[!is.na(dengue_vils_sf$VILLCODE), ]\n\nAccount for the NA village\n\ndengue_vils_gb_vc &lt;- dengue_vils_sf %&gt;%\n  group_by(VILLCODE, VILLENG) %&gt;%\n  summarise(count = sum(!is.na(epi_week)))\n\n\ndengue_vils_gb_vc_epi &lt;- dengue_vils_sf %&gt;%\n  group_by(VILLCODE, epi_week) %&gt;%\n  summarise(count = sum(!is.na(epi_week)))\n\n\nplot(dengue_vils_gb_vc_epi)\n\n\n\n\n\n\n\n\n\ndengue_vils_gb_vc_epi$epi_week &lt;- ifelse(is.na(dengue_vils_gb_vc_epi$epi_week), 31, dengue_vils_gb_vc_epi$epi_week)\n\ntemplate &lt;- expand.grid(VILLCODE = unique(dengue_vils_gb_vc_epi$VILLCODE),\n                        epi_week = unique(dengue_vils_gb_vc_epi$epi_week))\n\nmerged_df &lt;- merge(template, dengue_vils_gb_vc_epi, by = c(\"VILLCODE\", \"epi_week\"), all.x = TRUE)\n\nmerged_df$count[is.na(merged_df$count)] &lt;- 0\n\nmerged_df &lt;- select(merged_df, -geometry)\n\nmerged_df &lt;- st_as_sf(distinct(merge(merged_df, dengue_vils_gb_vc_epi[, c(\"VILLCODE\", \"geometry\")], \n                  by = \"VILLCODE\", suffixes = c(\"\", \".y\"), all.x = TRUE)))\n\n\nprint(nrow(merged_df))\n\n[1] 5160\n\nprint(length(unique(merged_df$VILLCODE)))\n\n[1] 258\n\nprint(length(unique(merged_df$epi_week)))\n\n[1] 20\n\n\n\nspt &lt;- as_spacetime(merged_df, \"VILLCODE\", \"epi_week\")\nis_spacetime_cube(spt)\n\n[1] TRUE\n\n\n\nactivate(spt, \"geometry\")\n\nSimple feature collection with 258 features and 1 field\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.062662846 ymin: 22.8940068630001 xmax: 120.292497157 ymax: 23.091435597\nGeodetic CRS:  TWD97\nFirst 10 features:\n      VILLCODE                       geometry\n1  67000270001 POLYGON ((120.267199621 22....\n2  67000270002 POLYGON ((120.265902836 22....\n3  67000270003 POLYGON ((120.24922797 22.9...\n4  67000270004 POLYGON ((120.239006994 22....\n5  67000270005 POLYGON ((120.257650095 22....\n6  67000270006 POLYGON ((120.271278468 22....\n7  67000270007 POLYGON ((120.240394094 22....\n8  67000270008 POLYGON ((120.270074093 22....\n9  67000270011 POLYGON ((120.230434145 22....\n10 67000270012 POLYGON ((120.224656159 22....\n\n\n\nactivate(spt, \"data\")\n\n        VILLCODE epi_week count\n1    67000270001       31     0\n2    67000270001       32     0\n3    67000270001       33     1\n4    67000270001       34     1\n5    67000270001       35     2\n6    67000270001       36     2\n7    67000270001       37     6\n8    67000270001       38     3\n9    67000270001       39     4\n10   67000270001       40     1\n11   67000270001       41     1\n12   67000270001       42     2\n13   67000270001       43     4\n14   67000270001       44     5\n15   67000270001       45     1\n16   67000270001       46     1\n17   67000270001       47     3\n18   67000270001       48     0\n19   67000270001       49     0\n20   67000270001       50     0\n21   67000270002       31     0\n22   67000270002       32     0\n23   67000270002       33     2\n24   67000270002       34     0\n25   67000270002       35     0\n26   67000270002       36     0\n27   67000270002       37     1\n28   67000270002       38     1\n29   67000270002       39     2\n30   67000270002       40     4\n31   67000270002       41     0\n32   67000270002       42     1\n33   67000270002       43     1\n34   67000270002       44     0\n35   67000270002       45     1\n36   67000270002       46     1\n37   67000270002       47     0\n38   67000270002       48     1\n39   67000270002       49     0\n40   67000270002       50     0\n41   67000270003       31     1\n42   67000270003       32     2\n43   67000270003       33     0\n44   67000270003       34     2\n45   67000270003       35     1\n46   67000270003       36     3\n47   67000270003       37     0\n48   67000270003       38     2\n49   67000270003       39     3\n50   67000270003       40     4\n51   67000270003       41     0\n52   67000270003       42     2\n53   67000270003       43     4\n54   67000270003       44     7\n55   67000270003       45     4\n56   67000270003       46     1\n57   67000270003       47     1\n58   67000270003       48     2\n59   67000270003       49     0\n60   67000270003       50     0\n61   67000270004       31     4\n62   67000270004       32     1\n63   67000270004       33     3\n64   67000270004       34     3\n65   67000270004       35     5\n66   67000270004       36     9\n67   67000270004       37     9\n68   67000270004       38    11\n69   67000270004       39    10\n70   67000270004       40    10\n71   67000270004       41     4\n72   67000270004       42    10\n73   67000270004       43     5\n74   67000270004       44     6\n75   67000270004       45     4\n76   67000270004       46     7\n77   67000270004       47     2\n78   67000270004       48     1\n79   67000270004       49     1\n80   67000270004       50     0\n81   67000270005       31     2\n82   67000270005       32     1\n83   67000270005       33     7\n84   67000270005       34     2\n85   67000270005       35     6\n86   67000270005       36     9\n87   67000270005       37     9\n88   67000270005       38     9\n89   67000270005       39     3\n90   67000270005       40    20\n91   67000270005       41    13\n92   67000270005       42    15\n93   67000270005       43    14\n94   67000270005       44    10\n95   67000270005       45     8\n96   67000270005       46    16\n97   67000270005       47    12\n98   67000270005       48     3\n99   67000270005       49     2\n100  67000270005       50     2\n101  67000270006       31     0\n102  67000270006       32     0\n103  67000270006       33     0\n104  67000270006       34     1\n105  67000270006       35     1\n106  67000270006       36     0\n107  67000270006       37     3\n108  67000270006       38     0\n109  67000270006       39     2\n110  67000270006       40     0\n111  67000270006       41     1\n112  67000270006       42     3\n113  67000270006       43     0\n114  67000270006       44     1\n115  67000270006       45     0\n116  67000270006       46     2\n117  67000270006       47     1\n118  67000270006       48     0\n119  67000270006       49     0\n120  67000270006       50     0\n121  67000270007       31     1\n122  67000270007       32     1\n123  67000270007       33     0\n124  67000270007       34     1\n125  67000270007       35     0\n126  67000270007       36     7\n127  67000270007       37     4\n128  67000270007       38     2\n129  67000270007       39     2\n130  67000270007       40     3\n131  67000270007       41     5\n132  67000270007       42     5\n133  67000270007       43     2\n134  67000270007       44     3\n135  67000270007       45     4\n136  67000270007       46     0\n137  67000270007       47     1\n138  67000270007       48     0\n139  67000270007       49     0\n140  67000270007       50     0\n141  67000270008       31     0\n142  67000270008       32     1\n143  67000270008       33     0\n144  67000270008       34     2\n145  67000270008       35     1\n146  67000270008       36     3\n147  67000270008       37     1\n148  67000270008       38     2\n149  67000270008       39     8\n150  67000270008       40     0\n151  67000270008       41     1\n152  67000270008       42     4\n153  67000270008       43     1\n154  67000270008       44     2\n155  67000270008       45     1\n156  67000270008       46     0\n157  67000270008       47     1\n158  67000270008       48     1\n159  67000270008       49     0\n160  67000270008       50     1\n161  67000270011       31     1\n162  67000270011       32     0\n163  67000270011       33     0\n164  67000270011       34     0\n165  67000270011       35     0\n166  67000270011       36     0\n167  67000270011       37     3\n168  67000270011       38     2\n169  67000270011       39     3\n170  67000270011       40     0\n171  67000270011       41     5\n172  67000270011       42     2\n173  67000270011       43     1\n174  67000270011       44     1\n175  67000270011       45     0\n176  67000270011       46     0\n177  67000270011       47     0\n178  67000270011       48     0\n179  67000270011       49     1\n180  67000270011       50     0\n181  67000270012       31     7\n182  67000270012       32     1\n183  67000270012       33     1\n184  67000270012       34     5\n185  67000270012       35     1\n186  67000270012       36     5\n187  67000270012       37     1\n188  67000270012       38     4\n189  67000270012       39     6\n190  67000270012       40    10\n191  67000270012       41     1\n192  67000270012       42     6\n193  67000270012       43     8\n194  67000270012       44     1\n195  67000270012       45     2\n196  67000270012       46     2\n197  67000270012       47     1\n198  67000270012       48     0\n199  67000270012       49     0\n200  67000270012       50     0\n201  67000270013       31     1\n202  67000270013       32     0\n203  67000270013       33     1\n204  67000270013       34     1\n205  67000270013       35     0\n206  67000270013       36     2\n207  67000270013       37     0\n208  67000270013       38     0\n209  67000270013       39     0\n210  67000270013       40     0\n211  67000270013       41     2\n212  67000270013       42     0\n213  67000270013       43     0\n214  67000270013       44     1\n215  67000270013       45     0\n216  67000270013       46     0\n217  67000270013       47     1\n218  67000270013       48     0\n219  67000270013       49     0\n220  67000270013       50     0\n221  67000270014       31     2\n222  67000270014       32     1\n223  67000270014       33     1\n224  67000270014       34     0\n225  67000270014       35     0\n226  67000270014       36     1\n227  67000270014       37     2\n228  67000270014       38     0\n229  67000270014       39     4\n230  67000270014       40     1\n231  67000270014       41     0\n232  67000270014       42     1\n233  67000270014       43     0\n234  67000270014       44     4\n235  67000270014       45     0\n236  67000270014       46     0\n237  67000270014       47     0\n238  67000270014       48     0\n239  67000270014       49     0\n240  67000270014       50     0\n241  67000270015       31     0\n242  67000270015       32     1\n243  67000270015       33     1\n244  67000270015       34     0\n245  67000270015       35     1\n246  67000270015       36     0\n247  67000270015       37     1\n248  67000270015       38     1\n249  67000270015       39     1\n250  67000270015       40     1\n251  67000270015       41     0\n252  67000270015       42     0\n253  67000270015       43     0\n254  67000270015       44     1\n255  67000270015       45     1\n256  67000270015       46     0\n257  67000270015       47     3\n258  67000270015       48     1\n259  67000270015       49     0\n260  67000270015       50     1\n261  67000270016       31     0\n262  67000270016       32     0\n263  67000270016       33     0\n264  67000270016       34     0\n265  67000270016       35     1\n266  67000270016       36     0\n267  67000270016       37     2\n268  67000270016       38     1\n269  67000270016       39     1\n270  67000270016       40     1\n271  67000270016       41     0\n272  67000270016       42     0\n273  67000270016       43     0\n274  67000270016       44     1\n275  67000270016       45     0\n276  67000270016       46     1\n277  67000270016       47     1\n278  67000270016       48     0\n279  67000270016       49     0\n280  67000270016       50     0\n281  67000270017       31     0\n282  67000270017       32     2\n283  67000270017       33     0\n284  67000270017       34     0\n285  67000270017       35     1\n286  67000270017       36     2\n287  67000270017       37     0\n288  67000270017       38     1\n289  67000270017       39     0\n290  67000270017       40     4\n291  67000270017       41     1\n292  67000270017       42     0\n293  67000270017       43     0\n294  67000270017       44     1\n295  67000270017       45     1\n296  67000270017       46     0\n297  67000270017       47     0\n298  67000270017       48     0\n299  67000270017       49     0\n300  67000270017       50     0\n301  67000270019       31     0\n302  67000270019       32     0\n303  67000270019       33     1\n304  67000270019       34     0\n305  67000270019       35     1\n306  67000270019       36     0\n307  67000270019       37     0\n308  67000270019       38     1\n309  67000270019       39     1\n310  67000270019       40     1\n311  67000270019       41     3\n312  67000270019       42     0\n313  67000270019       43     0\n314  67000270019       44     0\n315  67000270019       45     0\n316  67000270019       46     0\n317  67000270019       47     0\n318  67000270019       48     0\n319  67000270019       49     0\n320  67000270019       50     0\n321  67000310001       31    34\n322  67000310001       32    29\n323  67000310001       33    11\n324  67000310001       34    16\n325  67000310001       35    11\n326  67000310001       36    16\n327  67000310001       37    13\n328  67000310001       38    17\n329  67000310001       39    16\n330  67000310001       40     7\n331  67000310001       41    10\n332  67000310001       42     4\n333  67000310001       43     2\n334  67000310001       44     4\n335  67000310001       45     6\n336  67000310001       46     2\n337  67000310001       47     2\n338  67000310001       48     1\n339  67000310001       49     0\n340  67000310001       50     0\n341  67000310002       31     0\n342  67000310002       32     1\n343  67000310002       33     0\n344  67000310002       34     3\n345  67000310002       35     2\n346  67000310002       36    10\n347  67000310002       37     1\n348  67000310002       38     4\n349  67000310002       39     4\n350  67000310002       40     5\n351  67000310002       41     4\n352  67000310002       42     8\n353  67000310002       43     8\n354  67000310002       44     3\n355  67000310002       45     1\n356  67000310002       46     1\n357  67000310002       47     3\n358  67000310002       48     1\n359  67000310002       49     0\n360  67000310002       50     0\n361  67000310003       31     0\n362  67000310003       32     0\n363  67000310003       33     1\n364  67000310003       34     8\n365  67000310003       35     4\n366  67000310003       36     3\n367  67000310003       37     5\n368  67000310003       38     3\n369  67000310003       39     4\n370  67000310003       40     3\n371  67000310003       41     2\n372  67000310003       42     2\n373  67000310003       43     1\n374  67000310003       44     3\n375  67000310003       45     2\n376  67000310003       46     3\n377  67000310003       47     0\n378  67000310003       48     0\n379  67000310003       49     0\n380  67000310003       50     0\n381  67000310004       31     2\n382  67000310004       32     0\n383  67000310004       33     1\n384  67000310004       34     3\n385  67000310004       35     2\n386  67000310004       36     7\n387  67000310004       37     7\n388  67000310004       38     1\n389  67000310004       39     2\n390  67000310004       40     5\n391  67000310004       41     7\n392  67000310004       42     3\n393  67000310004       43     7\n394  67000310004       44    11\n395  67000310004       45     3\n396  67000310004       46     1\n397  67000310004       47     3\n398  67000310004       48     0\n399  67000310004       49     0\n400  67000310004       50     0\n401  67000310005       31     1\n402  67000310005       32     1\n403  67000310005       33     7\n404  67000310005       34    12\n405  67000310005       35    15\n406  67000310005       36    31\n407  67000310005       37    18\n408  67000310005       38    13\n409  67000310005       39    19\n410  67000310005       40     8\n411  67000310005       41     5\n412  67000310005       42     6\n413  67000310005       43    10\n414  67000310005       44    11\n415  67000310005       45     3\n416  67000310005       46     2\n417  67000310005       47     2\n418  67000310005       48     1\n419  67000310005       49     1\n420  67000310005       50     0\n421  67000310006       31     0\n422  67000310006       32     0\n423  67000310006       33     0\n424  67000310006       34     0\n425  67000310006       35     0\n426  67000310006       36     1\n427  67000310006       37     2\n428  67000310006       38     0\n429  67000310006       39     1\n430  67000310006       40     0\n431  67000310006       41     0\n432  67000310006       42     0\n433  67000310006       43     0\n434  67000310006       44     1\n435  67000310006       45     0\n436  67000310006       46     0\n437  67000310006       47     0\n438  67000310006       48     0\n439  67000310006       49     1\n440  67000310006       50     0\n441  67000310007       31     1\n442  67000310007       32     0\n443  67000310007       33     0\n444  67000310007       34     0\n445  67000310007       35     1\n446  67000310007       36     3\n447  67000310007       37     0\n448  67000310007       38     0\n449  67000310007       39     2\n450  67000310007       40     4\n451  67000310007       41     1\n452  67000310007       42     0\n453  67000310007       43     0\n454  67000310007       44     0\n455  67000310007       45     0\n456  67000310007       46     0\n457  67000310007       47     0\n458  67000310007       48     0\n459  67000310007       49     0\n460  67000310007       50     0\n461  67000310008       31     0\n462  67000310008       32     0\n463  67000310008       33     1\n464  67000310008       34     1\n465  67000310008       35     0\n466  67000310008       36     2\n467  67000310008       37     0\n468  67000310008       38     0\n469  67000310008       39     0\n470  67000310008       40     3\n471  67000310008       41     0\n472  67000310008       42     1\n473  67000310008       43     2\n474  67000310008       44     1\n475  67000310008       45     0\n476  67000310008       46     0\n477  67000310008       47     0\n478  67000310008       48     0\n479  67000310008       49     0\n480  67000310008       50     0\n481  67000310009       31     0\n482  67000310009       32     0\n483  67000310009       33     0\n484  67000310009       34     0\n485  67000310009       35     0\n486  67000310009       36     0\n487  67000310009       37     0\n488  67000310009       38     0\n489  67000310009       39     0\n490  67000310009       40     3\n491  67000310009       41     0\n492  67000310009       42     1\n493  67000310009       43     0\n494  67000310009       44     0\n495  67000310009       45     0\n496  67000310009       46     0\n497  67000310009       47     0\n498  67000310009       48     0\n499  67000310009       49     0\n500  67000310009       50     0\n501  67000310010       31     0\n502  67000310010       32     2\n503  67000310010       33     3\n504  67000310010       34     4\n505  67000310010       35     7\n506  67000310010       36     3\n507  67000310010       37     3\n508  67000310010       38     2\n509  67000310010       39     7\n510  67000310010       40     4\n511  67000310010       41     4\n512  67000310010       42     4\n513  67000310010       43     9\n514  67000310010       44     5\n515  67000310010       45     7\n516  67000310010       46     4\n517  67000310010       47     2\n518  67000310010       48     3\n519  67000310010       49     1\n520  67000310010       50     1\n521  67000310011       31     1\n522  67000310011       32     5\n523  67000310011       33     9\n524  67000310011       34     3\n525  67000310011       35     8\n526  67000310011       36    16\n527  67000310011       37    15\n528  67000310011       38     5\n529  67000310011       39    13\n530  67000310011       40     3\n531  67000310011       41     2\n532  67000310011       42     3\n533  67000310011       43     4\n534  67000310011       44     2\n535  67000310011       45     2\n536  67000310011       46     3\n537  67000310011       47     1\n538  67000310011       48     1\n539  67000310011       49     0\n540  67000310011       50     0\n541  67000310012       31     2\n542  67000310012       32     0\n543  67000310012       33     0\n544  67000310012       34     1\n545  67000310012       35     1\n546  67000310012       36     1\n547  67000310012       37     1\n548  67000310012       38     0\n549  67000310012       39     2\n550  67000310012       40     2\n551  67000310012       41     5\n552  67000310012       42     0\n553  67000310012       43     2\n554  67000310012       44     5\n555  67000310012       45     1\n556  67000310012       46     1\n557  67000310012       47     0\n558  67000310012       48     0\n559  67000310012       49     0\n560  67000310012       50     0\n561  67000310013       31     0\n562  67000310013       32     0\n563  67000310013       33     0\n564  67000310013       34     3\n565  67000310013       35     2\n566  67000310013       36     3\n567  67000310013       37     2\n568  67000310013       38     1\n569  67000310013       39     1\n570  67000310013       40     2\n571  67000310013       41     1\n572  67000310013       42     2\n573  67000310013       43     3\n574  67000310013       44     1\n575  67000310013       45     1\n576  67000310013       46     0\n577  67000310013       47     2\n578  67000310013       48     0\n579  67000310013       49     0\n580  67000310013       50     0\n581  67000310014       31     1\n582  67000310014       32     1\n583  67000310014       33     2\n584  67000310014       34     0\n585  67000310014       35     2\n586  67000310014       36     5\n587  67000310014       37     3\n588  67000310014       38     5\n589  67000310014       39     3\n590  67000310014       40     6\n591  67000310014       41     4\n592  67000310014       42     5\n593  67000310014       43     7\n594  67000310014       44     2\n595  67000310014       45     3\n596  67000310014       46     1\n597  67000310014       47     0\n598  67000310014       48     0\n599  67000310014       49     0\n600  67000310014       50     1\n601  67000310015       31     0\n602  67000310015       32     1\n603  67000310015       33     0\n604  67000310015       34     0\n605  67000310015       35     1\n606  67000310015       36     2\n607  67000310015       37     2\n608  67000310015       38     2\n609  67000310015       39     3\n610  67000310015       40     0\n611  67000310015       41     1\n612  67000310015       42     1\n613  67000310015       43     2\n614  67000310015       44     0\n615  67000310015       45     3\n616  67000310015       46     2\n617  67000310015       47     0\n618  67000310015       48     0\n619  67000310015       49     0\n620  67000310015       50     0\n621  67000310016       31     4\n622  67000310016       32     6\n623  67000310016       33     5\n624  67000310016       34     7\n625  67000310016       35    10\n626  67000310016       36     5\n627  67000310016       37     4\n628  67000310016       38    12\n629  67000310016       39     5\n630  67000310016       40     1\n631  67000310016       41     1\n632  67000310016       42     4\n633  67000310016       43     4\n634  67000310016       44     5\n635  67000310016       45     0\n636  67000310016       46     3\n637  67000310016       47     7\n638  67000310016       48     1\n639  67000310016       49     0\n640  67000310016       50     0\n641  67000310017       31     0\n642  67000310017       32     0\n643  67000310017       33     0\n644  67000310017       34     1\n645  67000310017       35     0\n646  67000310017       36     1\n647  67000310017       37     2\n648  67000310017       38     1\n649  67000310017       39     0\n650  67000310017       40     1\n651  67000310017       41     3\n652  67000310017       42     1\n653  67000310017       43     1\n654  67000310017       44     3\n655  67000310017       45     0\n656  67000310017       46     0\n657  67000310017       47     2\n658  67000310017       48     0\n659  67000310017       49     0\n660  67000310017       50     0\n661  67000310018       31     0\n662  67000310018       32     0\n663  67000310018       33     0\n664  67000310018       34     0\n665  67000310018       35     0\n666  67000310018       36     0\n667  67000310018       37     0\n668  67000310018       38     0\n669  67000310018       39     1\n670  67000310018       40     0\n671  67000310018       41     2\n672  67000310018       42     2\n673  67000310018       43     0\n674  67000310018       44     1\n675  67000310018       45     0\n676  67000310018       46     0\n677  67000310018       47     0\n678  67000310018       48     0\n679  67000310018       49     0\n680  67000310018       50     0\n681  67000310019       31     0\n682  67000310019       32     0\n683  67000310019       33     1\n684  67000310019       34     0\n685  67000310019       35     1\n686  67000310019       36     4\n687  67000310019       37     1\n688  67000310019       38     8\n689  67000310019       39     4\n690  67000310019       40     5\n691  67000310019       41     6\n692  67000310019       42     4\n693  67000310019       43     9\n694  67000310019       44    10\n695  67000310019       45     5\n696  67000310019       46     2\n697  67000310019       47     0\n698  67000310019       48     0\n699  67000310019       49     1\n700  67000310019       50     0\n701  67000310020       31     3\n702  67000310020       32     3\n703  67000310020       33     5\n704  67000310020       34     0\n705  67000310020       35    11\n706  67000310020       36    13\n707  67000310020       37    11\n708  67000310020       38     9\n709  67000310020       39    22\n710  67000310020       40     8\n711  67000310020       41    10\n712  67000310020       42    11\n713  67000310020       43    15\n714  67000310020       44    15\n715  67000310020       45    11\n716  67000310020       46     0\n717  67000310020       47     2\n718  67000310020       48     2\n719  67000310020       49     0\n720  67000310020       50     0\n721  67000310021       31     0\n722  67000310021       32     0\n723  67000310021       33     0\n724  67000310021       34     0\n725  67000310021       35     2\n726  67000310021       36     3\n727  67000310021       37     2\n728  67000310021       38     5\n729  67000310021       39     2\n730  67000310021       40     3\n731  67000310021       41     0\n732  67000310021       42     1\n733  67000310021       43     2\n734  67000310021       44     2\n735  67000310021       45     2\n736  67000310021       46     3\n737  67000310021       47     0\n738  67000310021       48     0\n739  67000310021       49     0\n740  67000310021       50     0\n741  67000310022       31     0\n742  67000310022       32     0\n743  67000310022       33     2\n744  67000310022       34     0\n745  67000310022       35     2\n746  67000310022       36     1\n747  67000310022       37     0\n748  67000310022       38     2\n749  67000310022       39     2\n750  67000310022       40     3\n751  67000310022       41     1\n752  67000310022       42     1\n753  67000310022       43     0\n754  67000310022       44     0\n755  67000310022       45     0\n756  67000310022       46     1\n757  67000310022       47     0\n758  67000310022       48     0\n759  67000310022       49     0\n760  67000310022       50     0\n761  67000310023       31     0\n762  67000310023       32     1\n763  67000310023       33     0\n764  67000310023       34     3\n765  67000310023       35     1\n766  67000310023       36     1\n767  67000310023       37     1\n768  67000310023       38     0\n769  67000310023       39     1\n770  67000310023       40     1\n771  67000310023       41     1\n772  67000310023       42     2\n773  67000310023       43     5\n774  67000310023       44     0\n775  67000310023       45     5\n776  67000310023       46     0\n777  67000310023       47     0\n778  67000310023       48     0\n779  67000310023       49     1\n780  67000310023       50     0\n781  67000310024       31     2\n782  67000310024       32     1\n783  67000310024       33     1\n784  67000310024       34     6\n785  67000310024       35     1\n786  67000310024       36     2\n787  67000310024       37     2\n788  67000310024       38     1\n789  67000310024       39     1\n790  67000310024       40     3\n791  67000310024       41     1\n792  67000310024       42     1\n793  67000310024       43     3\n794  67000310024       44     2\n795  67000310024       45     2\n796  67000310024       46     2\n797  67000310024       47     1\n798  67000310024       48     0\n799  67000310024       49     0\n800  67000310024       50     0\n801  67000310025       31     2\n802  67000310025       32     1\n803  67000310025       33     0\n804  67000310025       34     3\n805  67000310025       35     5\n806  67000310025       36     8\n807  67000310025       37     7\n808  67000310025       38     6\n809  67000310025       39     4\n810  67000310025       40     4\n811  67000310025       41     4\n812  67000310025       42     4\n813  67000310025       43     0\n814  67000310025       44     0\n815  67000310025       45     1\n816  67000310025       46     1\n817  67000310025       47     0\n818  67000310025       48     0\n819  67000310025       49     1\n820  67000310025       50     0\n821  67000310026       31    11\n822  67000310026       32     4\n823  67000310026       33    15\n824  67000310026       34     9\n825  67000310026       35    24\n826  67000310026       36    24\n827  67000310026       37    18\n828  67000310026       38    22\n829  67000310026       39    31\n830  67000310026       40    26\n831  67000310026       41    21\n832  67000310026       42    14\n833  67000310026       43     8\n834  67000310026       44     6\n835  67000310026       45     4\n836  67000310026       46     5\n837  67000310026       47     0\n838  67000310026       48     1\n839  67000310026       49     1\n840  67000310026       50     0\n841  67000310027       31     0\n842  67000310027       32     2\n843  67000310027       33     0\n844  67000310027       34     0\n845  67000310027       35     1\n846  67000310027       36     4\n847  67000310027       37     0\n848  67000310027       38     6\n849  67000310027       39     6\n850  67000310027       40     3\n851  67000310027       41     1\n852  67000310027       42     0\n853  67000310027       43     4\n854  67000310027       44     5\n855  67000310027       45     5\n856  67000310027       46     0\n857  67000310027       47     0\n858  67000310027       48     1\n859  67000310027       49     1\n860  67000310027       50     0\n861  67000310028       31     0\n862  67000310028       32     0\n863  67000310028       33     0\n864  67000310028       34     1\n865  67000310028       35     0\n866  67000310028       36     3\n867  67000310028       37     0\n868  67000310028       38     0\n869  67000310028       39     0\n870  67000310028       40     0\n871  67000310028       41     0\n872  67000310028       42     3\n873  67000310028       43     0\n874  67000310028       44     1\n875  67000310028       45     0\n876  67000310028       46     0\n877  67000310028       47     0\n878  67000310028       48     0\n879  67000310028       49     0\n880  67000310028       50     0\n881  67000310029       31     0\n882  67000310029       32     1\n883  67000310029       33     0\n884  67000310029       34     3\n885  67000310029       35     1\n886  67000310029       36     3\n887  67000310029       37     3\n888  67000310029       38     3\n889  67000310029       39     5\n890  67000310029       40     7\n891  67000310029       41     5\n892  67000310029       42     3\n893  67000310029       43     6\n894  67000310029       44     7\n895  67000310029       45     1\n896  67000310029       46     2\n897  67000310029       47     1\n898  67000310029       48     2\n899  67000310029       49     1\n900  67000310029       50     0\n901  67000310030       31     6\n902  67000310030       32    17\n903  67000310030       33    12\n904  67000310030       34    12\n905  67000310030       35     8\n906  67000310030       36    21\n907  67000310030       37     8\n908  67000310030       38    26\n909  67000310030       39    18\n910  67000310030       40    21\n911  67000310030       41    16\n912  67000310030       42     7\n913  67000310030       43     6\n914  67000310030       44     3\n915  67000310030       45     6\n916  67000310030       46     2\n917  67000310030       47     1\n918  67000310030       48     0\n919  67000310030       49     0\n920  67000310030       50     1\n921  67000310031       31     4\n922  67000310031       32     1\n923  67000310031       33     3\n924  67000310031       34     2\n925  67000310031       35     6\n926  67000310031       36     5\n927  67000310031       37     5\n928  67000310031       38    16\n929  67000310031       39    22\n930  67000310031       40    12\n931  67000310031       41     6\n932  67000310031       42    10\n933  67000310031       43    10\n934  67000310031       44     8\n935  67000310031       45     6\n936  67000310031       46     1\n937  67000310031       47     1\n938  67000310031       48     0\n939  67000310031       49     0\n940  67000310031       50     0\n941  67000310032       31     4\n942  67000310032       32     2\n943  67000310032       33     8\n944  67000310032       34     3\n945  67000310032       35     6\n946  67000310032       36     6\n947  67000310032       37     6\n948  67000310032       38     8\n949  67000310032       39     4\n950  67000310032       40     4\n951  67000310032       41     6\n952  67000310032       42     5\n953  67000310032       43     2\n954  67000310032       44     3\n955  67000310032       45     4\n956  67000310032       46     0\n957  67000310032       47     0\n958  67000310032       48     0\n959  67000310032       49     0\n960  67000310032       50     1\n961  67000310033       31     4\n962  67000310033       32     6\n963  67000310033       33     7\n964  67000310033       34     3\n965  67000310033       35     7\n966  67000310033       36    18\n967  67000310033       37    14\n968  67000310033       38    10\n969  67000310033       39    11\n970  67000310033       40     8\n971  67000310033       41     7\n972  67000310033       42     9\n973  67000310033       43     2\n974  67000310033       44     4\n975  67000310033       45     2\n976  67000310033       46     0\n977  67000310033       47     0\n978  67000310033       48     0\n979  67000310033       49     1\n980  67000310033       50     1\n981  67000310034       31     2\n982  67000310034       32     1\n983  67000310034       33     1\n984  67000310034       34     2\n985  67000310034       35     4\n986  67000310034       36    18\n987  67000310034       37     7\n988  67000310034       38     9\n989  67000310034       39     7\n990  67000310034       40     7\n991  67000310034       41     9\n992  67000310034       42     6\n993  67000310034       43    11\n994  67000310034       44     3\n995  67000310034       45     4\n996  67000310034       46     0\n997  67000310034       47     5\n998  67000310034       48     0\n999  67000310034       49     1\n1000 67000310034       50     0\n1001 67000310035       31     1\n1002 67000310035       32     0\n1003 67000310035       33     1\n1004 67000310035       34     0\n1005 67000310035       35     4\n1006 67000310035       36     6\n1007 67000310035       37     1\n1008 67000310035       38     2\n1009 67000310035       39    11\n1010 67000310035       40     9\n1011 67000310035       41     8\n1012 67000310035       42     8\n1013 67000310035       43    11\n1014 67000310035       44     5\n1015 67000310035       45     2\n1016 67000310035       46     4\n1017 67000310035       47     1\n1018 67000310035       48     0\n1019 67000310035       49     0\n1020 67000310035       50     0\n1021 67000310036       31     0\n1022 67000310036       32     0\n1023 67000310036       33     3\n1024 67000310036       34     2\n1025 67000310036       35     2\n1026 67000310036       36     6\n1027 67000310036       37     6\n1028 67000310036       38     4\n1029 67000310036       39    12\n1030 67000310036       40     1\n1031 67000310036       41     2\n1032 67000310036       42     4\n1033 67000310036       43     5\n1034 67000310036       44     4\n1035 67000310036       45     3\n1036 67000310036       46     3\n1037 67000310036       47     0\n1038 67000310036       48     0\n1039 67000310036       49     0\n1040 67000310036       50     0\n1041 67000310037       31     5\n1042 67000310037       32     8\n1043 67000310037       33    12\n1044 67000310037       34    17\n1045 67000310037       35    20\n1046 67000310037       36    24\n1047 67000310037       37    38\n1048 67000310037       38    37\n1049 67000310037       39    55\n1050 67000310037       40    34\n1051 67000310037       41    26\n1052 67000310037       42    30\n1053 67000310037       43    17\n1054 67000310037       44    17\n1055 67000310037       45     7\n1056 67000310037       46     1\n1057 67000310037       47     0\n1058 67000310037       48     1\n1059 67000310037       49     2\n1060 67000310037       50     0\n1061 67000310038       31     3\n1062 67000310038       32     6\n1063 67000310038       33     0\n1064 67000310038       34     7\n1065 67000310038       35     8\n1066 67000310038       36    16\n1067 67000310038       37     8\n1068 67000310038       38     4\n1069 67000310038       39     8\n1070 67000310038       40     6\n1071 67000310038       41     7\n1072 67000310038       42     9\n1073 67000310038       43    10\n1074 67000310038       44     8\n1075 67000310038       45     4\n1076 67000310038       46     2\n1077 67000310038       47     3\n1078 67000310038       48     0\n1079 67000310038       49     2\n1080 67000310038       50     0\n1081 67000310039       31     3\n1082 67000310039       32     6\n1083 67000310039       33     2\n1084 67000310039       34     8\n1085 67000310039       35     7\n1086 67000310039       36    19\n1087 67000310039       37    11\n1088 67000310039       38     7\n1089 67000310039       39    14\n1090 67000310039       40    14\n1091 67000310039       41     7\n1092 67000310039       42     4\n1093 67000310039       43     3\n1094 67000310039       44     3\n1095 67000310039       45     2\n1096 67000310039       46     2\n1097 67000310039       47     1\n1098 67000310039       48     0\n1099 67000310039       49     0\n1100 67000310039       50     0\n1101 67000310040       31     0\n1102 67000310040       32     0\n1103 67000310040       33     0\n1104 67000310040       34     2\n1105 67000310040       35     3\n1106 67000310040       36     2\n1107 67000310040       37     3\n1108 67000310040       38     0\n1109 67000310040       39     2\n1110 67000310040       40     1\n1111 67000310040       41     2\n1112 67000310040       42     2\n1113 67000310040       43     6\n1114 67000310040       44     0\n1115 67000310040       45     0\n1116 67000310040       46     1\n1117 67000310040       47     0\n1118 67000310040       48     0\n1119 67000310040       49     0\n1120 67000310040       50     0\n1121 67000310041       31     0\n1122 67000310041       32     1\n1123 67000310041       33     0\n1124 67000310041       34     1\n1125 67000310041       35     0\n1126 67000310041       36     1\n1127 67000310041       37     2\n1128 67000310041       38     1\n1129 67000310041       39     0\n1130 67000310041       40     2\n1131 67000310041       41     3\n1132 67000310041       42     2\n1133 67000310041       43     4\n1134 67000310041       44     1\n1135 67000310041       45     0\n1136 67000310041       46     3\n1137 67000310041       47     1\n1138 67000310041       48     1\n1139 67000310041       49     0\n1140 67000310041       50     0\n1141 67000310042       31     1\n1142 67000310042       32     1\n1143 67000310042       33     1\n1144 67000310042       34     1\n1145 67000310042       35     1\n1146 67000310042       36     4\n1147 67000310042       37     3\n1148 67000310042       38     4\n1149 67000310042       39     2\n1150 67000310042       40     1\n1151 67000310042       41     1\n1152 67000310042       42     1\n1153 67000310042       43     1\n1154 67000310042       44     0\n1155 67000310042       45     2\n1156 67000310042       46     1\n1157 67000310042       47     0\n1158 67000310042       48     0\n1159 67000310042       49     0\n1160 67000310042       50     0\n1161 67000310043       31     0\n1162 67000310043       32     1\n1163 67000310043       33     0\n1164 67000310043       34     0\n1165 67000310043       35     0\n1166 67000310043       36     3\n1167 67000310043       37     4\n1168 67000310043       38     2\n1169 67000310043       39     4\n1170 67000310043       40     2\n1171 67000310043       41     1\n1172 67000310043       42     3\n1173 67000310043       43     2\n1174 67000310043       44     3\n1175 67000310043       45     2\n1176 67000310043       46     2\n1177 67000310043       47     1\n1178 67000310043       48     0\n1179 67000310043       49     0\n1180 67000310043       50     1\n1181 67000320001       31     0\n1182 67000320001       32     1\n1183 67000320001       33     0\n1184 67000320001       34     1\n1185 67000320001       35     0\n1186 67000320001       36     5\n1187 67000320001       37     5\n1188 67000320001       38     8\n1189 67000320001       39     6\n1190 67000320001       40    13\n1191 67000320001       41     9\n1192 67000320001       42     6\n1193 67000320001       43     4\n1194 67000320001       44     7\n1195 67000320001       45     1\n1196 67000320001       46     2\n1197 67000320001       47     3\n1198 67000320001       48     0\n1199 67000320001       49     0\n1200 67000320001       50     0\n1201 67000320002       31     1\n1202 67000320002       32     4\n1203 67000320002       33     3\n1204 67000320002       34     6\n1205 67000320002       35     5\n1206 67000320002       36    18\n1207 67000320002       37    12\n1208 67000320002       38    16\n1209 67000320002       39    20\n1210 67000320002       40    19\n1211 67000320002       41    14\n1212 67000320002       42    13\n1213 67000320002       43     4\n1214 67000320002       44     8\n1215 67000320002       45     1\n1216 67000320002       46     3\n1217 67000320002       47     1\n1218 67000320002       48     0\n1219 67000320002       49     1\n1220 67000320002       50     0\n1221 67000320003       31     5\n1222 67000320003       32     6\n1223 67000320003       33     2\n1224 67000320003       34     7\n1225 67000320003       35     3\n1226 67000320003       36    12\n1227 67000320003       37     9\n1228 67000320003       38     3\n1229 67000320003       39     5\n1230 67000320003       40     5\n1231 67000320003       41     8\n1232 67000320003       42     3\n1233 67000320003       43     3\n1234 67000320003       44     5\n1235 67000320003       45     1\n1236 67000320003       46     1\n1237 67000320003       47     2\n1238 67000320003       48     3\n1239 67000320003       49     0\n1240 67000320003       50     0\n1241 67000320004       31    12\n1242 67000320004       32     8\n1243 67000320004       33    16\n1244 67000320004       34     2\n1245 67000320004       35    15\n1246 67000320004       36    12\n1247 67000320004       37    10\n1248 67000320004       38    12\n1249 67000320004       39    13\n1250 67000320004       40    11\n1251 67000320004       41     4\n1252 67000320004       42     1\n1253 67000320004       43     3\n1254 67000320004       44     0\n1255 67000320004       45     2\n1256 67000320004       46     0\n1257 67000320004       47     0\n1258 67000320004       48     3\n1259 67000320004       49     1\n1260 67000320004       50     0\n1261 67000320005       31     0\n1262 67000320005       32     4\n1263 67000320005       33     2\n1264 67000320005       34     6\n1265 67000320005       35     7\n1266 67000320005       36     9\n1267 67000320005       37    14\n1268 67000320005       38    19\n1269 67000320005       39    11\n1270 67000320005       40     6\n1271 67000320005       41     4\n1272 67000320005       42     8\n1273 67000320005       43    10\n1274 67000320005       44     4\n1275 67000320005       45     9\n1276 67000320005       46     4\n1277 67000320005       47     4\n1278 67000320005       48     1\n1279 67000320005       49     0\n1280 67000320005       50     0\n1281 67000320006       31     2\n1282 67000320006       32     3\n1283 67000320006       33     3\n1284 67000320006       34     6\n1285 67000320006       35     8\n1286 67000320006       36    11\n1287 67000320006       37     6\n1288 67000320006       38     8\n1289 67000320006       39     6\n1290 67000320006       40     3\n1291 67000320006       41     6\n1292 67000320006       42    10\n1293 67000320006       43     7\n1294 67000320006       44     9\n1295 67000320006       45     5\n1296 67000320006       46     5\n1297 67000320006       47     5\n1298 67000320006       48     0\n1299 67000320006       49     0\n1300 67000320006       50     0\n1301 67000320007       31     0\n1302 67000320007       32     1\n1303 67000320007       33     1\n1304 67000320007       34     0\n1305 67000320007       35     2\n1306 67000320007       36     2\n1307 67000320007       37     8\n1308 67000320007       38     6\n1309 67000320007       39    10\n1310 67000320007       40    15\n1311 67000320007       41     5\n1312 67000320007       42    24\n1313 67000320007       43    29\n1314 67000320007       44    16\n1315 67000320007       45     3\n1316 67000320007       46     9\n1317 67000320007       47     4\n1318 67000320007       48     1\n1319 67000320007       49     0\n1320 67000320007       50     0\n1321 67000320008       31     1\n1322 67000320008       32     1\n1323 67000320008       33     0\n1324 67000320008       34     1\n1325 67000320008       35     4\n1326 67000320008       36     5\n1327 67000320008       37     6\n1328 67000320008       38     5\n1329 67000320008       39     6\n1330 67000320008       40    13\n1331 67000320008       41     9\n1332 67000320008       42     8\n1333 67000320008       43     3\n1334 67000320008       44     9\n1335 67000320008       45     5\n1336 67000320008       46     2\n1337 67000320008       47     1\n1338 67000320008       48     0\n1339 67000320008       49     0\n1340 67000320008       50     0\n1341 67000320009       31     1\n1342 67000320009       32     1\n1343 67000320009       33     5\n1344 67000320009       34     7\n1345 67000320009       35     9\n1346 67000320009       36     6\n1347 67000320009       37     6\n1348 67000320009       38    17\n1349 67000320009       39    19\n1350 67000320009       40    20\n1351 67000320009       41     1\n1352 67000320009       42     3\n1353 67000320009       43    10\n1354 67000320009       44     3\n1355 67000320009       45     3\n1356 67000320009       46     1\n1357 67000320009       47     1\n1358 67000320009       48     0\n1359 67000320009       49     0\n1360 67000320009       50     0\n1361 67000320010       31     0\n1362 67000320010       32     3\n1363 67000320010       33     1\n1364 67000320010       34     0\n1365 67000320010       35     4\n1366 67000320010       36     1\n1367 67000320010       37     2\n1368 67000320010       38     2\n1369 67000320010       39     6\n1370 67000320010       40     3\n1371 67000320010       41     9\n1372 67000320010       42     2\n1373 67000320010       43     3\n1374 67000320010       44     3\n1375 67000320010       45     2\n1376 67000320010       46     1\n1377 67000320010       47     0\n1378 67000320010       48     0\n1379 67000320010       49     0\n1380 67000320010       50     0\n1381 67000320011       31     0\n1382 67000320011       32     0\n1383 67000320011       33     0\n1384 67000320011       34     0\n1385 67000320011       35     4\n1386 67000320011       36     3\n1387 67000320011       37     1\n1388 67000320011       38     2\n1389 67000320011       39     2\n1390 67000320011       40     4\n1391 67000320011       41     5\n1392 67000320011       42     2\n1393 67000320011       43     2\n1394 67000320011       44     2\n1395 67000320011       45     0\n1396 67000320011       46     0\n1397 67000320011       47     0\n1398 67000320011       48     0\n1399 67000320011       49     0\n1400 67000320011       50     0\n1401 67000320012       31     0\n1402 67000320012       32     1\n1403 67000320012       33     2\n1404 67000320012       34     2\n1405 67000320012       35     1\n1406 67000320012       36     8\n1407 67000320012       37     4\n1408 67000320012       38     1\n1409 67000320012       39     6\n1410 67000320012       40     5\n1411 67000320012       41     7\n1412 67000320012       42     2\n1413 67000320012       43     1\n1414 67000320012       44     5\n1415 67000320012       45     2\n1416 67000320012       46     2\n1417 67000320012       47     1\n1418 67000320012       48     0\n1419 67000320012       49     1\n1420 67000320012       50     0\n1421 67000320013       31     2\n1422 67000320013       32     0\n1423 67000320013       33     6\n1424 67000320013       34    14\n1425 67000320013       35    28\n1426 67000320013       36    33\n1427 67000320013       37    21\n1428 67000320013       38    14\n1429 67000320013       39    22\n1430 67000320013       40    22\n1431 67000320013       41     9\n1432 67000320013       42    10\n1433 67000320013       43     6\n1434 67000320013       44     7\n1435 67000320013       45     4\n1436 67000320013       46     3\n1437 67000320013       47     2\n1438 67000320013       48     1\n1439 67000320013       49     1\n1440 67000320013       50     0\n1441 67000320014       31     2\n1442 67000320014       32     3\n1443 67000320014       33     0\n1444 67000320014       34     5\n1445 67000320014       35     7\n1446 67000320014       36     8\n1447 67000320014       37     5\n1448 67000320014       38     9\n1449 67000320014       39    13\n1450 67000320014       40     2\n1451 67000320014       41     5\n1452 67000320014       42    12\n1453 67000320014       43     9\n1454 67000320014       44     9\n1455 67000320014       45    11\n1456 67000320014       46     4\n1457 67000320014       47     1\n1458 67000320014       48     1\n1459 67000320014       49     0\n1460 67000320014       50     0\n1461 67000320015       31     0\n1462 67000320015       32     0\n1463 67000320015       33     0\n1464 67000320015       34     1\n1465 67000320015       35     1\n1466 67000320015       36     3\n1467 67000320015       37     1\n1468 67000320015       38     5\n1469 67000320015       39     3\n1470 67000320015       40     1\n1471 67000320015       41     6\n1472 67000320015       42     3\n1473 67000320015       43     2\n1474 67000320015       44     0\n1475 67000320015       45     0\n1476 67000320015       46     0\n1477 67000320015       47     1\n1478 67000320015       48     0\n1479 67000320015       49     0\n1480 67000320015       50     0\n1481 67000320016       31     2\n1482 67000320016       32     3\n1483 67000320016       33     0\n1484 67000320016       34     1\n1485 67000320016       35     1\n1486 67000320016       36     6\n1487 67000320016       37     9\n1488 67000320016       38     4\n1489 67000320016       39     4\n1490 67000320016       40     3\n1491 67000320016       41     3\n1492 67000320016       42     1\n1493 67000320016       43     0\n1494 67000320016       44     1\n1495 67000320016       45     0\n1496 67000320016       46     0\n1497 67000320016       47     0\n1498 67000320016       48     0\n1499 67000320016       49     0\n1500 67000320016       50     0\n1501 67000320017       31     0\n1502 67000320017       32     1\n1503 67000320017       33     0\n1504 67000320017       34     1\n1505 67000320017       35     6\n1506 67000320017       36     7\n1507 67000320017       37     7\n1508 67000320017       38    12\n1509 67000320017       39     7\n1510 67000320017       40     9\n1511 67000320017       41     4\n1512 67000320017       42    15\n1513 67000320017       43     6\n1514 67000320017       44     4\n1515 67000320017       45     2\n1516 67000320017       46     1\n1517 67000320017       47     1\n1518 67000320017       48     1\n1519 67000320017       49     1\n1520 67000320017       50     1\n1521 67000320018       31     0\n1522 67000320018       32     0\n1523 67000320018       33     1\n1524 67000320018       34     4\n1525 67000320018       35     3\n1526 67000320018       36     4\n1527 67000320018       37     1\n1528 67000320018       38     3\n1529 67000320018       39     7\n1530 67000320018       40     5\n1531 67000320018       41     4\n1532 67000320018       42     0\n1533 67000320018       43     4\n1534 67000320018       44     3\n1535 67000320018       45     1\n1536 67000320018       46     1\n1537 67000320018       47     0\n1538 67000320018       48     0\n1539 67000320018       49     0\n1540 67000320018       50     0\n1541 67000320019       31     5\n1542 67000320019       32    10\n1543 67000320019       33     4\n1544 67000320019       34    10\n1545 67000320019       35     5\n1546 67000320019       36    13\n1547 67000320019       37    18\n1548 67000320019       38    13\n1549 67000320019       39    15\n1550 67000320019       40    13\n1551 67000320019       41    16\n1552 67000320019       42    20\n1553 67000320019       43     6\n1554 67000320019       44    12\n1555 67000320019       45     6\n1556 67000320019       46     4\n1557 67000320019       47     2\n1558 67000320019       48     0\n1559 67000320019       49     1\n1560 67000320019       50     0\n1561 67000320020       31     3\n1562 67000320020       32     2\n1563 67000320020       33     2\n1564 67000320020       34     5\n1565 67000320020       35    12\n1566 67000320020       36    31\n1567 67000320020       37    25\n1568 67000320020       38    18\n1569 67000320020       39    23\n1570 67000320020       40    11\n1571 67000320020       41     5\n1572 67000320020       42    11\n1573 67000320020       43    15\n1574 67000320020       44    15\n1575 67000320020       45     4\n1576 67000320020       46     6\n1577 67000320020       47     4\n1578 67000320020       48     1\n1579 67000320020       49     0\n1580 67000320020       50     3\n1581 67000320021       31     0\n1582 67000320021       32     0\n1583 67000320021       33     0\n1584 67000320021       34     1\n1585 67000320021       35     2\n1586 67000320021       36     0\n1587 67000320021       37     1\n1588 67000320021       38     2\n1589 67000320021       39     1\n1590 67000320021       40     2\n1591 67000320021       41     1\n1592 67000320021       42     5\n1593 67000320021       43     1\n1594 67000320021       44     2\n1595 67000320021       45     3\n1596 67000320021       46     0\n1597 67000320021       47     1\n1598 67000320021       48     0\n1599 67000320021       49     0\n1600 67000320021       50     0\n1601 67000320022       31     2\n1602 67000320022       32     4\n1603 67000320022       33     3\n1604 67000320022       34     1\n1605 67000320022       35     6\n1606 67000320022       36     6\n1607 67000320022       37    11\n1608 67000320022       38    15\n1609 67000320022       39     8\n1610 67000320022       40     5\n1611 67000320022       41     7\n1612 67000320022       42     1\n1613 67000320022       43    12\n1614 67000320022       44    10\n1615 67000320022       45     4\n1616 67000320022       46     5\n1617 67000320022       47     3\n1618 67000320022       48     0\n1619 67000320022       49     1\n1620 67000320022       50     0\n1621 67000320023       31     0\n1622 67000320023       32     1\n1623 67000320023       33     0\n1624 67000320023       34     0\n1625 67000320023       35     7\n1626 67000320023       36     4\n1627 67000320023       37     3\n1628 67000320023       38     3\n1629 67000320023       39     4\n1630 67000320023       40     4\n1631 67000320023       41     2\n1632 67000320023       42     1\n1633 67000320023       43     2\n1634 67000320023       44     9\n1635 67000320023       45     2\n1636 67000320023       46     0\n1637 67000320023       47     1\n1638 67000320023       48     0\n1639 67000320023       49     0\n1640 67000320023       50     0\n1641 67000320024       31     3\n1642 67000320024       32     4\n1643 67000320024       33     2\n1644 67000320024       34     1\n1645 67000320024       35     8\n1646 67000320024       36    14\n1647 67000320024       37     9\n1648 67000320024       38     5\n1649 67000320024       39    11\n1650 67000320024       40     5\n1651 67000320024       41     6\n1652 67000320024       42     2\n1653 67000320024       43     5\n1654 67000320024       44     1\n1655 67000320024       45     0\n1656 67000320024       46     1\n1657 67000320024       47     1\n1658 67000320024       48     0\n1659 67000320024       49     1\n1660 67000320024       50     0\n1661 67000320025       31     2\n1662 67000320025       32     3\n1663 67000320025       33     5\n1664 67000320025       34     7\n1665 67000320025       35    10\n1666 67000320025       36    25\n1667 67000320025       37    17\n1668 67000320025       38    16\n1669 67000320025       39    17\n1670 67000320025       40    14\n1671 67000320025       41     9\n1672 67000320025       42    11\n1673 67000320025       43     8\n1674 67000320025       44     6\n1675 67000320025       45     9\n1676 67000320025       46     4\n1677 67000320025       47     2\n1678 67000320025       48     1\n1679 67000320025       49     0\n1680 67000320025       50     0\n1681 67000320026       31     1\n1682 67000320026       32     1\n1683 67000320026       33     6\n1684 67000320026       34     8\n1685 67000320026       35    10\n1686 67000320026       36    11\n1687 67000320026       37     7\n1688 67000320026       38     5\n1689 67000320026       39    11\n1690 67000320026       40    15\n1691 67000320026       41     7\n1692 67000320026       42     8\n1693 67000320026       43     6\n1694 67000320026       44     2\n1695 67000320026       45     5\n1696 67000320026       46     4\n1697 67000320026       47     1\n1698 67000320026       48     1\n1699 67000320026       49     0\n1700 67000320026       50     0\n1701 67000320027       31     0\n1702 67000320027       32     4\n1703 67000320027       33     2\n1704 67000320027       34     2\n1705 67000320027       35     3\n1706 67000320027       36     7\n1707 67000320027       37    11\n1708 67000320027       38     9\n1709 67000320027       39    13\n1710 67000320027       40    20\n1711 67000320027       41    16\n1712 67000320027       42     3\n1713 67000320027       43     4\n1714 67000320027       44     8\n1715 67000320027       45     4\n1716 67000320027       46     4\n1717 67000320027       47     4\n1718 67000320027       48     0\n1719 67000320027       49     0\n1720 67000320027       50     0\n1721 67000320028       31     0\n1722 67000320028       32     0\n1723 67000320028       33     1\n1724 67000320028       34     0\n1725 67000320028       35     2\n1726 67000320028       36     2\n1727 67000320028       37     2\n1728 67000320028       38     2\n1729 67000320028       39     8\n1730 67000320028       40     7\n1731 67000320028       41     7\n1732 67000320028       42     2\n1733 67000320028       43     1\n1734 67000320028       44     0\n1735 67000320028       45     0\n1736 67000320028       46     0\n1737 67000320028       47     0\n1738 67000320028       48     0\n1739 67000320028       49     0\n1740 67000320028       50     0\n1741 67000320029       31     1\n1742 67000320029       32     1\n1743 67000320029       33     3\n1744 67000320029       34     7\n1745 67000320029       35     4\n1746 67000320029       36    16\n1747 67000320029       37    11\n1748 67000320029       38     7\n1749 67000320029       39     6\n1750 67000320029       40     9\n1751 67000320029       41     5\n1752 67000320029       42    10\n1753 67000320029       43     8\n1754 67000320029       44     6\n1755 67000320029       45     1\n1756 67000320029       46     0\n1757 67000320029       47     1\n1758 67000320029       48     2\n1759 67000320029       49     0\n1760 67000320029       50     0\n1761 67000320030       31     1\n1762 67000320030       32     1\n1763 67000320030       33     0\n1764 67000320030       34     3\n1765 67000320030       35     1\n1766 67000320030       36     7\n1767 67000320030       37     7\n1768 67000320030       38     6\n1769 67000320030       39    17\n1770 67000320030       40    13\n1771 67000320030       41    11\n1772 67000320030       42     7\n1773 67000320030       43     4\n1774 67000320030       44     4\n1775 67000320030       45     2\n1776 67000320030       46     4\n1777 67000320030       47     0\n1778 67000320030       48     1\n1779 67000320030       49     0\n1780 67000320030       50     0\n1781 67000320031       31     1\n1782 67000320031       32     0\n1783 67000320031       33     0\n1784 67000320031       34     0\n1785 67000320031       35     3\n1786 67000320031       36     2\n1787 67000320031       37     4\n1788 67000320031       38     7\n1789 67000320031       39     9\n1790 67000320031       40    21\n1791 67000320031       41    15\n1792 67000320031       42    10\n1793 67000320031       43     7\n1794 67000320031       44     4\n1795 67000320031       45     1\n1796 67000320031       46     4\n1797 67000320031       47     0\n1798 67000320031       48     0\n1799 67000320031       49     0\n1800 67000320031       50     0\n1801 67000320032       31     6\n1802 67000320032       32    19\n1803 67000320032       33    12\n1804 67000320032       34    17\n1805 67000320032       35    30\n1806 67000320032       36    17\n1807 67000320032       37    15\n1808 67000320032       38    18\n1809 67000320032       39     9\n1810 67000320032       40    13\n1811 67000320032       41    13\n1812 67000320032       42     8\n1813 67000320032       43     5\n1814 67000320032       44     4\n1815 67000320032       45     5\n1816 67000320032       46     1\n1817 67000320032       47     1\n1818 67000320032       48     1\n1819 67000320032       49     1\n1820 67000320032       50     0\n1821 67000320033       31     1\n1822 67000320033       32     0\n1823 67000320033       33     0\n1824 67000320033       34     4\n1825 67000320033       35     2\n1826 67000320033       36     6\n1827 67000320033       37     2\n1828 67000320033       38     6\n1829 67000320033       39     7\n1830 67000320033       40     2\n1831 67000320033       41     2\n1832 67000320033       42     3\n1833 67000320033       43     5\n1834 67000320033       44     4\n1835 67000320033       45     3\n1836 67000320033       46     6\n1837 67000320033       47     4\n1838 67000320033       48     2\n1839 67000320033       49     0\n1840 67000320033       50     0\n1841 67000320034       31     2\n1842 67000320034       32     2\n1843 67000320034       33     1\n1844 67000320034       34     2\n1845 67000320034       35     7\n1846 67000320034       36    14\n1847 67000320034       37    18\n1848 67000320034       38    14\n1849 67000320034       39    15\n1850 67000320034       40     7\n1851 67000320034       41     3\n1852 67000320034       42     3\n1853 67000320034       43     6\n1854 67000320034       44     2\n1855 67000320034       45     3\n1856 67000320034       46     1\n1857 67000320034       47     5\n1858 67000320034       48     1\n1859 67000320034       49     0\n1860 67000320034       50     0\n1861 67000320035       31     0\n1862 67000320035       32     0\n1863 67000320035       33     1\n1864 67000320035       34     3\n1865 67000320035       35     2\n1866 67000320035       36     7\n1867 67000320035       37     7\n1868 67000320035       38     3\n1869 67000320035       39     4\n1870 67000320035       40     8\n1871 67000320035       41     4\n1872 67000320035       42     3\n1873 67000320035       43     6\n1874 67000320035       44     3\n1875 67000320035       45     1\n1876 67000320035       46     0\n1877 67000320035       47     0\n1878 67000320035       48     0\n1879 67000320035       49     0\n1880 67000320035       50     0\n1881 67000320036       31     0\n1882 67000320036       32     0\n1883 67000320036       33     0\n1884 67000320036       34     0\n1885 67000320036       35     2\n1886 67000320036       36     0\n1887 67000320036       37     1\n1888 67000320036       38     0\n1889 67000320036       39     3\n1890 67000320036       40     2\n1891 67000320036       41     3\n1892 67000320036       42     5\n1893 67000320036       43     1\n1894 67000320036       44     1\n1895 67000320036       45     1\n1896 67000320036       46     1\n1897 67000320036       47     1\n1898 67000320036       48     0\n1899 67000320036       49     0\n1900 67000320036       50     0\n1901 67000320037       31     0\n1902 67000320037       32     1\n1903 67000320037       33     0\n1904 67000320037       34     1\n1905 67000320037       35     2\n1906 67000320037       36     3\n1907 67000320037       37     4\n1908 67000320037       38     4\n1909 67000320037       39     4\n1910 67000320037       40     9\n1911 67000320037       41     3\n1912 67000320037       42     4\n1913 67000320037       43     5\n1914 67000320037       44    10\n1915 67000320037       45     2\n1916 67000320037       46     4\n1917 67000320037       47     0\n1918 67000320037       48     0\n1919 67000320037       49     0\n1920 67000320037       50     0\n1921 67000320038       31     0\n1922 67000320038       32     1\n1923 67000320038       33     0\n1924 67000320038       34     1\n1925 67000320038       35     2\n1926 67000320038       36     5\n1927 67000320038       37     2\n1928 67000320038       38     7\n1929 67000320038       39     7\n1930 67000320038       40    16\n1931 67000320038       41    10\n1932 67000320038       42     8\n1933 67000320038       43     9\n1934 67000320038       44     6\n1935 67000320038       45     2\n1936 67000320038       46     1\n1937 67000320038       47     0\n1938 67000320038       48     4\n1939 67000320038       49     1\n1940 67000320038       50     0\n1941 67000320039       31    11\n1942 67000320039       32     6\n1943 67000320039       33    11\n1944 67000320039       34     6\n1945 67000320039       35    16\n1946 67000320039       36    25\n1947 67000320039       37     5\n1948 67000320039       38     8\n1949 67000320039       39     8\n1950 67000320039       40     6\n1951 67000320039       41     6\n1952 67000320039       42     3\n1953 67000320039       43     1\n1954 67000320039       44     4\n1955 67000320039       45     1\n1956 67000320039       46     1\n1957 67000320039       47     0\n1958 67000320039       48     0\n1959 67000320039       49     0\n1960 67000320039       50     0\n1961 67000320040       31     3\n1962 67000320040       32     5\n1963 67000320040       33     6\n1964 67000320040       34    10\n1965 67000320040       35    17\n1966 67000320040       36    10\n1967 67000320040       37    24\n1968 67000320040       38    19\n1969 67000320040       39    15\n1970 67000320040       40     4\n1971 67000320040       41     6\n1972 67000320040       42     3\n1973 67000320040       43     5\n1974 67000320040       44     4\n1975 67000320040       45     7\n1976 67000320040       46     2\n1977 67000320040       47     0\n1978 67000320040       48     0\n1979 67000320040       49     0\n1980 67000320040       50     0\n1981 67000320041       31     1\n1982 67000320041       32     3\n1983 67000320041       33     2\n1984 67000320041       34     3\n1985 67000320041       35    11\n1986 67000320041       36    14\n1987 67000320041       37     8\n1988 67000320041       38     8\n1989 67000320041       39     5\n1990 67000320041       40     8\n1991 67000320041       41     5\n1992 67000320041       42     8\n1993 67000320041       43     2\n1994 67000320041       44     3\n1995 67000320041       45     6\n1996 67000320041       46     2\n1997 67000320041       47     0\n1998 67000320041       48     0\n1999 67000320041       49     0\n2000 67000320041       50     0\n2001 67000320042       31     0\n2002 67000320042       32     0\n2003 67000320042       33     2\n2004 67000320042       34     4\n2005 67000320042       35    13\n2006 67000320042       36    13\n2007 67000320042       37    20\n2008 67000320042       38    16\n2009 67000320042       39    17\n2010 67000320042       40     8\n2011 67000320042       41    12\n2012 67000320042       42    15\n2013 67000320042       43     7\n2014 67000320042       44     5\n2015 67000320042       45     4\n2016 67000320042       46     2\n2017 67000320042       47     1\n2018 67000320042       48     0\n2019 67000320042       49     0\n2020 67000320042       50     0\n2021 67000320043       31     1\n2022 67000320043       32     1\n2023 67000320043       33     1\n2024 67000320043       34     1\n2025 67000320043       35     2\n2026 67000320043       36     3\n2027 67000320043       37     5\n2028 67000320043       38     2\n2029 67000320043       39     5\n2030 67000320043       40     4\n2031 67000320043       41     1\n2032 67000320043       42     0\n2033 67000320043       43     1\n2034 67000320043       44     1\n2035 67000320043       45     2\n2036 67000320043       46     1\n2037 67000320043       47     0\n2038 67000320043       48     0\n2039 67000320043       49     0\n2040 67000320043       50     1\n2041 67000320044       31     0\n2042 67000320044       32     0\n2043 67000320044       33     2\n2044 67000320044       34     0\n2045 67000320044       35     2\n2046 67000320044       36     2\n2047 67000320044       37     1\n2048 67000320044       38     6\n2049 67000320044       39     5\n2050 67000320044       40     7\n2051 67000320044       41     5\n2052 67000320044       42     8\n2053 67000320044       43     7\n2054 67000320044       44     4\n2055 67000320044       45     1\n2056 67000320044       46     3\n2057 67000320044       47     0\n2058 67000320044       48     0\n2059 67000320044       49     0\n2060 67000320044       50     0\n2061 67000320045       31     0\n2062 67000320045       32     0\n2063 67000320045       33     0\n2064 67000320045       34     2\n2065 67000320045       35     0\n2066 67000320045       36     7\n2067 67000320045       37     5\n2068 67000320045       38     7\n2069 67000320045       39     8\n2070 67000320045       40    11\n2071 67000320045       41     5\n2072 67000320045       42     8\n2073 67000320045       43     4\n2074 67000320045       44     3\n2075 67000320045       45     1\n2076 67000320045       46     3\n2077 67000320045       47     1\n2078 67000320045       48     1\n2079 67000320045       49     0\n2080 67000320045       50     0\n2081 67000330001       31     0\n2082 67000330001       32     0\n2083 67000330001       33     0\n2084 67000330001       34     0\n2085 67000330001       35     1\n2086 67000330001       36     0\n2087 67000330001       37     0\n2088 67000330001       38     2\n2089 67000330001       39     0\n2090 67000330001       40     2\n2091 67000330001       41     2\n2092 67000330001       42     4\n2093 67000330001       43     1\n2094 67000330001       44     1\n2095 67000330001       45     0\n2096 67000330001       46     1\n2097 67000330001       47     0\n2098 67000330001       48     1\n2099 67000330001       49     0\n2100 67000330001       50     0\n2101 67000330003       31     0\n2102 67000330003       32     0\n2103 67000330003       33     0\n2104 67000330003       34     0\n2105 67000330003       35     1\n2106 67000330003       36     1\n2107 67000330003       37     1\n2108 67000330003       38     4\n2109 67000330003       39     2\n2110 67000330003       40     2\n2111 67000330003       41     1\n2112 67000330003       42     3\n2113 67000330003       43     0\n2114 67000330003       44     0\n2115 67000330003       45     0\n2116 67000330003       46     0\n2117 67000330003       47     1\n2118 67000330003       48     0\n2119 67000330003       49     0\n2120 67000330003       50     0\n2121 67000330004       31     0\n2122 67000330004       32     0\n2123 67000330004       33     0\n2124 67000330004       34     0\n2125 67000330004       35     3\n2126 67000330004       36     2\n2127 67000330004       37     2\n2128 67000330004       38     3\n2129 67000330004       39     3\n2130 67000330004       40     3\n2131 67000330004       41     4\n2132 67000330004       42     0\n2133 67000330004       43     5\n2134 67000330004       44     1\n2135 67000330004       45     2\n2136 67000330004       46     1\n2137 67000330004       47     0\n2138 67000330004       48     0\n2139 67000330004       49     0\n2140 67000330004       50     0\n2141 67000330005       31     1\n2142 67000330005       32     0\n2143 67000330005       33     0\n2144 67000330005       34     1\n2145 67000330005       35     2\n2146 67000330005       36     3\n2147 67000330005       37     3\n2148 67000330005       38     2\n2149 67000330005       39    13\n2150 67000330005       40    20\n2151 67000330005       41     7\n2152 67000330005       42     4\n2153 67000330005       43     2\n2154 67000330005       44     4\n2155 67000330005       45     2\n2156 67000330005       46     4\n2157 67000330005       47     0\n2158 67000330005       48     1\n2159 67000330005       49     1\n2160 67000330005       50     0\n2161 67000330006       31     0\n2162 67000330006       32     0\n2163 67000330006       33     2\n2164 67000330006       34     1\n2165 67000330006       35     1\n2166 67000330006       36     0\n2167 67000330006       37     0\n2168 67000330006       38     4\n2169 67000330006       39     8\n2170 67000330006       40    10\n2171 67000330006       41     7\n2172 67000330006       42    19\n2173 67000330006       43     6\n2174 67000330006       44     5\n2175 67000330006       45     8\n2176 67000330006       46     3\n2177 67000330006       47     1\n2178 67000330006       48     0\n2179 67000330006       49     0\n2180 67000330006       50     0\n2181 67000330007       31     1\n2182 67000330007       32     0\n2183 67000330007       33     0\n2184 67000330007       34     0\n2185 67000330007       35     0\n2186 67000330007       36     7\n2187 67000330007       37     5\n2188 67000330007       38     8\n2189 67000330007       39     9\n2190 67000330007       40     9\n2191 67000330007       41     4\n2192 67000330007       42     6\n2193 67000330007       43     8\n2194 67000330007       44    11\n2195 67000330007       45     5\n2196 67000330007       46     3\n2197 67000330007       47     2\n2198 67000330007       48     1\n2199 67000330007       49     2\n2200 67000330007       50     0\n2201 67000330008       31     1\n2202 67000330008       32     0\n2203 67000330008       33     0\n2204 67000330008       34     3\n2205 67000330008       35     4\n2206 67000330008       36     8\n2207 67000330008       37     4\n2208 67000330008       38     5\n2209 67000330008       39     6\n2210 67000330008       40    14\n2211 67000330008       41    12\n2212 67000330008       42     8\n2213 67000330008       43     5\n2214 67000330008       44     2\n2215 67000330008       45     2\n2216 67000330008       46     1\n2217 67000330008       47     2\n2218 67000330008       48     1\n2219 67000330008       49     0\n2220 67000330008       50     0\n2221 67000330009       31     0\n2222 67000330009       32     0\n2223 67000330009       33     1\n2224 67000330009       34     4\n2225 67000330009       35     7\n2226 67000330009       36    19\n2227 67000330009       37     9\n2228 67000330009       38    18\n2229 67000330009       39    37\n2230 67000330009       40    18\n2231 67000330009       41     7\n2232 67000330009       42     3\n2233 67000330009       43     2\n2234 67000330009       44     1\n2235 67000330009       45     0\n2236 67000330009       46     0\n2237 67000330009       47     1\n2238 67000330009       48     2\n2239 67000330009       49     1\n2240 67000330009       50     0\n2241 67000330011       31     1\n2242 67000330011       32     0\n2243 67000330011       33     2\n2244 67000330011       34     4\n2245 67000330011       35     9\n2246 67000330011       36    10\n2247 67000330011       37     9\n2248 67000330011       38    15\n2249 67000330011       39    16\n2250 67000330011       40    20\n2251 67000330011       41    14\n2252 67000330011       42     7\n2253 67000330011       43     5\n2254 67000330011       44     4\n2255 67000330011       45     1\n2256 67000330011       46     0\n2257 67000330011       47     1\n2258 67000330011       48     0\n2259 67000330011       49     0\n2260 67000330011       50     0\n2261 67000330013       31     2\n2262 67000330013       32     1\n2263 67000330013       33     3\n2264 67000330013       34    18\n2265 67000330013       35    14\n2266 67000330013       36    22\n2267 67000330013       37    16\n2268 67000330013       38    12\n2269 67000330013       39    45\n2270 67000330013       40    13\n2271 67000330013       41    14\n2272 67000330013       42    13\n2273 67000330013       43     8\n2274 67000330013       44     3\n2275 67000330013       45     2\n2276 67000330013       46     3\n2277 67000330013       47     0\n2278 67000330013       48     1\n2279 67000330013       49     1\n2280 67000330013       50     0\n2281 67000330014       31     0\n2282 67000330014       32     1\n2283 67000330014       33     0\n2284 67000330014       34     0\n2285 67000330014       35     0\n2286 67000330014       36     1\n2287 67000330014       37     1\n2288 67000330014       38     0\n2289 67000330014       39     5\n2290 67000330014       40     3\n2291 67000330014       41     5\n2292 67000330014       42     1\n2293 67000330014       43     1\n2294 67000330014       44     1\n2295 67000330014       45     1\n2296 67000330014       46     1\n2297 67000330014       47     0\n2298 67000330014       48     0\n2299 67000330014       49     0\n2300 67000330014       50     0\n2301 67000330015       31     0\n2302 67000330015       32     1\n2303 67000330015       33     0\n2304 67000330015       34     0\n2305 67000330015       35     1\n2306 67000330015       36     0\n2307 67000330015       37     1\n2308 67000330015       38     1\n2309 67000330015       39     2\n2310 67000330015       40     1\n2311 67000330015       41     2\n2312 67000330015       42     1\n2313 67000330015       43     5\n2314 67000330015       44     1\n2315 67000330015       45     0\n2316 67000330015       46     1\n2317 67000330015       47     0\n2318 67000330015       48     0\n2319 67000330015       49     0\n2320 67000330015       50     0\n2321 67000330016       31     0\n2322 67000330016       32     0\n2323 67000330016       33     0\n2324 67000330016       34     0\n2325 67000330016       35     0\n2326 67000330016       36     0\n2327 67000330016       37     1\n2328 67000330016       38     0\n2329 67000330016       39     1\n2330 67000330016       40     0\n2331 67000330016       41     0\n2332 67000330016       42     0\n2333 67000330016       43     0\n2334 67000330016       44     0\n2335 67000330016       45     1\n2336 67000330016       46     2\n2337 67000330016       47     0\n2338 67000330016       48     0\n2339 67000330016       49     0\n2340 67000330016       50     0\n2341 67000330017       31     0\n2342 67000330017       32     1\n2343 67000330017       33     0\n2344 67000330017       34     0\n2345 67000330017       35     0\n2346 67000330017       36     1\n2347 67000330017       37     0\n2348 67000330017       38     2\n2349 67000330017       39     3\n2350 67000330017       40     2\n2351 67000330017       41     1\n2352 67000330017       42     1\n2353 67000330017       43     0\n2354 67000330017       44     5\n2355 67000330017       45     2\n2356 67000330017       46     1\n2357 67000330017       47     0\n2358 67000330017       48     0\n2359 67000330017       49     0\n2360 67000330017       50     0\n2361 67000330018       31     0\n2362 67000330018       32     0\n2363 67000330018       33     1\n2364 67000330018       34     0\n2365 67000330018       35     0\n2366 67000330018       36     1\n2367 67000330018       37     3\n2368 67000330018       38     1\n2369 67000330018       39     2\n2370 67000330018       40     5\n2371 67000330018       41     1\n2372 67000330018       42     4\n2373 67000330018       43     0\n2374 67000330018       44     2\n2375 67000330018       45     2\n2376 67000330018       46     1\n2377 67000330018       47     0\n2378 67000330018       48     1\n2379 67000330018       49     0\n2380 67000330018       50     0\n2381 67000330019       31     1\n2382 67000330019       32     0\n2383 67000330019       33     0\n2384 67000330019       34     0\n2385 67000330019       35     0\n2386 67000330019       36     0\n2387 67000330019       37     1\n2388 67000330019       38     0\n2389 67000330019       39     1\n2390 67000330019       40     1\n2391 67000330019       41     1\n2392 67000330019       42     1\n2393 67000330019       43     0\n2394 67000330019       44     1\n2395 67000330019       45     1\n2396 67000330019       46     1\n2397 67000330019       47     2\n2398 67000330019       48     1\n2399 67000330019       49     0\n2400 67000330019       50     1\n2401 67000330020       31     0\n2402 67000330020       32     2\n2403 67000330020       33     0\n2404 67000330020       34     1\n2405 67000330020       35     4\n2406 67000330020       36     4\n2407 67000330020       37     1\n2408 67000330020       38     6\n2409 67000330020       39     2\n2410 67000330020       40     5\n2411 67000330020       41     1\n2412 67000330020       42     4\n2413 67000330020       43     4\n2414 67000330020       44     3\n2415 67000330020       45     3\n2416 67000330020       46     5\n2417 67000330020       47     0\n2418 67000330020       48     2\n2419 67000330020       49     0\n2420 67000330020       50     0\n2421 67000330021       31     0\n2422 67000330021       32     0\n2423 67000330021       33     0\n2424 67000330021       34     0\n2425 67000330021       35     1\n2426 67000330021       36     2\n2427 67000330021       37     3\n2428 67000330021       38     4\n2429 67000330021       39     2\n2430 67000330021       40     9\n2431 67000330021       41     3\n2432 67000330021       42     1\n2433 67000330021       43     3\n2434 67000330021       44     0\n2435 67000330021       45     1\n2436 67000330021       46     0\n2437 67000330021       47     2\n2438 67000330021       48     0\n2439 67000330021       49     0\n2440 67000330021       50     0\n2441 67000330022       31     0\n2442 67000330022       32     0\n2443 67000330022       33     0\n2444 67000330022       34     1\n2445 67000330022       35     2\n2446 67000330022       36     8\n2447 67000330022       37     7\n2448 67000330022       38     1\n2449 67000330022       39    13\n2450 67000330022       40     6\n2451 67000330022       41     8\n2452 67000330022       42    10\n2453 67000330022       43     3\n2454 67000330022       44     6\n2455 67000330022       45     3\n2456 67000330022       46     1\n2457 67000330022       47     4\n2458 67000330022       48     1\n2459 67000330022       49     0\n2460 67000330022       50     0\n2461 67000330023       31     0\n2462 67000330023       32     0\n2463 67000330023       33     2\n2464 67000330023       34     2\n2465 67000330023       35     6\n2466 67000330023       36     2\n2467 67000330023       37     6\n2468 67000330023       38     5\n2469 67000330023       39     5\n2470 67000330023       40     5\n2471 67000330023       41     7\n2472 67000330023       42    15\n2473 67000330023       43     7\n2474 67000330023       44    11\n2475 67000330023       45     5\n2476 67000330023       46     2\n2477 67000330023       47     0\n2478 67000330023       48     0\n2479 67000330023       49     0\n2480 67000330023       50     0\n2481 67000330024       31     0\n2482 67000330024       32     0\n2483 67000330024       33     1\n2484 67000330024       34     3\n2485 67000330024       35     1\n2486 67000330024       36     0\n2487 67000330024       37     0\n2488 67000330024       38     5\n2489 67000330024       39     4\n2490 67000330024       40     4\n2491 67000330024       41     3\n2492 67000330024       42     5\n2493 67000330024       43     7\n2494 67000330024       44     1\n2495 67000330024       45     1\n2496 67000330024       46     1\n2497 67000330024       47     0\n2498 67000330024       48     1\n2499 67000330024       49     0\n2500 67000330024       50     0\n2501 67000330025       31     1\n2502 67000330025       32     0\n2503 67000330025       33     0\n2504 67000330025       34     0\n2505 67000330025       35     1\n2506 67000330025       36     9\n2507 67000330025       37     8\n2508 67000330025       38     9\n2509 67000330025       39    24\n2510 67000330025       40     8\n2511 67000330025       41     9\n2512 67000330025       42     7\n2513 67000330025       43     7\n2514 67000330025       44     9\n2515 67000330025       45     2\n2516 67000330025       46     3\n2517 67000330025       47     2\n2518 67000330025       48     1\n2519 67000330025       49     0\n2520 67000330025       50     0\n2521 67000330026       31     0\n2522 67000330026       32     2\n2523 67000330026       33     3\n2524 67000330026       34     5\n2525 67000330026       35    25\n2526 67000330026       36    13\n2527 67000330026       37    37\n2528 67000330026       38    28\n2529 67000330026       39    31\n2530 67000330026       40    12\n2531 67000330026       41     8\n2532 67000330026       42     8\n2533 67000330026       43     2\n2534 67000330026       44     3\n2535 67000330026       45     4\n2536 67000330026       46     1\n2537 67000330026       47     0\n2538 67000330026       48     1\n2539 67000330026       49     1\n2540 67000330026       50     0\n2541 67000330027       31     0\n2542 67000330027       32     0\n2543 67000330027       33     0\n2544 67000330027       34     0\n2545 67000330027       35     1\n2546 67000330027       36     1\n2547 67000330027       37    13\n2548 67000330027       38     7\n2549 67000330027       39     7\n2550 67000330027       40     6\n2551 67000330027       41    10\n2552 67000330027       42    12\n2553 67000330027       43     2\n2554 67000330027       44     3\n2555 67000330027       45     4\n2556 67000330027       46     4\n2557 67000330027       47     0\n2558 67000330027       48     2\n2559 67000330027       49     0\n2560 67000330027       50     0\n2561 67000330028       31     0\n2562 67000330028       32     0\n2563 67000330028       33     0\n2564 67000330028       34     1\n2565 67000330028       35     2\n2566 67000330028       36    17\n2567 67000330028       37    13\n2568 67000330028       38    19\n2569 67000330028       39    31\n2570 67000330028       40    19\n2571 67000330028       41    26\n2572 67000330028       42    15\n2573 67000330028       43     0\n2574 67000330028       44     5\n2575 67000330028       45     8\n2576 67000330028       46     3\n2577 67000330028       47     5\n2578 67000330028       48     2\n2579 67000330028       49     1\n2580 67000330028       50     3\n2581 67000330029       31     1\n2582 67000330029       32     0\n2583 67000330029       33     1\n2584 67000330029       34     1\n2585 67000330029       35     7\n2586 67000330029       36     7\n2587 67000330029       37    13\n2588 67000330029       38    10\n2589 67000330029       39    17\n2590 67000330029       40     9\n2591 67000330029       41     1\n2592 67000330029       42     4\n2593 67000330029       43     0\n2594 67000330029       44     3\n2595 67000330029       45     2\n2596 67000330029       46     1\n2597 67000330029       47     1\n2598 67000330029       48     0\n2599 67000330029       49     0\n2600 67000330029       50     0\n2601 67000330030       31     0\n2602 67000330030       32     0\n2603 67000330030       33     1\n2604 67000330030       34     4\n2605 67000330030       35     6\n2606 67000330030       36     8\n2607 67000330030       37     6\n2608 67000330030       38    10\n2609 67000330030       39    12\n2610 67000330030       40     5\n2611 67000330030       41    12\n2612 67000330030       42    11\n2613 67000330030       43    11\n2614 67000330030       44    10\n2615 67000330030       45    10\n2616 67000330030       46     4\n2617 67000330030       47     1\n2618 67000330030       48     0\n2619 67000330030       49     1\n2620 67000330030       50     0\n2621 67000330031       31     0\n2622 67000330031       32     0\n2623 67000330031       33     0\n2624 67000330031       34     0\n2625 67000330031       35     1\n2626 67000330031       36     1\n2627 67000330031       37     0\n2628 67000330031       38     4\n2629 67000330031       39     7\n2630 67000330031       40     0\n2631 67000330031       41     3\n2632 67000330031       42     2\n2633 67000330031       43     2\n2634 67000330031       44     2\n2635 67000330031       45     0\n2636 67000330031       46     2\n2637 67000330031       47     0\n2638 67000330031       48     0\n2639 67000330031       49     0\n2640 67000330031       50     0\n2641 67000330032       31     0\n2642 67000330032       32     0\n2643 67000330032       33     1\n2644 67000330032       34     8\n2645 67000330032       35    11\n2646 67000330032       36    11\n2647 67000330032       37    14\n2648 67000330032       38    14\n2649 67000330032       39    33\n2650 67000330032       40    24\n2651 67000330032       41    14\n2652 67000330032       42     9\n2653 67000330032       43     3\n2654 67000330032       44     4\n2655 67000330032       45     6\n2656 67000330032       46     3\n2657 67000330032       47     1\n2658 67000330032       48     0\n2659 67000330032       49     1\n2660 67000330032       50     0\n2661 67000330033       31     0\n2662 67000330033       32     0\n2663 67000330033       33     0\n2664 67000330033       34     4\n2665 67000330033       35     9\n2666 67000330033       36    18\n2667 67000330033       37    20\n2668 67000330033       38    17\n2669 67000330033       39    33\n2670 67000330033       40    14\n2671 67000330033       41     7\n2672 67000330033       42     6\n2673 67000330033       43     1\n2674 67000330033       44     3\n2675 67000330033       45     1\n2676 67000330033       46     4\n2677 67000330033       47     0\n2678 67000330033       48     0\n2679 67000330033       49     0\n2680 67000330033       50     0\n2681 67000330034       31     3\n2682 67000330034       32     3\n2683 67000330034       33     6\n2684 67000330034       34    20\n2685 67000330034       35    19\n2686 67000330034       36    32\n2687 67000330034       37    22\n2688 67000330034       38    24\n2689 67000330034       39    23\n2690 67000330034       40    13\n2691 67000330034       41    13\n2692 67000330034       42     9\n2693 67000330034       43     5\n2694 67000330034       44     4\n2695 67000330034       45     5\n2696 67000330034       46     1\n2697 67000330034       47     2\n2698 67000330034       48     0\n2699 67000330034       49     0\n2700 67000330034       50     0\n2701 67000330035       31     0\n2702 67000330035       32     2\n2703 67000330035       33     0\n2704 67000330035       34     2\n2705 67000330035       35     4\n2706 67000330035       36     6\n2707 67000330035       37     7\n2708 67000330035       38    10\n2709 67000330035       39     5\n2710 67000330035       40    10\n2711 67000330035       41     8\n2712 67000330035       42     2\n2713 67000330035       43     6\n2714 67000330035       44     6\n2715 67000330035       45     3\n2716 67000330035       46     4\n2717 67000330035       47     5\n2718 67000330035       48     0\n2719 67000330035       49     1\n2720 67000330035       50     0\n2721 67000330036       31     0\n2722 67000330036       32     0\n2723 67000330036       33     0\n2724 67000330036       34     2\n2725 67000330036       35     0\n2726 67000330036       36     1\n2727 67000330036       37     2\n2728 67000330036       38     1\n2729 67000330036       39     2\n2730 67000330036       40     2\n2731 67000330036       41     0\n2732 67000330036       42     1\n2733 67000330036       43     0\n2734 67000330036       44     0\n2735 67000330036       45     3\n2736 67000330036       46     0\n2737 67000330036       47     0\n2738 67000330036       48     0\n2739 67000330036       49     0\n2740 67000330036       50     1\n2741 67000330037       31     0\n2742 67000330037       32     0\n2743 67000330037       33     0\n2744 67000330037       34     0\n2745 67000330037       35     0\n2746 67000330037       36     0\n2747 67000330037       37     1\n2748 67000330037       38     0\n2749 67000330037       39     1\n2750 67000330037       40     0\n2751 67000330037       41     1\n2752 67000330037       42     1\n2753 67000330037       43     2\n2754 67000330037       44     2\n2755 67000330037       45     1\n2756 67000330037       46     2\n2757 67000330037       47     2\n2758 67000330037       48     1\n2759 67000330037       49     1\n2760 67000330037       50     0\n2761 67000330038       31     0\n2762 67000330038       32     0\n2763 67000330038       33     0\n2764 67000330038       34     1\n2765 67000330038       35     0\n2766 67000330038       36     0\n2767 67000330038       37     0\n2768 67000330038       38     1\n2769 67000330038       39     1\n2770 67000330038       40     1\n2771 67000330038       41     0\n2772 67000330038       42     0\n2773 67000330038       43     0\n2774 67000330038       44     1\n2775 67000330038       45     1\n2776 67000330038       46     1\n2777 67000330038       47     0\n2778 67000330038       48     0\n2779 67000330038       49     0\n2780 67000330038       50     0\n2781 67000330039       31     0\n2782 67000330039       32    12\n2783 67000330039       33    13\n2784 67000330039       34     2\n2785 67000330039       35    19\n2786 67000330039       36    13\n2787 67000330039       37     6\n2788 67000330039       38     8\n2789 67000330039       39    16\n2790 67000330039       40    16\n2791 67000330039       41     6\n2792 67000330039       42     5\n2793 67000330039       43     2\n2794 67000330039       44     8\n2795 67000330039       45     0\n2796 67000330039       46     0\n2797 67000330039       47     0\n2798 67000330039       48     0\n2799 67000330039       49     0\n2800 67000330039       50     0\n2801 67000330040       31     0\n2802 67000330040       32     2\n2803 67000330040       33     7\n2804 67000330040       34    10\n2805 67000330040       35    17\n2806 67000330040       36    22\n2807 67000330040       37    15\n2808 67000330040       38    23\n2809 67000330040       39    24\n2810 67000330040       40    21\n2811 67000330040       41     8\n2812 67000330040       42    14\n2813 67000330040       43     1\n2814 67000330040       44     9\n2815 67000330040       45     0\n2816 67000330040       46     3\n2817 67000330040       47     2\n2818 67000330040       48     0\n2819 67000330040       49     0\n2820 67000330040       50     0\n2821 67000340001       31     0\n2822 67000340001       32     0\n2823 67000340001       33     1\n2824 67000340001       34     2\n2825 67000340001       35     3\n2826 67000340001       36     2\n2827 67000340001       37     4\n2828 67000340001       38     2\n2829 67000340001       39     7\n2830 67000340001       40     3\n2831 67000340001       41     5\n2832 67000340001       42     6\n2833 67000340001       43     3\n2834 67000340001       44     1\n2835 67000340001       45     3\n2836 67000340001       46     4\n2837 67000340001       47     1\n2838 67000340001       48     0\n2839 67000340001       49     1\n2840 67000340001       50     1\n2841 67000340004       31     0\n2842 67000340004       32     1\n2843 67000340004       33     1\n2844 67000340004       34     5\n2845 67000340004       35    10\n2846 67000340004       36     6\n2847 67000340004       37     7\n2848 67000340004       38     7\n2849 67000340004       39    14\n2850 67000340004       40     7\n2851 67000340004       41     4\n2852 67000340004       42     3\n2853 67000340004       43     8\n2854 67000340004       44     2\n2855 67000340004       45     1\n2856 67000340004       46     3\n2857 67000340004       47     0\n2858 67000340004       48     0\n2859 67000340004       49     0\n2860 67000340004       50     0\n2861 67000340005       31     0\n2862 67000340005       32     1\n2863 67000340005       33     2\n2864 67000340005       34     1\n2865 67000340005       35     2\n2866 67000340005       36     2\n2867 67000340005       37     8\n2868 67000340005       38     3\n2869 67000340005       39    13\n2870 67000340005       40     8\n2871 67000340005       41     9\n2872 67000340005       42     2\n2873 67000340005       43     3\n2874 67000340005       44     4\n2875 67000340005       45     8\n2876 67000340005       46     2\n2877 67000340005       47     2\n2878 67000340005       48     2\n2879 67000340005       49     1\n2880 67000340005       50     1\n2881 67000340007       31     1\n2882 67000340007       32     1\n2883 67000340007       33     2\n2884 67000340007       34     0\n2885 67000340007       35     1\n2886 67000340007       36     5\n2887 67000340007       37     5\n2888 67000340007       38     6\n2889 67000340007       39     9\n2890 67000340007       40     6\n2891 67000340007       41     5\n2892 67000340007       42     3\n2893 67000340007       43     7\n2894 67000340007       44     6\n2895 67000340007       45     2\n2896 67000340007       46     1\n2897 67000340007       47     1\n2898 67000340007       48     3\n2899 67000340007       49     1\n2900 67000340007       50     1\n2901 67000340008       31     0\n2902 67000340008       32     0\n2903 67000340008       33     0\n2904 67000340008       34     3\n2905 67000340008       35     2\n2906 67000340008       36     8\n2907 67000340008       37     9\n2908 67000340008       38     9\n2909 67000340008       39     8\n2910 67000340008       40    11\n2911 67000340008       41     9\n2912 67000340008       42     0\n2913 67000340008       43     5\n2914 67000340008       44     4\n2915 67000340008       45     6\n2916 67000340008       46     0\n2917 67000340008       47     2\n2918 67000340008       48     2\n2919 67000340008       49     0\n2920 67000340008       50     0\n2921 67000340018       31     1\n2922 67000340018       32     0\n2923 67000340018       33     0\n2924 67000340018       34     0\n2925 67000340018       35     5\n2926 67000340018       36     5\n2927 67000340018       37     4\n2928 67000340018       38    18\n2929 67000340018       39    15\n2930 67000340018       40    16\n2931 67000340018       41    12\n2932 67000340018       42     3\n2933 67000340018       43     9\n2934 67000340018       44     3\n2935 67000340018       45     3\n2936 67000340018       46     5\n2937 67000340018       47     0\n2938 67000340018       48     0\n2939 67000340018       49     1\n2940 67000340018       50     0\n2941 67000340019       31     0\n2942 67000340019       32     0\n2943 67000340019       33     0\n2944 67000340019       34     2\n2945 67000340019       35     5\n2946 67000340019       36     2\n2947 67000340019       37     4\n2948 67000340019       38     2\n2949 67000340019       39     1\n2950 67000340019       40     0\n2951 67000340019       41     1\n2952 67000340019       42     2\n2953 67000340019       43     1\n2954 67000340019       44     1\n2955 67000340019       45     1\n2956 67000340019       46     4\n2957 67000340019       47     0\n2958 67000340019       48     0\n2959 67000340019       49     0\n2960 67000340019       50     0\n2961 67000340020       31     0\n2962 67000340020       32     0\n2963 67000340020       33     0\n2964 67000340020       34     3\n2965 67000340020       35     5\n2966 67000340020       36     3\n2967 67000340020       37     4\n2968 67000340020       38     9\n2969 67000340020       39    16\n2970 67000340020       40     7\n2971 67000340020       41     5\n2972 67000340020       42     9\n2973 67000340020       43     5\n2974 67000340020       44     6\n2975 67000340020       45     6\n2976 67000340020       46     2\n2977 67000340020       47     3\n2978 67000340020       48     0\n2979 67000340020       49     0\n2980 67000340020       50     0\n2981 67000340023       31     0\n2982 67000340023       32     3\n2983 67000340023       33     0\n2984 67000340023       34     3\n2985 67000340023       35    10\n2986 67000340023       36    17\n2987 67000340023       37     9\n2988 67000340023       38    10\n2989 67000340023       39    13\n2990 67000340023       40    12\n2991 67000340023       41    19\n2992 67000340023       42    15\n2993 67000340023       43    14\n2994 67000340023       44    18\n2995 67000340023       45     7\n2996 67000340023       46     7\n2997 67000340023       47     4\n2998 67000340023       48     1\n2999 67000340023       49     0\n3000 67000340023       50     1\n3001 67000340024       31     0\n3002 67000340024       32     0\n3003 67000340024       33     0\n3004 67000340024       34     2\n3005 67000340024       35     3\n3006 67000340024       36     6\n3007 67000340024       37     4\n3008 67000340024       38     7\n3009 67000340024       39    12\n3010 67000340024       40     4\n3011 67000340024       41    11\n3012 67000340024       42     5\n3013 67000340024       43    10\n3014 67000340024       44     8\n3015 67000340024       45     5\n3016 67000340024       46     4\n3017 67000340024       47     3\n3018 67000340024       48     0\n3019 67000340024       49     0\n3020 67000340024       50     0\n3021 67000340025       31     0\n3022 67000340025       32     2\n3023 67000340025       33     0\n3024 67000340025       34     1\n3025 67000340025       35     2\n3026 67000340025       36     7\n3027 67000340025       37     8\n3028 67000340025       38     7\n3029 67000340025       39     9\n3030 67000340025       40     9\n3031 67000340025       41     7\n3032 67000340025       42    13\n3033 67000340025       43     5\n3034 67000340025       44     6\n3035 67000340025       45     4\n3036 67000340025       46     4\n3037 67000340025       47     1\n3038 67000340025       48     1\n3039 67000340025       49     0\n3040 67000340025       50     1\n3041 67000340026       31     0\n3042 67000340026       32     0\n3043 67000340026       33     0\n3044 67000340026       34     1\n3045 67000340026       35     1\n3046 67000340026       36    11\n3047 67000340026       37     7\n3048 67000340026       38     9\n3049 67000340026       39    12\n3050 67000340026       40    17\n3051 67000340026       41     7\n3052 67000340026       42     7\n3053 67000340026       43     8\n3054 67000340026       44     7\n3055 67000340026       45     7\n3056 67000340026       46     4\n3057 67000340026       47     2\n3058 67000340026       48     0\n3059 67000340026       49     0\n3060 67000340026       50     0\n3061 67000340032       31     0\n3062 67000340032       32     5\n3063 67000340032       33     4\n3064 67000340032       34     6\n3065 67000340032       35     8\n3066 67000340032       36    20\n3067 67000340032       37     7\n3068 67000340032       38    10\n3069 67000340032       39    17\n3070 67000340032       40     7\n3071 67000340032       41     4\n3072 67000340032       42     0\n3073 67000340032       43     4\n3074 67000340032       44     1\n3075 67000340032       45     0\n3076 67000340032       46     1\n3077 67000340032       47     0\n3078 67000340032       48     1\n3079 67000340032       49     0\n3080 67000340032       50     1\n3081 67000340033       31     6\n3082 67000340033       32     2\n3083 67000340033       33     2\n3084 67000340033       34     6\n3085 67000340033       35     7\n3086 67000340033       36     4\n3087 67000340033       37     6\n3088 67000340033       38     2\n3089 67000340033       39    10\n3090 67000340033       40     8\n3091 67000340033       41     3\n3092 67000340033       42     5\n3093 67000340033       43     5\n3094 67000340033       44     0\n3095 67000340033       45     3\n3096 67000340033       46     1\n3097 67000340033       47     0\n3098 67000340033       48     0\n3099 67000340033       49     0\n3100 67000340033       50     2\n3101 67000340038       31     1\n3102 67000340038       32     2\n3103 67000340038       33     0\n3104 67000340038       34     1\n3105 67000340038       35     3\n3106 67000340038       36     5\n3107 67000340038       37     4\n3108 67000340038       38     4\n3109 67000340038       39     7\n3110 67000340038       40     6\n3111 67000340038       41     4\n3112 67000340038       42     5\n3113 67000340038       43     8\n3114 67000340038       44     3\n3115 67000340038       45     4\n3116 67000340038       46     3\n3117 67000340038       47     1\n3118 67000340038       48     2\n3119 67000340038       49     0\n3120 67000340038       50     0\n3121 67000340039       31     0\n3122 67000340039       32     1\n3123 67000340039       33     0\n3124 67000340039       34     0\n3125 67000340039       35     5\n3126 67000340039       36    13\n3127 67000340039       37     7\n3128 67000340039       38    14\n3129 67000340039       39    19\n3130 67000340039       40    11\n3131 67000340039       41     6\n3132 67000340039       42    10\n3133 67000340039       43     6\n3134 67000340039       44    13\n3135 67000340039       45    13\n3136 67000340039       46     1\n3137 67000340039       47     2\n3138 67000340039       48     0\n3139 67000340039       49     0\n3140 67000340039       50     0\n3141 67000340040       31     3\n3142 67000340040       32     0\n3143 67000340040       33     1\n3144 67000340040       34     5\n3145 67000340040       35     5\n3146 67000340040       36     4\n3147 67000340040       37     4\n3148 67000340040       38     8\n3149 67000340040       39     7\n3150 67000340040       40     7\n3151 67000340040       41    10\n3152 67000340040       42    10\n3153 67000340040       43     2\n3154 67000340040       44     4\n3155 67000340040       45     7\n3156 67000340040       46     9\n3157 67000340040       47     3\n3158 67000340040       48     1\n3159 67000340040       49     1\n3160 67000340040       50     0\n3161 67000340041       31     0\n3162 67000340041       32     0\n3163 67000340041       33     0\n3164 67000340041       34     0\n3165 67000340041       35     3\n3166 67000340041       36     8\n3167 67000340041       37     6\n3168 67000340041       38     7\n3169 67000340041       39     9\n3170 67000340041       40     8\n3171 67000340041       41     4\n3172 67000340041       42     1\n3173 67000340041       43     4\n3174 67000340041       44     3\n3175 67000340041       45     1\n3176 67000340041       46     2\n3177 67000340041       47     2\n3178 67000340041       48     0\n3179 67000340041       49     0\n3180 67000340041       50     0\n3181 67000340042       31     0\n3182 67000340042       32     0\n3183 67000340042       33     1\n3184 67000340042       34     0\n3185 67000340042       35     1\n3186 67000340042       36    10\n3187 67000340042       37     5\n3188 67000340042       38     6\n3189 67000340042       39    11\n3190 67000340042       40    13\n3191 67000340042       41     5\n3192 67000340042       42     8\n3193 67000340042       43     7\n3194 67000340042       44     6\n3195 67000340042       45     5\n3196 67000340042       46     2\n3197 67000340042       47     0\n3198 67000340042       48     2\n3199 67000340042       49     1\n3200 67000340042       50     0\n3201 67000340043       31     0\n3202 67000340043       32     0\n3203 67000340043       33     1\n3204 67000340043       34     0\n3205 67000340043       35     1\n3206 67000340043       36     3\n3207 67000340043       37     2\n3208 67000340043       38     4\n3209 67000340043       39     2\n3210 67000340043       40     3\n3211 67000340043       41     1\n3212 67000340043       42     5\n3213 67000340043       43     3\n3214 67000340043       44    15\n3215 67000340043       45    14\n3216 67000340043       46     7\n3217 67000340043       47     1\n3218 67000340043       48     0\n3219 67000340043       49     1\n3220 67000340043       50     0\n3221 67000340044       31     0\n3222 67000340044       32     1\n3223 67000340044       33     1\n3224 67000340044       34     2\n3225 67000340044       35     3\n3226 67000340044       36     5\n3227 67000340044       37     6\n3228 67000340044       38     3\n3229 67000340044       39     3\n3230 67000340044       40     4\n3231 67000340044       41     7\n3232 67000340044       42     5\n3233 67000340044       43     1\n3234 67000340044       44     3\n3235 67000340044       45     3\n3236 67000340044       46     2\n3237 67000340044       47     0\n3238 67000340044       48     0\n3239 67000340044       49     0\n3240 67000340044       50     0\n3241 67000340045       31     1\n3242 67000340045       32     1\n3243 67000340045       33     0\n3244 67000340045       34     1\n3245 67000340045       35     1\n3246 67000340045       36     8\n3247 67000340045       37     3\n3248 67000340045       38     2\n3249 67000340045       39    13\n3250 67000340045       40     7\n3251 67000340045       41     3\n3252 67000340045       42     1\n3253 67000340045       43     6\n3254 67000340045       44     4\n3255 67000340045       45     6\n3256 67000340045       46     1\n3257 67000340045       47     2\n3258 67000340045       48     0\n3259 67000340045       49     0\n3260 67000340045       50     0\n3261 67000340046       31     1\n3262 67000340046       32     2\n3263 67000340046       33     9\n3264 67000340046       34    17\n3265 67000340046       35    14\n3266 67000340046       36    35\n3267 67000340046       37    31\n3268 67000340046       38    31\n3269 67000340046       39    25\n3270 67000340046       40    15\n3271 67000340046       41    14\n3272 67000340046       42    11\n3273 67000340046       43    15\n3274 67000340046       44    12\n3275 67000340046       45    10\n3276 67000340046       46     3\n3277 67000340046       47     2\n3278 67000340046       48     0\n3279 67000340046       49     0\n3280 67000340046       50     2\n3281 67000340047       31     0\n3282 67000340047       32     1\n3283 67000340047       33     0\n3284 67000340047       34     1\n3285 67000340047       35     1\n3286 67000340047       36    10\n3287 67000340047       37     8\n3288 67000340047       38    12\n3289 67000340047       39    16\n3290 67000340047       40    13\n3291 67000340047       41    21\n3292 67000340047       42    14\n3293 67000340047       43    11\n3294 67000340047       44    26\n3295 67000340047       45    12\n3296 67000340047       46     4\n3297 67000340047       47     0\n3298 67000340047       48     3\n3299 67000340047       49     0\n3300 67000340047       50     1\n3301 67000340048       31     0\n3302 67000340048       32     1\n3303 67000340048       33     1\n3304 67000340048       34     1\n3305 67000340048       35     6\n3306 67000340048       36     2\n3307 67000340048       37     3\n3308 67000340048       38     8\n3309 67000340048       39    12\n3310 67000340048       40     9\n3311 67000340048       41     7\n3312 67000340048       42     5\n3313 67000340048       43     4\n3314 67000340048       44     1\n3315 67000340048       45     3\n3316 67000340048       46     2\n3317 67000340048       47     2\n3318 67000340048       48     1\n3319 67000340048       49     0\n3320 67000340048       50     0\n3321 67000340049       31     0\n3322 67000340049       32     1\n3323 67000340049       33     2\n3324 67000340049       34     2\n3325 67000340049       35     4\n3326 67000340049       36     4\n3327 67000340049       37     8\n3328 67000340049       38     6\n3329 67000340049       39     9\n3330 67000340049       40    13\n3331 67000340049       41    12\n3332 67000340049       42     5\n3333 67000340049       43     8\n3334 67000340049       44     3\n3335 67000340049       45     4\n3336 67000340049       46     1\n3337 67000340049       47     0\n3338 67000340049       48     2\n3339 67000340049       49     0\n3340 67000340049       50     0\n3341 67000340050       31     0\n3342 67000340050       32     0\n3343 67000340050       33     1\n3344 67000340050       34     2\n3345 67000340050       35     1\n3346 67000340050       36     2\n3347 67000340050       37     2\n3348 67000340050       38     0\n3349 67000340050       39     5\n3350 67000340050       40     8\n3351 67000340050       41     6\n3352 67000340050       42     5\n3353 67000340050       43     7\n3354 67000340050       44     6\n3355 67000340050       45     3\n3356 67000340050       46     2\n3357 67000340050       47     0\n3358 67000340050       48     1\n3359 67000340050       49     1\n3360 67000340050       50     0\n3361 67000340051       31     0\n3362 67000340051       32     0\n3363 67000340051       33     1\n3364 67000340051       34     0\n3365 67000340051       35     5\n3366 67000340051       36     5\n3367 67000340051       37     9\n3368 67000340051       38    11\n3369 67000340051       39     7\n3370 67000340051       40     6\n3371 67000340051       41     3\n3372 67000340051       42     9\n3373 67000340051       43     5\n3374 67000340051       44     9\n3375 67000340051       45     4\n3376 67000340051       46     3\n3377 67000340051       47     2\n3378 67000340051       48     2\n3379 67000340051       49     1\n3380 67000340051       50     0\n3381 67000340052       31     0\n3382 67000340052       32     0\n3383 67000340052       33     2\n3384 67000340052       34     4\n3385 67000340052       35     2\n3386 67000340052       36     7\n3387 67000340052       37     3\n3388 67000340052       38     4\n3389 67000340052       39     5\n3390 67000340052       40     9\n3391 67000340052       41     1\n3392 67000340052       42     3\n3393 67000340052       43     1\n3394 67000340052       44     1\n3395 67000340052       45     2\n3396 67000340052       46     5\n3397 67000340052       47     0\n3398 67000340052       48     1\n3399 67000340052       49     0\n3400 67000340052       50     0\n3401 67000340053       31     0\n3402 67000340053       32     1\n3403 67000340053       33     1\n3404 67000340053       34     2\n3405 67000340053       35     1\n3406 67000340053       36     5\n3407 67000340053       37     8\n3408 67000340053       38     5\n3409 67000340053       39     9\n3410 67000340053       40     7\n3411 67000340053       41     3\n3412 67000340053       42     5\n3413 67000340053       43     3\n3414 67000340053       44     3\n3415 67000340053       45     4\n3416 67000340053       46     1\n3417 67000340053       47     2\n3418 67000340053       48     2\n3419 67000340053       49     0\n3420 67000340053       50     0\n3421 67000340054       31     0\n3422 67000340054       32     1\n3423 67000340054       33     1\n3424 67000340054       34     1\n3425 67000340054       35     2\n3426 67000340054       36     2\n3427 67000340054       37     7\n3428 67000340054       38     7\n3429 67000340054       39     6\n3430 67000340054       40     7\n3431 67000340054       41     6\n3432 67000340054       42    17\n3433 67000340054       43     9\n3434 67000340054       44    12\n3435 67000340054       45     6\n3436 67000340054       46     4\n3437 67000340054       47     1\n3438 67000340054       48     0\n3439 67000340054       49     0\n3440 67000340054       50     0\n3441 67000340055       31     0\n3442 67000340055       32     0\n3443 67000340055       33     1\n3444 67000340055       34     1\n3445 67000340055       35     3\n3446 67000340055       36     3\n3447 67000340055       37     6\n3448 67000340055       38     4\n3449 67000340055       39     7\n3450 67000340055       40     2\n3451 67000340055       41     2\n3452 67000340055       42     5\n3453 67000340055       43     5\n3454 67000340055       44     0\n3455 67000340055       45     1\n3456 67000340055       46     1\n3457 67000340055       47     6\n3458 67000340055       48     0\n3459 67000340055       49     1\n3460 67000340055       50     0\n3461 67000340056       31     0\n3462 67000340056       32     0\n3463 67000340056       33     0\n3464 67000340056       34     1\n3465 67000340056       35     2\n3466 67000340056       36     3\n3467 67000340056       37     4\n3468 67000340056       38     3\n3469 67000340056       39     8\n3470 67000340056       40    11\n3471 67000340056       41     4\n3472 67000340056       42     5\n3473 67000340056       43     2\n3474 67000340056       44     6\n3475 67000340056       45     0\n3476 67000340056       46     2\n3477 67000340056       47     0\n3478 67000340056       48     1\n3479 67000340056       49     0\n3480 67000340056       50     0\n3481 67000350001       31     0\n3482 67000350001       32     0\n3483 67000350001       33     0\n3484 67000350001       34     1\n3485 67000350001       35     1\n3486 67000350001       36     1\n3487 67000350001       37     0\n3488 67000350001       38     4\n3489 67000350001       39     1\n3490 67000350001       40     1\n3491 67000350001       41     0\n3492 67000350001       42     2\n3493 67000350001       43     2\n3494 67000350001       44     1\n3495 67000350001       45     0\n3496 67000350001       46     0\n3497 67000350001       47     1\n3498 67000350001       48     0\n3499 67000350001       49     1\n3500 67000350001       50     2\n3501 67000350002       31     0\n3502 67000350002       32     1\n3503 67000350002       33     1\n3504 67000350002       34     2\n3505 67000350002       35     3\n3506 67000350002       36     3\n3507 67000350002       37     6\n3508 67000350002       38     5\n3509 67000350002       39     2\n3510 67000350002       40     0\n3511 67000350002       41     2\n3512 67000350002       42     1\n3513 67000350002       43     3\n3514 67000350002       44     1\n3515 67000350002       45     1\n3516 67000350002       46     1\n3517 67000350002       47     1\n3518 67000350002       48     0\n3519 67000350002       49     1\n3520 67000350002       50     0\n3521 67000350003       31     0\n3522 67000350003       32     0\n3523 67000350003       33     1\n3524 67000350003       34     0\n3525 67000350003       35     2\n3526 67000350003       36     1\n3527 67000350003       37     1\n3528 67000350003       38     3\n3529 67000350003       39     2\n3530 67000350003       40     2\n3531 67000350003       41     3\n3532 67000350003       42     1\n3533 67000350003       43     2\n3534 67000350003       44     0\n3535 67000350003       45     0\n3536 67000350003       46     0\n3537 67000350003       47     0\n3538 67000350003       48     0\n3539 67000350003       49     0\n3540 67000350003       50     0\n3541 67000350004       31     0\n3542 67000350004       32     0\n3543 67000350004       33     1\n3544 67000350004       34     0\n3545 67000350004       35     0\n3546 67000350004       36     1\n3547 67000350004       37     2\n3548 67000350004       38     0\n3549 67000350004       39     7\n3550 67000350004       40     1\n3551 67000350004       41     0\n3552 67000350004       42     2\n3553 67000350004       43     2\n3554 67000350004       44     0\n3555 67000350004       45     2\n3556 67000350004       46     0\n3557 67000350004       47     0\n3558 67000350004       48     1\n3559 67000350004       49     0\n3560 67000350004       50     0\n3561 67000350005       31     0\n3562 67000350005       32     1\n3563 67000350005       33     0\n3564 67000350005       34     0\n3565 67000350005       35     0\n3566 67000350005       36     2\n3567 67000350005       37     1\n3568 67000350005       38     3\n3569 67000350005       39     0\n3570 67000350005       40     2\n3571 67000350005       41     4\n3572 67000350005       42     0\n3573 67000350005       43     2\n3574 67000350005       44     0\n3575 67000350005       45     4\n3576 67000350005       46     0\n3577 67000350005       47     0\n3578 67000350005       48     0\n3579 67000350005       49     0\n3580 67000350005       50     0\n3581 67000350006       31     1\n3582 67000350006       32     0\n3583 67000350006       33     2\n3584 67000350006       34     0\n3585 67000350006       35     1\n3586 67000350006       36     2\n3587 67000350006       37     1\n3588 67000350006       38     5\n3589 67000350006       39     7\n3590 67000350006       40    14\n3591 67000350006       41     9\n3592 67000350006       42     4\n3593 67000350006       43     6\n3594 67000350006       44     3\n3595 67000350006       45     5\n3596 67000350006       46     1\n3597 67000350006       47     4\n3598 67000350006       48     2\n3599 67000350006       49     0\n3600 67000350006       50     0\n3601 67000350007       31     0\n3602 67000350007       32     1\n3603 67000350007       33     0\n3604 67000350007       34     3\n3605 67000350007       35     3\n3606 67000350007       36     6\n3607 67000350007       37     4\n3608 67000350007       38     8\n3609 67000350007       39    16\n3610 67000350007       40    24\n3611 67000350007       41    15\n3612 67000350007       42     9\n3613 67000350007       43     9\n3614 67000350007       44     9\n3615 67000350007       45     2\n3616 67000350007       46     0\n3617 67000350007       47     0\n3618 67000350007       48     0\n3619 67000350007       49     0\n3620 67000350007       50     1\n3621 67000350008       31     1\n3622 67000350008       32     0\n3623 67000350008       33     2\n3624 67000350008       34     0\n3625 67000350008       35     9\n3626 67000350008       36     8\n3627 67000350008       37    12\n3628 67000350008       38    15\n3629 67000350008       39    26\n3630 67000350008       40    12\n3631 67000350008       41    15\n3632 67000350008       42     8\n3633 67000350008       43     1\n3634 67000350008       44     2\n3635 67000350008       45     3\n3636 67000350008       46     2\n3637 67000350008       47     1\n3638 67000350008       48     0\n3639 67000350008       49     0\n3640 67000350008       50     1\n3641 67000350009       31     0\n3642 67000350009       32     0\n3643 67000350009       33     0\n3644 67000350009       34     5\n3645 67000350009       35     7\n3646 67000350009       36    13\n3647 67000350009       37    12\n3648 67000350009       38    13\n3649 67000350009       39    20\n3650 67000350009       40     6\n3651 67000350009       41     1\n3652 67000350009       42    11\n3653 67000350009       43     5\n3654 67000350009       44     2\n3655 67000350009       45     6\n3656 67000350009       46     7\n3657 67000350009       47     2\n3658 67000350009       48     0\n3659 67000350009       49     1\n3660 67000350009       50     0\n3661 67000350010       31     0\n3662 67000350010       32     0\n3663 67000350010       33     0\n3664 67000350010       34     2\n3665 67000350010       35     0\n3666 67000350010       36     5\n3667 67000350010       37     9\n3668 67000350010       38     3\n3669 67000350010       39     7\n3670 67000350010       40    10\n3671 67000350010       41    12\n3672 67000350010       42     4\n3673 67000350010       43     6\n3674 67000350010       44     5\n3675 67000350010       45     1\n3676 67000350010       46     2\n3677 67000350010       47     0\n3678 67000350010       48     5\n3679 67000350010       49     1\n3680 67000350010       50     1\n3681 67000350011       31     0\n3682 67000350011       32     0\n3683 67000350011       33     2\n3684 67000350011       34     2\n3685 67000350011       35     0\n3686 67000350011       36     1\n3687 67000350011       37     2\n3688 67000350011       38     2\n3689 67000350011       39     2\n3690 67000350011       40     1\n3691 67000350011       41     1\n3692 67000350011       42     1\n3693 67000350011       43     2\n3694 67000350011       44     0\n3695 67000350011       45     0\n3696 67000350011       46     1\n3697 67000350011       47     0\n3698 67000350011       48     0\n3699 67000350011       49     0\n3700 67000350011       50     1\n3701 67000350012       31     0\n3702 67000350012       32     1\n3703 67000350012       33     0\n3704 67000350012       34     3\n3705 67000350012       35     2\n3706 67000350012       36     0\n3707 67000350012       37     3\n3708 67000350012       38     1\n3709 67000350012       39     1\n3710 67000350012       40     1\n3711 67000350012       41     0\n3712 67000350012       42     0\n3713 67000350012       43     1\n3714 67000350012       44     0\n3715 67000350012       45     2\n3716 67000350012       46     2\n3717 67000350012       47     0\n3718 67000350012       48     0\n3719 67000350012       49     0\n3720 67000350012       50     0\n3721 67000350013       31     0\n3722 67000350013       32     0\n3723 67000350013       33     0\n3724 67000350013       34     1\n3725 67000350013       35     0\n3726 67000350013       36     2\n3727 67000350013       37     0\n3728 67000350013       38     5\n3729 67000350013       39     1\n3730 67000350013       40     3\n3731 67000350013       41     3\n3732 67000350013       42     1\n3733 67000350013       43     2\n3734 67000350013       44     1\n3735 67000350013       45     1\n3736 67000350013       46     0\n3737 67000350013       47     1\n3738 67000350013       48     0\n3739 67000350013       49     2\n3740 67000350013       50     0\n3741 67000350014       31     0\n3742 67000350014       32     0\n3743 67000350014       33     0\n3744 67000350014       34     0\n3745 67000350014       35     0\n3746 67000350014       36     0\n3747 67000350014       37     0\n3748 67000350014       38     0\n3749 67000350014       39     0\n3750 67000350014       40     1\n3751 67000350014       41     1\n3752 67000350014       42     0\n3753 67000350014       43     0\n3754 67000350014       44     0\n3755 67000350014       45     1\n3756 67000350014       46     0\n3757 67000350014       47     0\n3758 67000350014       48     0\n3759 67000350014       49     0\n3760 67000350014       50     0\n3761 67000350015       31     1\n3762 67000350015       32     5\n3763 67000350015       33     0\n3764 67000350015       34     4\n3765 67000350015       35     2\n3766 67000350015       36     7\n3767 67000350015       37     9\n3768 67000350015       38    12\n3769 67000350015       39     8\n3770 67000350015       40     8\n3771 67000350015       41     7\n3772 67000350015       42     2\n3773 67000350015       43    10\n3774 67000350015       44     7\n3775 67000350015       45     8\n3776 67000350015       46     4\n3777 67000350015       47     1\n3778 67000350015       48     0\n3779 67000350015       49     0\n3780 67000350015       50     0\n3781 67000350016       31     0\n3782 67000350016       32     2\n3783 67000350016       33     0\n3784 67000350016       34     2\n3785 67000350016       35     2\n3786 67000350016       36     6\n3787 67000350016       37     2\n3788 67000350016       38     2\n3789 67000350016       39     2\n3790 67000350016       40     2\n3791 67000350016       41     3\n3792 67000350016       42     3\n3793 67000350016       43     2\n3794 67000350016       44     5\n3795 67000350016       45     0\n3796 67000350016       46     2\n3797 67000350016       47     0\n3798 67000350016       48     0\n3799 67000350016       49     1\n3800 67000350016       50     0\n3801 67000350017       31     0\n3802 67000350017       32     0\n3803 67000350017       33     1\n3804 67000350017       34     2\n3805 67000350017       35     6\n3806 67000350017       36     4\n3807 67000350017       37     8\n3808 67000350017       38     1\n3809 67000350017       39    13\n3810 67000350017       40     4\n3811 67000350017       41     1\n3812 67000350017       42     1\n3813 67000350017       43     0\n3814 67000350017       44     1\n3815 67000350017       45     2\n3816 67000350017       46     0\n3817 67000350017       47     0\n3818 67000350017       48     0\n3819 67000350017       49     0\n3820 67000350017       50     0\n3821 67000350018       31     0\n3822 67000350018       32     1\n3823 67000350018       33     0\n3824 67000350018       34     4\n3825 67000350018       35     4\n3826 67000350018       36     8\n3827 67000350018       37     6\n3828 67000350018       38     6\n3829 67000350018       39     6\n3830 67000350018       40     9\n3831 67000350018       41     4\n3832 67000350018       42     4\n3833 67000350018       43     3\n3834 67000350018       44     3\n3835 67000350018       45     3\n3836 67000350018       46     2\n3837 67000350018       47     1\n3838 67000350018       48     0\n3839 67000350018       49     1\n3840 67000350018       50     0\n3841 67000350019       31     0\n3842 67000350019       32     0\n3843 67000350019       33     0\n3844 67000350019       34     1\n3845 67000350019       35     1\n3846 67000350019       36     0\n3847 67000350019       37     1\n3848 67000350019       38     0\n3849 67000350019       39     1\n3850 67000350019       40     0\n3851 67000350019       41     2\n3852 67000350019       42     1\n3853 67000350019       43     1\n3854 67000350019       44     3\n3855 67000350019       45     0\n3856 67000350019       46     0\n3857 67000350019       47     0\n3858 67000350019       48     0\n3859 67000350019       49     0\n3860 67000350019       50     0\n3861 67000350020       31     0\n3862 67000350020       32     2\n3863 67000350020       33     1\n3864 67000350020       34     0\n3865 67000350020       35     5\n3866 67000350020       36     2\n3867 67000350020       37     3\n3868 67000350020       38     2\n3869 67000350020       39     2\n3870 67000350020       40     3\n3871 67000350020       41     3\n3872 67000350020       42     1\n3873 67000350020       43     1\n3874 67000350020       44     0\n3875 67000350020       45     1\n3876 67000350020       46     1\n3877 67000350020       47     0\n3878 67000350020       48     1\n3879 67000350020       49     0\n3880 67000350020       50     0\n3881 67000350021       31     0\n3882 67000350021       32     0\n3883 67000350021       33     0\n3884 67000350021       34     3\n3885 67000350021       35     0\n3886 67000350021       36     2\n3887 67000350021       37     4\n3888 67000350021       38     1\n3889 67000350021       39     4\n3890 67000350021       40     3\n3891 67000350021       41     1\n3892 67000350021       42     2\n3893 67000350021       43     2\n3894 67000350021       44     2\n3895 67000350021       45     3\n3896 67000350021       46     0\n3897 67000350021       47     0\n3898 67000350021       48     0\n3899 67000350021       49     0\n3900 67000350021       50     0\n3901 67000350022       31     0\n3902 67000350022       32     0\n3903 67000350022       33     0\n3904 67000350022       34     2\n3905 67000350022       35     4\n3906 67000350022       36     0\n3907 67000350022       37     1\n3908 67000350022       38     3\n3909 67000350022       39     4\n3910 67000350022       40     2\n3911 67000350022       41     0\n3912 67000350022       42     2\n3913 67000350022       43     2\n3914 67000350022       44     1\n3915 67000350022       45     0\n3916 67000350022       46     0\n3917 67000350022       47     0\n3918 67000350022       48     0\n3919 67000350022       49     0\n3920 67000350022       50     0\n3921 67000350023       31     0\n3922 67000350023       32     0\n3923 67000350023       33     1\n3924 67000350023       34     1\n3925 67000350023       35     1\n3926 67000350023       36     2\n3927 67000350023       37     0\n3928 67000350023       38     2\n3929 67000350023       39     0\n3930 67000350023       40     1\n3931 67000350023       41     2\n3932 67000350023       42     1\n3933 67000350023       43     0\n3934 67000350023       44     0\n3935 67000350023       45     0\n3936 67000350023       46     0\n3937 67000350023       47     1\n3938 67000350023       48     0\n3939 67000350023       49     1\n3940 67000350023       50     2\n3941 67000350024       31     0\n3942 67000350024       32     0\n3943 67000350024       33     0\n3944 67000350024       34     1\n3945 67000350024       35     1\n3946 67000350024       36     0\n3947 67000350024       37     0\n3948 67000350024       38     3\n3949 67000350024       39     0\n3950 67000350024       40     0\n3951 67000350024       41     0\n3952 67000350024       42     1\n3953 67000350024       43     0\n3954 67000350024       44     1\n3955 67000350024       45     1\n3956 67000350024       46     0\n3957 67000350024       47     0\n3958 67000350024       48     0\n3959 67000350024       49     0\n3960 67000350024       50     0\n3961 67000350025       31     0\n3962 67000350025       32     0\n3963 67000350025       33     0\n3964 67000350025       34     0\n3965 67000350025       35     1\n3966 67000350025       36     1\n3967 67000350025       37     0\n3968 67000350025       38     2\n3969 67000350025       39     0\n3970 67000350025       40     2\n3971 67000350025       41     1\n3972 67000350025       42     2\n3973 67000350025       43     2\n3974 67000350025       44     0\n3975 67000350025       45     1\n3976 67000350025       46     0\n3977 67000350025       47     0\n3978 67000350025       48     0\n3979 67000350025       49     0\n3980 67000350025       50     0\n3981 67000350026       31     0\n3982 67000350026       32     0\n3983 67000350026       33     0\n3984 67000350026       34     2\n3985 67000350026       35     0\n3986 67000350026       36     0\n3987 67000350026       37     1\n3988 67000350026       38     1\n3989 67000350026       39     0\n3990 67000350026       40     0\n3991 67000350026       41     0\n3992 67000350026       42     2\n3993 67000350026       43     2\n3994 67000350026       44     1\n3995 67000350026       45     1\n3996 67000350026       46     0\n3997 67000350026       47     0\n3998 67000350026       48     1\n3999 67000350026       49     0\n4000 67000350026       50     0\n4001 67000350027       31     0\n4002 67000350027       32     0\n4003 67000350027       33     0\n4004 67000350027       34     0\n4005 67000350027       35     0\n4006 67000350027       36     0\n4007 67000350027       37     1\n4008 67000350027       38     0\n4009 67000350027       39     0\n4010 67000350027       40     1\n4011 67000350027       41     0\n4012 67000350027       42     0\n4013 67000350027       43     0\n4014 67000350027       44     1\n4015 67000350027       45     0\n4016 67000350027       46     0\n4017 67000350027       47     0\n4018 67000350027       48     0\n4019 67000350027       49     0\n4020 67000350027       50     0\n4021 67000350028       31     0\n4022 67000350028       32     0\n4023 67000350028       33     0\n4024 67000350028       34     0\n4025 67000350028       35     0\n4026 67000350028       36     0\n4027 67000350028       37     0\n4028 67000350028       38     0\n4029 67000350028       39     1\n4030 67000350028       40     0\n4031 67000350028       41     0\n4032 67000350028       42     0\n4033 67000350028       43     0\n4034 67000350028       44     0\n4035 67000350028       45     0\n4036 67000350028       46     0\n4037 67000350028       47     0\n4038 67000350028       48     0\n4039 67000350028       49     0\n4040 67000350028       50     0\n4041 67000350029       31     0\n4042 67000350029       32     0\n4043 67000350029       33     0\n4044 67000350029       34     0\n4045 67000350029       35     0\n4046 67000350029       36     0\n4047 67000350029       37     0\n4048 67000350029       38     1\n4049 67000350029       39     0\n4050 67000350029       40     1\n4051 67000350029       41     0\n4052 67000350029       42     0\n4053 67000350029       43     0\n4054 67000350029       44     0\n4055 67000350029       45     0\n4056 67000350029       46     0\n4057 67000350029       47     0\n4058 67000350029       48     0\n4059 67000350029       49     0\n4060 67000350029       50     0\n4061 67000350030       31     0\n4062 67000350030       32     0\n4063 67000350030       33     1\n4064 67000350030       34     0\n4065 67000350030       35     0\n4066 67000350030       36     2\n4067 67000350030       37     0\n4068 67000350030       38     0\n4069 67000350030       39     2\n4070 67000350030       40     2\n4071 67000350030       41     0\n4072 67000350030       42     1\n4073 67000350030       43     0\n4074 67000350030       44     1\n4075 67000350030       45     0\n4076 67000350030       46     0\n4077 67000350030       47     0\n4078 67000350030       48     0\n4079 67000350030       49     0\n4080 67000350030       50     1\n4081 67000350031       31     0\n4082 67000350031       32     0\n4083 67000350031       33     0\n4084 67000350031       34     0\n4085 67000350031       35     0\n4086 67000350031       36     1\n4087 67000350031       37     0\n4088 67000350031       38     2\n4089 67000350031       39     0\n4090 67000350031       40     0\n4091 67000350031       41     0\n4092 67000350031       42     0\n4093 67000350031       43     0\n4094 67000350031       44     0\n4095 67000350031       45     1\n4096 67000350031       46     0\n4097 67000350031       47     1\n4098 67000350031       48     0\n4099 67000350031       49     0\n4100 67000350031       50     0\n4101 67000350032       31     0\n4102 67000350032       32     0\n4103 67000350032       33     0\n4104 67000350032       34     0\n4105 67000350032       35     0\n4106 67000350032       36     0\n4107 67000350032       37     1\n4108 67000350032       38     0\n4109 67000350032       39     0\n4110 67000350032       40     0\n4111 67000350032       41     1\n4112 67000350032       42     0\n4113 67000350032       43     0\n4114 67000350032       44     0\n4115 67000350032       45     0\n4116 67000350032       46     0\n4117 67000350032       47     0\n4118 67000350032       48     0\n4119 67000350032       49     0\n4120 67000350032       50     0\n4121 67000350033       31     0\n4122 67000350033       32     0\n4123 67000350033       33     0\n4124 67000350033       34     0\n4125 67000350033       35     0\n4126 67000350033       36     0\n4127 67000350033       37     0\n4128 67000350033       38     0\n4129 67000350033       39     1\n4130 67000350033       40     0\n4131 67000350033       41     0\n4132 67000350033       42     0\n4133 67000350033       43     0\n4134 67000350033       44     0\n4135 67000350033       45     0\n4136 67000350033       46     1\n4137 67000350033       47     0\n4138 67000350033       48     0\n4139 67000350033       49     0\n4140 67000350033       50     0\n4141 67000350034       31     0\n4142 67000350034       32     0\n4143 67000350034       33     0\n4144 67000350034       34     0\n4145 67000350034       35     1\n4146 67000350034       36     0\n4147 67000350034       37     0\n4148 67000350034       38     1\n4149 67000350034       39     0\n4150 67000350034       40     0\n4151 67000350034       41     0\n4152 67000350034       42     0\n4153 67000350034       43     0\n4154 67000350034       44     0\n4155 67000350034       45     0\n4156 67000350034       46     0\n4157 67000350034       47     1\n4158 67000350034       48     1\n4159 67000350034       49     0\n4160 67000350034       50     0\n4161 67000350035       31     0\n4162 67000350035       32     0\n4163 67000350035       33     0\n4164 67000350035       34     0\n4165 67000350035       35     0\n4166 67000350035       36     0\n4167 67000350035       37     0\n4168 67000350035       38     0\n4169 67000350035       39     0\n4170 67000350035       40     0\n4171 67000350035       41     0\n4172 67000350035       42     0\n4173 67000350035       43     0\n4174 67000350035       44     0\n4175 67000350035       45     0\n4176 67000350035       46     0\n4177 67000350035       47     0\n4178 67000350035       48     0\n4179 67000350035       49     0\n4180 67000350035       50     0\n4181 67000350036       31     0\n4182 67000350036       32     0\n4183 67000350036       33     1\n4184 67000350036       34     0\n4185 67000350036       35     0\n4186 67000350036       36     0\n4187 67000350036       37     0\n4188 67000350036       38     0\n4189 67000350036       39     1\n4190 67000350036       40     1\n4191 67000350036       41     0\n4192 67000350036       42     1\n4193 67000350036       43     0\n4194 67000350036       44     0\n4195 67000350036       45     0\n4196 67000350036       46     0\n4197 67000350036       47     0\n4198 67000350036       48     0\n4199 67000350036       49     0\n4200 67000350036       50     0\n4201 67000350037       31     0\n4202 67000350037       32     0\n4203 67000350037       33     2\n4204 67000350037       34     4\n4205 67000350037       35     4\n4206 67000350037       36     3\n4207 67000350037       37     5\n4208 67000350037       38    12\n4209 67000350037       39     7\n4210 67000350037       40     8\n4211 67000350037       41     5\n4212 67000350037       42     2\n4213 67000350037       43     3\n4214 67000350037       44     7\n4215 67000350037       45     8\n4216 67000350037       46     1\n4217 67000350037       47     2\n4218 67000350037       48     0\n4219 67000350037       49     0\n4220 67000350037       50     0\n4221 67000350038       31     0\n4222 67000350038       32     2\n4223 67000350038       33     1\n4224 67000350038       34     4\n4225 67000350038       35     4\n4226 67000350038       36    18\n4227 67000350038       37    10\n4228 67000350038       38     4\n4229 67000350038       39     7\n4230 67000350038       40    15\n4231 67000350038       41     3\n4232 67000350038       42     5\n4233 67000350038       43     3\n4234 67000350038       44     6\n4235 67000350038       45     5\n4236 67000350038       46     3\n4237 67000350038       47     1\n4238 67000350038       48     0\n4239 67000350038       49     0\n4240 67000350038       50     0\n4241 67000350039       31     2\n4242 67000350039       32     3\n4243 67000350039       33     3\n4244 67000350039       34     6\n4245 67000350039       35    15\n4246 67000350039       36    10\n4247 67000350039       37    12\n4248 67000350039       38    19\n4249 67000350039       39    15\n4250 67000350039       40    12\n4251 67000350039       41     6\n4252 67000350039       42     8\n4253 67000350039       43     4\n4254 67000350039       44     8\n4255 67000350039       45     5\n4256 67000350039       46     1\n4257 67000350039       47     1\n4258 67000350039       48     1\n4259 67000350039       49     0\n4260 67000350039       50     1\n4261 67000350040       31     5\n4262 67000350040       32     8\n4263 67000350040       33    27\n4264 67000350040       34    48\n4265 67000350040       35    41\n4266 67000350040       36    63\n4267 67000350040       37    30\n4268 67000350040       38    13\n4269 67000350040       39     8\n4270 67000350040       40     1\n4271 67000350040       41     1\n4272 67000350040       42     2\n4273 67000350040       43     0\n4274 67000350040       44     0\n4275 67000350040       45     1\n4276 67000350040       46     1\n4277 67000350040       47     0\n4278 67000350040       48     1\n4279 67000350040       49     0\n4280 67000350040       50     0\n4281 67000350041       31     7\n4282 67000350041       32    11\n4283 67000350041       33     5\n4284 67000350041       34    23\n4285 67000350041       35    34\n4286 67000350041       36    38\n4287 67000350041       37    34\n4288 67000350041       38    21\n4289 67000350041       39    12\n4290 67000350041       40     9\n4291 67000350041       41     5\n4292 67000350041       42     3\n4293 67000350041       43     3\n4294 67000350041       44     3\n4295 67000350041       45     1\n4296 67000350041       46     0\n4297 67000350041       47     0\n4298 67000350041       48     1\n4299 67000350041       49     1\n4300 67000350041       50     0\n4301 67000350042       31     3\n4302 67000350042       32     9\n4303 67000350042       33    15\n4304 67000350042       34    33\n4305 67000350042       35    37\n4306 67000350042       36    35\n4307 67000350042       37    34\n4308 67000350042       38    20\n4309 67000350042       39    18\n4310 67000350042       40    14\n4311 67000350042       41    14\n4312 67000350042       42     1\n4313 67000350042       43     2\n4314 67000350042       44     4\n4315 67000350042       45     2\n4316 67000350042       46     0\n4317 67000350042       47     0\n4318 67000350042       48     1\n4319 67000350042       49     0\n4320 67000350042       50     0\n4321 67000350043       31     9\n4322 67000350043       32     8\n4323 67000350043       33     9\n4324 67000350043       34    11\n4325 67000350043       35    15\n4326 67000350043       36    30\n4327 67000350043       37    22\n4328 67000350043       38    14\n4329 67000350043       39    16\n4330 67000350043       40    11\n4331 67000350043       41     7\n4332 67000350043       42     5\n4333 67000350043       43     6\n4334 67000350043       44     3\n4335 67000350043       45     2\n4336 67000350043       46     1\n4337 67000350043       47     0\n4338 67000350043       48     0\n4339 67000350043       49     0\n4340 67000350043       50     0\n4341 67000350044       31     0\n4342 67000350044       32     2\n4343 67000350044       33     1\n4344 67000350044       34     4\n4345 67000350044       35     5\n4346 67000350044       36    13\n4347 67000350044       37    12\n4348 67000350044       38     5\n4349 67000350044       39     5\n4350 67000350044       40     4\n4351 67000350044       41     7\n4352 67000350044       42     6\n4353 67000350044       43    18\n4354 67000350044       44     5\n4355 67000350044       45     6\n4356 67000350044       46     1\n4357 67000350044       47     2\n4358 67000350044       48     0\n4359 67000350044       49     0\n4360 67000350044       50     1\n4361 67000350045       31     0\n4362 67000350045       32     1\n4363 67000350045       33     3\n4364 67000350045       34     5\n4365 67000350045       35     5\n4366 67000350045       36    13\n4367 67000350045       37    29\n4368 67000350045       38    23\n4369 67000350045       39     7\n4370 67000350045       40    15\n4371 67000350045       41     7\n4372 67000350045       42     0\n4373 67000350045       43     2\n4374 67000350045       44     6\n4375 67000350045       45     1\n4376 67000350045       46     2\n4377 67000350045       47     0\n4378 67000350045       48     1\n4379 67000350045       49     0\n4380 67000350045       50     0\n4381 67000350046       31     1\n4382 67000350046       32     6\n4383 67000350046       33     1\n4384 67000350046       34    11\n4385 67000350046       35    15\n4386 67000350046       36    30\n4387 67000350046       37    12\n4388 67000350046       38    20\n4389 67000350046       39    17\n4390 67000350046       40    21\n4391 67000350046       41     8\n4392 67000350046       42     7\n4393 67000350046       43     7\n4394 67000350046       44     5\n4395 67000350046       45     4\n4396 67000350046       46     0\n4397 67000350046       47     0\n4398 67000350046       48     2\n4399 67000350046       49     0\n4400 67000350046       50     0\n4401 67000350047       31     0\n4402 67000350047       32     0\n4403 67000350047       33     0\n4404 67000350047       34     0\n4405 67000350047       35     3\n4406 67000350047       36     5\n4407 67000350047       37     1\n4408 67000350047       38     1\n4409 67000350047       39     2\n4410 67000350047       40     2\n4411 67000350047       41     0\n4412 67000350047       42     1\n4413 67000350047       43     3\n4414 67000350047       44     1\n4415 67000350047       45     2\n4416 67000350047       46     1\n4417 67000350047       47     2\n4418 67000350047       48     1\n4419 67000350047       49     0\n4420 67000350047       50     0\n4421 67000350048       31     0\n4422 67000350048       32     0\n4423 67000350048       33     0\n4424 67000350048       34     2\n4425 67000350048       35     1\n4426 67000350048       36     1\n4427 67000350048       37     1\n4428 67000350048       38     2\n4429 67000350048       39     0\n4430 67000350048       40     2\n4431 67000350048       41     1\n4432 67000350048       42     1\n4433 67000350048       43     1\n4434 67000350048       44     0\n4435 67000350048       45     0\n4436 67000350048       46     0\n4437 67000350048       47     0\n4438 67000350048       48     0\n4439 67000350048       49     0\n4440 67000350048       50     0\n4441 67000350049       31     0\n4442 67000350049       32     3\n4443 67000350049       33     4\n4444 67000350049       34    18\n4445 67000350049       35    15\n4446 67000350049       36    18\n4447 67000350049       37    17\n4448 67000350049       38     9\n4449 67000350049       39    11\n4450 67000350049       40     7\n4451 67000350049       41     4\n4452 67000350049       42     1\n4453 67000350049       43     1\n4454 67000350049       44     2\n4455 67000350049       45     2\n4456 67000350049       46     0\n4457 67000350049       47     0\n4458 67000350049       48     0\n4459 67000350049       49     0\n4460 67000350049       50     0\n4461 67000350050       31     1\n4462 67000350050       32    10\n4463 67000350050       33    11\n4464 67000350050       34    31\n4465 67000350050       35    34\n4466 67000350050       36    58\n4467 67000350050       37    49\n4468 67000350050       38    27\n4469 67000350050       39    22\n4470 67000350050       40    12\n4471 67000350050       41    16\n4472 67000350050       42    17\n4473 67000350050       43     8\n4474 67000350050       44    13\n4475 67000350050       45     1\n4476 67000350050       46     1\n4477 67000350050       47     0\n4478 67000350050       48     0\n4479 67000350050       49     0\n4480 67000350050       50     0\n4481 67000350051       31     0\n4482 67000350051       32     1\n4483 67000350051       33     1\n4484 67000350051       34    10\n4485 67000350051       35    13\n4486 67000350051       36    18\n4487 67000350051       37    12\n4488 67000350051       38    26\n4489 67000350051       39    10\n4490 67000350051       40    11\n4491 67000350051       41     6\n4492 67000350051       42     5\n4493 67000350051       43    13\n4494 67000350051       44     6\n4495 67000350051       45     7\n4496 67000350051       46     4\n4497 67000350051       47     0\n4498 67000350051       48     2\n4499 67000350051       49     0\n4500 67000350051       50     0\n4501 67000360002       31     0\n4502 67000360002       32     0\n4503 67000360002       33     0\n4504 67000360002       34     0\n4505 67000360002       35     0\n4506 67000360002       36     6\n4507 67000360002       37     1\n4508 67000360002       38     1\n4509 67000360002       39     3\n4510 67000360002       40     4\n4511 67000360002       41     2\n4512 67000360002       42     1\n4513 67000360002       43     1\n4514 67000360002       44     5\n4515 67000360002       45     3\n4516 67000360002       46     0\n4517 67000360002       47     0\n4518 67000360002       48     0\n4519 67000360002       49     0\n4520 67000360002       50     0\n4521 67000360004       31     0\n4522 67000360004       32     0\n4523 67000360004       33     0\n4524 67000360004       34     0\n4525 67000360004       35     0\n4526 67000360004       36     0\n4527 67000360004       37     1\n4528 67000360004       38     0\n4529 67000360004       39     0\n4530 67000360004       40     0\n4531 67000360004       41     0\n4532 67000360004       42     0\n4533 67000360004       43     1\n4534 67000360004       44     0\n4535 67000360004       45     0\n4536 67000360004       46     1\n4537 67000360004       47     0\n4538 67000360004       48     0\n4539 67000360004       49     0\n4540 67000360004       50     0\n4541 67000360005       31     0\n4542 67000360005       32     1\n4543 67000360005       33     0\n4544 67000360005       34     2\n4545 67000360005       35     1\n4546 67000360005       36     3\n4547 67000360005       37     2\n4548 67000360005       38     4\n4549 67000360005       39     8\n4550 67000360005       40    11\n4551 67000360005       41     6\n4552 67000360005       42     5\n4553 67000360005       43     3\n4554 67000360005       44     8\n4555 67000360005       45     2\n4556 67000360005       46     1\n4557 67000360005       47     1\n4558 67000360005       48     1\n4559 67000360005       49     0\n4560 67000360005       50     0\n4561 67000360006       31     0\n4562 67000360006       32     0\n4563 67000360006       33     1\n4564 67000360006       34     0\n4565 67000360006       35     1\n4566 67000360006       36     1\n4567 67000360006       37     4\n4568 67000360006       38     2\n4569 67000360006       39     7\n4570 67000360006       40     5\n4571 67000360006       41     6\n4572 67000360006       42     9\n4573 67000360006       43     2\n4574 67000360006       44     4\n4575 67000360006       45     5\n4576 67000360006       46     1\n4577 67000360006       47     2\n4578 67000360006       48     1\n4579 67000360006       49     4\n4580 67000360006       50     0\n4581 67000360007       31     0\n4582 67000360007       32     0\n4583 67000360007       33     0\n4584 67000360007       34     0\n4585 67000360007       35     3\n4586 67000360007       36     6\n4587 67000360007       37     2\n4588 67000360007       38     2\n4589 67000360007       39     9\n4590 67000360007       40     5\n4591 67000360007       41     4\n4592 67000360007       42     7\n4593 67000360007       43     7\n4594 67000360007       44     3\n4595 67000360007       45     9\n4596 67000360007       46     3\n4597 67000360007       47     1\n4598 67000360007       48     1\n4599 67000360007       49     1\n4600 67000360007       50     0\n4601 67000360008       31     0\n4602 67000360008       32     0\n4603 67000360008       33     0\n4604 67000360008       34     3\n4605 67000360008       35     5\n4606 67000360008       36     3\n4607 67000360008       37     2\n4608 67000360008       38     7\n4609 67000360008       39    15\n4610 67000360008       40    14\n4611 67000360008       41     9\n4612 67000360008       42     5\n4613 67000360008       43     4\n4614 67000360008       44     4\n4615 67000360008       45     3\n4616 67000360008       46     1\n4617 67000360008       47     0\n4618 67000360008       48     0\n4619 67000360008       49     0\n4620 67000360008       50     0\n4621 67000360009       31     0\n4622 67000360009       32     0\n4623 67000360009       33     1\n4624 67000360009       34     0\n4625 67000360009       35     3\n4626 67000360009       36     4\n4627 67000360009       37     4\n4628 67000360009       38     4\n4629 67000360009       39     9\n4630 67000360009       40    17\n4631 67000360009       41    13\n4632 67000360009       42     7\n4633 67000360009       43     4\n4634 67000360009       44     3\n4635 67000360009       45     3\n4636 67000360009       46     1\n4637 67000360009       47     0\n4638 67000360009       48     1\n4639 67000360009       49     0\n4640 67000360009       50     0\n4641 67000360010       31     1\n4642 67000360010       32     1\n4643 67000360010       33     1\n4644 67000360010       34     2\n4645 67000360010       35     5\n4646 67000360010       36     5\n4647 67000360010       37     3\n4648 67000360010       38     5\n4649 67000360010       39     8\n4650 67000360010       40     6\n4651 67000360010       41     6\n4652 67000360010       42     7\n4653 67000360010       43     3\n4654 67000360010       44     5\n4655 67000360010       45     2\n4656 67000360010       46     0\n4657 67000360010       47     0\n4658 67000360010       48     0\n4659 67000360010       49     1\n4660 67000360010       50     0\n4661 67000360011       31     0\n4662 67000360011       32     0\n4663 67000360011       33     1\n4664 67000360011       34     1\n4665 67000360011       35     3\n4666 67000360011       36     8\n4667 67000360011       37     5\n4668 67000360011       38     9\n4669 67000360011       39    14\n4670 67000360011       40     9\n4671 67000360011       41     3\n4672 67000360011       42     6\n4673 67000360011       43     7\n4674 67000360011       44     6\n4675 67000360011       45     1\n4676 67000360011       46     3\n4677 67000360011       47     1\n4678 67000360011       48     1\n4679 67000360011       49     1\n4680 67000360011       50     0\n4681 67000360012       31     1\n4682 67000360012       32     0\n4683 67000360012       33     0\n4684 67000360012       34     0\n4685 67000360012       35     2\n4686 67000360012       36     1\n4687 67000360012       37     5\n4688 67000360012       38     2\n4689 67000360012       39     4\n4690 67000360012       40     7\n4691 67000360012       41     3\n4692 67000360012       42     0\n4693 67000360012       43     0\n4694 67000360012       44     2\n4695 67000360012       45     1\n4696 67000360012       46     0\n4697 67000360012       47     0\n4698 67000360012       48     0\n4699 67000360012       49     0\n4700 67000360012       50     0\n4701 67000360015       31     3\n4702 67000360015       32     2\n4703 67000360015       33     7\n4704 67000360015       34     1\n4705 67000360015       35     5\n4706 67000360015       36     7\n4707 67000360015       37     7\n4708 67000360015       38     2\n4709 67000360015       39     3\n4710 67000360015       40     2\n4711 67000360015       41     0\n4712 67000360015       42     4\n4713 67000360015       43     2\n4714 67000360015       44     6\n4715 67000360015       45     1\n4716 67000360015       46     2\n4717 67000360015       47     0\n4718 67000360015       48     1\n4719 67000360015       49     0\n4720 67000360015       50     0\n4721 67000360016       31     0\n4722 67000360016       32     0\n4723 67000360016       33     0\n4724 67000360016       34     2\n4725 67000360016       35     2\n4726 67000360016       36     6\n4727 67000360016       37    19\n4728 67000360016       38    25\n4729 67000360016       39    11\n4730 67000360016       40    22\n4731 67000360016       41     5\n4732 67000360016       42    10\n4733 67000360016       43     5\n4734 67000360016       44     8\n4735 67000360016       45     5\n4736 67000360016       46     2\n4737 67000360016       47     2\n4738 67000360016       48     1\n4739 67000360016       49     0\n4740 67000360016       50     0\n4741 67000360017       31     0\n4742 67000360017       32     1\n4743 67000360017       33     0\n4744 67000360017       34     0\n4745 67000360017       35     0\n4746 67000360017       36     0\n4747 67000360017       37     2\n4748 67000360017       38     3\n4749 67000360017       39    12\n4750 67000360017       40     1\n4751 67000360017       41     2\n4752 67000360017       42     2\n4753 67000360017       43     4\n4754 67000360017       44     3\n4755 67000360017       45     2\n4756 67000360017       46     0\n4757 67000360017       47     3\n4758 67000360017       48     1\n4759 67000360017       49     0\n4760 67000360017       50     0\n4761 67000370005       31     0\n4762 67000370005       32     0\n4763 67000370005       33     0\n4764 67000370005       34     0\n4765 67000370005       35     4\n4766 67000370005       36     1\n4767 67000370005       37     4\n4768 67000370005       38     5\n4769 67000370005       39    15\n4770 67000370005       40    16\n4771 67000370005       41     9\n4772 67000370005       42    10\n4773 67000370005       43     5\n4774 67000370005       44    11\n4775 67000370005       45     9\n4776 67000370005       46     9\n4777 67000370005       47     5\n4778 67000370005       48     4\n4779 67000370005       49     4\n4780 67000370005       50     0\n4781 67000370007       31     0\n4782 67000370007       32     1\n4783 67000370007       33     2\n4784 67000370007       34     1\n4785 67000370007       35     1\n4786 67000370007       36     1\n4787 67000370007       37     1\n4788 67000370007       38     2\n4789 67000370007       39     6\n4790 67000370007       40     4\n4791 67000370007       41     4\n4792 67000370007       42     0\n4793 67000370007       43     3\n4794 67000370007       44     1\n4795 67000370007       45     3\n4796 67000370007       46     1\n4797 67000370007       47     0\n4798 67000370007       48     0\n4799 67000370007       49     0\n4800 67000370007       50     1\n4801 67000370009       31     0\n4802 67000370009       32     1\n4803 67000370009       33     0\n4804 67000370009       34     1\n4805 67000370009       35     1\n4806 67000370009       36     2\n4807 67000370009       37     1\n4808 67000370009       38     2\n4809 67000370009       39     6\n4810 67000370009       40     3\n4811 67000370009       41     5\n4812 67000370009       42     1\n4813 67000370009       43     6\n4814 67000370009       44     2\n4815 67000370009       45     1\n4816 67000370009       46     3\n4817 67000370009       47     1\n4818 67000370009       48     0\n4819 67000370009       49     1\n4820 67000370009       50     1\n4821 67000370011       31     0\n4822 67000370011       32     0\n4823 67000370011       33     0\n4824 67000370011       34     0\n4825 67000370011       35     1\n4826 67000370011       36     6\n4827 67000370011       37     2\n4828 67000370011       38     8\n4829 67000370011       39     4\n4830 67000370011       40    11\n4831 67000370011       41    12\n4832 67000370011       42    10\n4833 67000370011       43     5\n4834 67000370011       44     5\n4835 67000370011       45     5\n4836 67000370011       46     0\n4837 67000370011       47     0\n4838 67000370011       48     1\n4839 67000370011       49     0\n4840 67000370011       50     0\n4841 67000370016       31     0\n4842 67000370016       32     0\n4843 67000370016       33     0\n4844 67000370016       34     1\n4845 67000370016       35     1\n4846 67000370016       36     3\n4847 67000370016       37     2\n4848 67000370016       38    16\n4849 67000370016       39    10\n4850 67000370016       40    14\n4851 67000370016       41     5\n4852 67000370016       42     6\n4853 67000370016       43     4\n4854 67000370016       44     3\n4855 67000370016       45     4\n4856 67000370016       46     3\n4857 67000370016       47     2\n4858 67000370016       48     1\n4859 67000370016       49     1\n4860 67000370016       50     0\n4861 67000370022       31     0\n4862 67000370022       32     0\n4863 67000370022       33     1\n4864 67000370022       34     1\n4865 67000370022       35     8\n4866 67000370022       36     4\n4867 67000370022       37    10\n4868 67000370022       38    14\n4869 67000370022       39    23\n4870 67000370022       40    29\n4871 67000370022       41    15\n4872 67000370022       42     6\n4873 67000370022       43     3\n4874 67000370022       44     6\n4875 67000370022       45     6\n4876 67000370022       46     3\n4877 67000370022       47     0\n4878 67000370022       48     0\n4879 67000370022       49     1\n4880 67000370022       50     0\n4881 67000370025       31     2\n4882 67000370025       32     2\n4883 67000370025       33     2\n4884 67000370025       34     2\n4885 67000370025       35     7\n4886 67000370025       36    17\n4887 67000370025       37    11\n4888 67000370025       38    12\n4889 67000370025       39    10\n4890 67000370025       40     3\n4891 67000370025       41     1\n4892 67000370025       42     1\n4893 67000370025       43     4\n4894 67000370025       44     2\n4895 67000370025       45     2\n4896 67000370025       46     2\n4897 67000370025       47     0\n4898 67000370025       48     1\n4899 67000370025       49     1\n4900 67000370025       50     0\n4901 67000370031       31     0\n4902 67000370031       32     0\n4903 67000370031       33     0\n4904 67000370031       34     1\n4905 67000370031       35     3\n4906 67000370031       36     3\n4907 67000370031       37     5\n4908 67000370031       38     4\n4909 67000370031       39     2\n4910 67000370031       40     4\n4911 67000370031       41     1\n4912 67000370031       42     2\n4913 67000370031       43     1\n4914 67000370031       44     2\n4915 67000370031       45     0\n4916 67000370031       46     3\n4917 67000370031       47     1\n4918 67000370031       48     1\n4919 67000370031       49     0\n4920 67000370031       50     0\n4921 67000370033       31     0\n4922 67000370033       32     2\n4923 67000370033       33     1\n4924 67000370033       34     0\n4925 67000370033       35     5\n4926 67000370033       36     4\n4927 67000370033       37     9\n4928 67000370033       38     6\n4929 67000370033       39     6\n4930 67000370033       40     6\n4931 67000370033       41    10\n4932 67000370033       42     9\n4933 67000370033       43     3\n4934 67000370033       44     6\n4935 67000370033       45     3\n4936 67000370033       46     2\n4937 67000370033       47     4\n4938 67000370033       48     0\n4939 67000370033       49     0\n4940 67000370033       50     2\n4941 67000370034       31     2\n4942 67000370034       32     1\n4943 67000370034       33     1\n4944 67000370034       34     2\n4945 67000370034       35     1\n4946 67000370034       36     3\n4947 67000370034       37     4\n4948 67000370034       38     5\n4949 67000370034       39     5\n4950 67000370034       40     7\n4951 67000370034       41     5\n4952 67000370034       42     2\n4953 67000370034       43     5\n4954 67000370034       44     4\n4955 67000370034       45     4\n4956 67000370034       46     3\n4957 67000370034       47     3\n4958 67000370034       48     0\n4959 67000370034       49     0\n4960 67000370034       50     0\n4961 67000370039       31     0\n4962 67000370039       32     1\n4963 67000370039       33     1\n4964 67000370039       34     1\n4965 67000370039       35     6\n4966 67000370039       36     6\n4967 67000370039       37     9\n4968 67000370039       38    10\n4969 67000370039       39    12\n4970 67000370039       40    10\n4971 67000370039       41     5\n4972 67000370039       42     7\n4973 67000370039       43     7\n4974 67000370039       44     4\n4975 67000370039       45     3\n4976 67000370039       46     0\n4977 67000370039       47     1\n4978 67000370039       48     0\n4979 67000370039       49     0\n4980 67000370039       50     0\n4981 67000370040       31     0\n4982 67000370040       32     0\n4983 67000370040       33     0\n4984 67000370040       34     2\n4985 67000370040       35     4\n4986 67000370040       36     5\n4987 67000370040       37     5\n4988 67000370040       38     7\n4989 67000370040       39     3\n4990 67000370040       40     7\n4991 67000370040       41    13\n4992 67000370040       42    14\n4993 67000370040       43     3\n4994 67000370040       44    11\n4995 67000370040       45     7\n4996 67000370040       46     1\n4997 67000370040       47     2\n4998 67000370040       48     1\n4999 67000370040       49     1\n5000 67000370040       50     0\n5001 67000370041       31     0\n5002 67000370041       32     0\n5003 67000370041       33     3\n5004 67000370041       34     0\n5005 67000370041       35     2\n5006 67000370041       36     7\n5007 67000370041       37     4\n5008 67000370041       38     4\n5009 67000370041       39     1\n5010 67000370041       40    10\n5011 67000370041       41     6\n5012 67000370041       42    10\n5013 67000370041       43     5\n5014 67000370041       44     3\n5015 67000370041       45     4\n5016 67000370041       46     0\n5017 67000370041       47     0\n5018 67000370041       48     0\n5019 67000370041       49     0\n5020 67000370041       50     0\n5021 67000370042       31     1\n5022 67000370042       32     0\n5023 67000370042       33     2\n5024 67000370042       34     2\n5025 67000370042       35     6\n5026 67000370042       36     9\n5027 67000370042       37     6\n5028 67000370042       38     4\n5029 67000370042       39     9\n5030 67000370042       40     5\n5031 67000370042       41     8\n5032 67000370042       42    11\n5033 67000370042       43    12\n5034 67000370042       44     8\n5035 67000370042       45     6\n5036 67000370042       46     6\n5037 67000370042       47     1\n5038 67000370042       48     0\n5039 67000370042       49     4\n5040 67000370042       50     1\n5041 67000370043       31     0\n5042 67000370043       32     0\n5043 67000370043       33     2\n5044 67000370043       34     1\n5045 67000370043       35     1\n5046 67000370043       36     6\n5047 67000370043       37     7\n5048 67000370043       38     5\n5049 67000370043       39     5\n5050 67000370043       40     8\n5051 67000370043       41     6\n5052 67000370043       42     6\n5053 67000370043       43     4\n5054 67000370043       44     7\n5055 67000370043       45     2\n5056 67000370043       46     3\n5057 67000370043       47     1\n5058 67000370043       48     1\n5059 67000370043       49     1\n5060 67000370043       50     1\n5061 67000370044       31     1\n5062 67000370044       32     1\n5063 67000370044       33     0\n5064 67000370044       34     1\n5065 67000370044       35     3\n5066 67000370044       36    14\n5067 67000370044       37    15\n5068 67000370044       38    15\n5069 67000370044       39    24\n5070 67000370044       40     9\n5071 67000370044       41     7\n5072 67000370044       42    13\n5073 67000370044       43     3\n5074 67000370044       44     5\n5075 67000370044       45     4\n5076 67000370044       46     0\n5077 67000370044       47     0\n5078 67000370044       48     1\n5079 67000370044       49     1\n5080 67000370044       50     1\n5081 67000370045       31     1\n5082 67000370045       32     0\n5083 67000370045       33     0\n5084 67000370045       34     3\n5085 67000370045       35     8\n5086 67000370045       36     9\n5087 67000370045       37     8\n5088 67000370045       38     8\n5089 67000370045       39    16\n5090 67000370045       40     6\n5091 67000370045       41     5\n5092 67000370045       42     5\n5093 67000370045       43     5\n5094 67000370045       44     3\n5095 67000370045       45     4\n5096 67000370045       46     1\n5097 67000370045       47     0\n5098 67000370045       48     1\n5099 67000370045       49     0\n5100 67000370045       50     0\n5101 67000370046       31     0\n5102 67000370046       32     0\n5103 67000370046       33     0\n5104 67000370046       34     1\n5105 67000370046       35     2\n5106 67000370046       36     1\n5107 67000370046       37     7\n5108 67000370046       38     3\n5109 67000370046       39     6\n5110 67000370046       40     7\n5111 67000370046       41     2\n5112 67000370046       42     4\n5113 67000370046       43     1\n5114 67000370046       44     1\n5115 67000370046       45     2\n5116 67000370046       46     2\n5117 67000370046       47     2\n5118 67000370046       48     1\n5119 67000370046       49     1\n5120 67000370046       50     1\n5121 67000370047       31     0\n5122 67000370047       32     0\n5123 67000370047       33     0\n5124 67000370047       34     0\n5125 67000370047       35     1\n5126 67000370047       36     0\n5127 67000370047       37     5\n5128 67000370047       38     5\n5129 67000370047       39    10\n5130 67000370047       40     7\n5131 67000370047       41     4\n5132 67000370047       42     5\n5133 67000370047       43     6\n5134 67000370047       44     2\n5135 67000370047       45     6\n5136 67000370047       46     3\n5137 67000370047       47     1\n5138 67000370047       48     1\n5139 67000370047       49     0\n5140 67000370047       50     0\n5141 67000370048       31     0\n5142 67000370048       32     1\n5143 67000370048       33     1\n5144 67000370048       34     1\n5145 67000370048       35    11\n5146 67000370048       36    11\n5147 67000370048       37     9\n5148 67000370048       38    12\n5149 67000370048       39    21\n5150 67000370048       40     7\n5151 67000370048       41     7\n5152 67000370048       42     6\n5153 67000370048       43     4\n5154 67000370048       44     5\n5155 67000370048       45     3\n5156 67000370048       46     1\n5157 67000370048       47     1\n5158 67000370048       48     1\n5159 67000370048       49     0\n5160 67000370048       50     0\n\n\n\nwrite_rds(spt, \"data/rds/spt.rds\")\n\nIf data is full of landmines, the NA value remaining partially throughout the process was a dirty needle. It doesn’t hurt much now, but it might mess me up in the long run."
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx2/data/geospatial/TAINAN_VILLAGE.html",
    "href": "TakeHomeEx/TakeHomeEx2/data/geospatial/TAINAN_VILLAGE.html",
    "title": "Matt's IS415 Experience",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“TWD97”,DATUM[“Taiwan Datum 1997”,ELLIPSOID[“GRS 1980”,6378137,298.257222101,LENGTHUNIT[“metre”,1]]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“Taiwan, Republic of China - onshore and offshore - Taiwan Island, Penghu (Pescadores) Islands.”],BBOX[17.36,114.32,26.96,123.61]],ID[“EPSG”,3824]] +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs 27230 3824 EPSG:3824 TWD97 longlat EPSG:7019 true"
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx2/THE2.html#eda",
    "href": "TakeHomeEx/TakeHomeEx2/THE2.html#eda",
    "title": "Take-Home Exercise 1",
    "section": "3.0 EDA",
    "text": "3.0 EDA\n\nset.seed(42)\n# tmap_options(check.and.fix = TRUE)\n\n\n3.1 Global Spatial Autocorrelation\nSee 36 &lt;=\n\n# plot(dengue_vils_gb_ew)\n\nInspired by\nhttps://jenpoer-is415-gaa-exercises.netlify.app/take-home-exercises/exe-02/the2#exploratory-data-analysis-eda-with-choropleth-maps\n\nchoropleth_map_small_multiples &lt;- function(df, varname, facet, colors) {\n  tm_shape(df) +\n    tm_polygons(col='white') +\n  tm_shape(df) +\n    tm_polygons(varname,\n            palette = colors,\n            style=\"quantile\") +\n    tm_facets(by=facet, free.coords = FALSE)\n}\n\n\nchoropleth_map_small_multiples(dengue_vils_gb_vc_epi, \"count\", \"epi_week\", \"Blues\")\n\n\n\n\n\n\n\n\n\nwm_q.nb &lt;- st_contiguity(dengue_vils_gb_vc$geometry)\nwm_q.wt &lt;- st_weights(wm_q.nb, style = \"W\")\nwm_q.count &lt;- dengue_vils_gb_vc$count\n\n\nglobal_moran_test(wm_q.count,\n           wm_q.nb,\n           wm_q.wt,\n           zero.policy = TRUE,\n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 12.86887810884, p-value &lt;\n2.220446049e-16\nalternative hypothesis: greater\nsample estimates:\n   Moran I statistic          Expectation             Variance \n 0.46837064728942229 -0.00389105058365759  0.00134674097418125 \n\n\n\nmoran_mc_res = global_moran_perm(wm_q.count,\n                wm_q.nb,\n                wm_q.wt,\n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nmoran_mc_res\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.4683706472894, observed rank = 1000, p-value &lt;\n2.220446049e-16\nalternative hypothesis: two.sided\n\n\n\nsummary(moran_mc_res$res[1:999])\n\n             Min.           1st Qu.            Median              Mean \n-0.12593421750369 -0.02920753745445 -0.00280234297906 -0.00340573808086 \n          3rd Qu.              Max. \n 0.01981358192142  0.10977414083941 \n\n\n\nvar(moran_mc_res$res[1:999])\n\n[1] 0.00140296676313142\n\n\n\nggplot() + \n  aes(moran_mc_res$res[1:999]) + \n  geom_histogram(colour=\"black\", fill=\"pink\") + \n  labs(title = \"Histogram of Simulated Moran's I For Tainan City Dengue Cases\",\n       x = \"Simulated Moran's I\",\n       y = \"Occurences\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n# MI_corr &lt;- sp.correlogram(dv_total_wm_q, \n#                           dengue_vils_gb_vc$count, \n#                           order=8, \n#                           method=\"I\", \n#                           style=\"W\")\n# plot(MI_corr)\n# print(MI_corr)\n\n\n\nLocal\n\nwm_q.lisa &lt;- local_moran(wm_q.count, wm_q.nb, wm_q.wt)\ndengue_vils_gb_vc &lt;- cbind(dengue_vils_gb_vc, wm_q.lisa)\n\n\np_val_2_cats &lt;- function(x) {\n  if (x &lt; 0.005) {\n    return(\"p &lt; 0.005\")\n  } else if (x &lt; 0.01) {\n    return(\"p &lt; 0.01\")\n  } else if (x &lt; 0.05) {\n    return(\"p &lt; 0.05\")\n  } else {\n    return(\"p &gt; 0.05\")\n  }\n}\n\ndengue_vils_gb_vc &lt;- dengue_vils_gb_vc %&gt;%\n  mutate(p_values = sapply(p_ii, p_val_2_cats))\n\n\ntm_shape(dengue_vils_gb_vc) +\n  tm_fill(col = \"ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5) + \n  \ntm_shape(dengue_vils_gb_vc[dengue_vils_gb_vc$p_values != \"p &gt; 0.05\", ]) +\n  tm_symbols(col = \"p_values\",\n             title.shape = \"P Values:\",\n             shapes.labels = c(\"p &lt; 0.05\", \"p &lt; 0.01\", \"p &lt; 0.005\"),\n             size = 0.1,\n             palette=c('purple', 'hotpink', 'white'))\n\n\n\n\n\n\n\n\n\nlisa_sig &lt;- dengue_vils_gb_vc  %&gt;%\n  filter(p_ii &lt; 0.05)\ntmap_mode(\"plot\")\n\ntm_shape(dengue_vils_gb_vc) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)\n\n\n\n\n\n\n\n\n\n\nHot and Cold"
  }
]