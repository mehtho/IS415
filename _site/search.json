[
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html",
    "title": "Take-Home Exercise 1",
    "section": "",
    "text": "Using appropriate function of sf and tidyverse, preparing the following geospatial data layer in sf tibble data.frames:\n\n\nGrab taxi location points either by origins or destinations.\nRoad layer within Singapore excluding outer islands.\nSingapore boundary layer excluding outer islands\n\n\nUsing the extracted data, derive traditional Kernel Density Estimation layers.\nUsing the extracted data, derive either Network Kernel Density Estimation (NKDE) or Temporal Network Kernel Density Estimation (TNKDE) Using appropriate tmap functions, display the kernel density layers on openstreetmap of Singapore.\nDescribe the spatial patterns revealed by the kernel density maps.\n\n\n\n\n\nThis exercise seems quite straightforward, but I think that some genuinely useful information can be derived from this data. While removing the outer islands can be done fairly easily, I think that other small issues, like holes in the geometry will need to be fixed.\nNKDE may also require very long computation times for large areas, especially given the magnitude of the entire dataset. The GrabPosisi dataset’s journey start and destination locations likely occur along smaller roads where people can walk. These small roads are likely near other small roads, which will greatly increase the number of affect lixels for every NKDE operation. Since these small roads will have the most interesting data, I will have to scale down my analysis to smaller locations determined by the simpler KDE analysis."
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#overview",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#overview",
    "title": "Take-Home Exercise 1",
    "section": "",
    "text": "Using appropriate function of sf and tidyverse, preparing the following geospatial data layer in sf tibble data.frames:\n\n\nGrab taxi location points either by origins or destinations.\nRoad layer within Singapore excluding outer islands.\nSingapore boundary layer excluding outer islands\n\n\nUsing the extracted data, derive traditional Kernel Density Estimation layers.\nUsing the extracted data, derive either Network Kernel Density Estimation (NKDE) or Temporal Network Kernel Density Estimation (TNKDE) Using appropriate tmap functions, display the kernel density layers on openstreetmap of Singapore.\nDescribe the spatial patterns revealed by the kernel density maps.\n\n\n\n\n\nThis exercise seems quite straightforward, but I think that some genuinely useful information can be derived from this data. While removing the outer islands can be done fairly easily, I think that other small issues, like holes in the geometry will need to be fixed.\nNKDE may also require very long computation times for large areas, especially given the magnitude of the entire dataset. The GrabPosisi dataset’s journey start and destination locations likely occur along smaller roads where people can walk. These small roads are likely near other small roads, which will greatly increase the number of affect lixels for every NKDE operation. Since these small roads will have the most interesting data, I will have to scale down my analysis to smaller locations determined by the simpler KDE analysis."
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#setup",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#setup",
    "title": "Take-Home Exercise 1",
    "section": "2.0 Setup",
    "text": "2.0 Setup\n\n2.1 Dependencies\nAside from the tools used in class, I also included some additional tools I found useful.\n\nTaught in class:\n\nTidyverse: An extensive set of tools for geospatial analysis, a staple for most tasks\nsf: I also cannot imagine a geospatial task without simple features\ntmap: Used to generate thematic maps\nmaptools: Used to handle spatial objects\nspatstat: Just recently used in the hands-on exercises for this week. Useful for spatial point analysis\nspNetwork: For spatial analysis on networks, we’ll use this for NKDE and TNKDE\nclassInt: For choosing univariate class intervals\nviridis: COLORS! These will help us create more interesting and colorful maps to communicate our ideas\narrow: We need this to work with parquet files and to load the GrabPosisi dataset\n\n\n\nExploration\n\nstringr: The Description field in kml files is not very convenient for us. It’s an HTML table, meaning we need to parse it to get each variable into a column compatible for our use\nsmoothr: The MPSZ2019 polygons have small holes, so I use this library to fix them before they cause issues\n\n\npacman::p_load(tidyverse, sf, tmap, maptools, spatstat, spNetwork, classInt, viridis, smoothr, arrow, stringr, RColorBrewer, gifski)\n\n\n\n\n2.2 Datasets\n\nAspatial data\n\nGrab-Posisi Singapore dataset\n\n\n\nGeospatial data\n\nRoad data set from Geofabrik’s OpenStreetMap.\n\n\nAlthough the dataset includes all of Malaysia, Singapore, and Brunei, only Singapore’s data will required.\n\n\nMaster Plan 2019 Subzone Boundary (No Sea) from Data.gov.sg."
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#data-wrangling",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#data-wrangling",
    "title": "Take-Home Exercise 1",
    "section": "3.0 Data Wrangling",
    "text": "3.0 Data Wrangling\n\n3.1 Importing Aspatial Data\n\nReading the Grab-Posisi Parquet Files\nI’m glad this function from the arrow library exists to load every split parquet file instead of having to loop and append each file to a single object.\n\ngrabp &lt;- open_dataset(\"data/aspatial/GrabPosisi/\") %&gt;% as.data.frame()\n\n\n\n\n3.2 Importing Spatial Data\n\nReading the Master Plan Subzone dataset\nUsing st_read is a standard way to import the data in kml files, but there’s a very apparent problem.\nThe description field, when not rendered, is a monstrous chunk of HTML where none of the fields are easy to use. We’ll need to split this up so that we can scope down our analysis later to interesting areas. There are no public roads in the jungle after all.\n\nmpsz = st_read(\"data/geospatial/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/TakeHomeEx/TakeHomeEx1/data/geospatial/MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nmpsz$Description[1]\n\n[1] \"&lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\\\"#E3E3F3\\\"&gt; &lt;th&gt;SUBZONE_NO&lt;/th&gt; &lt;td&gt;12&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\\\"\\\"&gt; &lt;th&gt;SUBZONE_N&lt;/th&gt; &lt;td&gt;DEPOT ROAD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\\\"#E3E3F3\\\"&gt; &lt;th&gt;SUBZONE_C&lt;/th&gt; &lt;td&gt;BMSZ12&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\\\"\\\"&gt; &lt;th&gt;CA_IND&lt;/th&gt; &lt;td&gt;N&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\\\"#E3E3F3\\\"&gt; &lt;th&gt;PLN_AREA_N&lt;/th&gt; &lt;td&gt;BUKIT MERAH&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\\\"\\\"&gt; &lt;th&gt;PLN_AREA_C&lt;/th&gt; &lt;td&gt;BM&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\\\"#E3E3F3\\\"&gt; &lt;th&gt;REGION_N&lt;/th&gt; &lt;td&gt;CENTRAL REGION&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\\\"\\\"&gt; &lt;th&gt;REGION_C&lt;/th&gt; &lt;td&gt;CR&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\\\"#E3E3F3\\\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;C22DED671DE2A940&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\\\"\\\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20191223152313&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\"\n\n\nI found a concise and performant solution here to parse this mess of HTML.\nhttps://www.linkedin.com/pulse/r-using-stringr-extract-information-from-html-tags-kml-melvin-kew/\n\nmpsz &lt;- mpsz %&gt;% \n  mutate(Match=str_match_all(Description,\"&lt;td&gt;(.*?)&lt;/td&gt;\")) %&gt;% \n  mutate(Match=map(Match, ~ .[,2])) %&gt;% \n  mutate(Match=map(Match,setNames,c(\"SUBZONE_NO\",\"SUBZONE_N\",\"SUBZONE_C\", \"CA_IND\", \"PLN_AREA_N\", \"PLN_AREA_C\", \"REGION_N\", \"REGION_C\", \"INC_CRC\", \"FMEL_UPD_D\"))) %&gt;% \n  unnest_wider(Match) %&gt;%\n  st_as_sf()\n\nAfter splitting the description into columns, I can drop the Description and other fields I will not be using. Although the planning areas should suffice, having region and subzone names available does not consume a lot of memory and may be useful later on.\n\nsummary(mpsz)\n\n     Name           Description                  geometry    SUBZONE_NO       \n Length:332         Length:332         MULTIPOLYGON  : 11   Length:332        \n Class :character   Class :character   MULTIPOLYGON Z:321   Class :character  \n Mode  :character   Mode  :character   epsg:4326     :  0   Mode  :character  \n                                       +proj=long... :  0                     \n  SUBZONE_N          SUBZONE_C            CA_IND           PLN_AREA_N       \n Length:332         Length:332         Length:332         Length:332        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n  PLN_AREA_C          REGION_N           REGION_C           INC_CRC         \n Length:332         Length:332         Length:332         Length:332        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n  FMEL_UPD_D       \n Length:332        \n Class :character  \n Mode  :character  \n                   \n\nmpsz &lt;- mpsz %&gt;% dplyr::select('Name', 'geometry', 'SUBZONE_NO', 'SUBZONE_N', 'PLN_AREA_N', 'PLN_AREA_C', 'REGION_N', 'REGION_C')\nsummary(mpsz)\n\n     Name                     geometry    SUBZONE_NO         SUBZONE_N        \n Length:332         MULTIPOLYGON  : 11   Length:332         Length:332        \n Class :character   MULTIPOLYGON Z:321   Class :character   Class :character  \n Mode  :character   epsg:4326     :  0   Mode  :character   Mode  :character  \n                    +proj=long... :  0                                        \n  PLN_AREA_N         PLN_AREA_C          REGION_N           REGION_C        \n Length:332         Length:332         Length:332         Length:332        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n\n\n\nlength(which(st_is_valid(mpsz) == FALSE))\n\n[1] 6\n\nmpsz[which(st_is_valid(mpsz) == FALSE), ]\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.7098 ymin: 1.212326 xmax: 104.0885 ymax: 1.440698\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n# A tibble: 6 × 8\n  Name                       geometry SUBZONE_NO SUBZONE_N PLN_AREA_N PLN_AREA_C\n  &lt;chr&gt;            &lt;MULTIPOLYGON [°]&gt; &lt;chr&gt;      &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;     \n1 kml_30  (((103.8591 1.22068, 103.8… 2          SOUTHERN… SOUTHERN … SI        \n2 kml_31  (((103.8232 1.257481, 103.… 1          SENTOSA   SOUTHERN … SI        \n3 kml_35  Z (((103.8236 1.260178 0, … 1          MARITIME… BUKIT MER… BM        \n4 kml_59  Z (((103.9321 1.305548 0, … 7          SIGLAP    BEDOK      BD        \n5 kml_109 (((103.7119 1.29961, 103.7… 10         JURONG P… JURONG EA… JE        \n6 kml_318 (((104.0541 1.432306, 104.… 1          NORTH-EA… NORTH-EAS… NE        \n# ℹ 2 more variables: REGION_N &lt;chr&gt;, REGION_C &lt;chr&gt;\n\nmpsz &lt;- st_make_valid(mpsz)\nmpsz &lt;- st_zm(mpsz)\n\n\n\nImporting the OpenStreetMaps dataset\n\nosm = st_read(\"data/geospatial/osm.shp.zip\", layer=\"gis_osm_roads_free_1\")\n\nReading layer `gis_osm_roads_free_1' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/TakeHomeEx/TakeHomeEx1/data/geospatial/osm.shp.zip' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1763129 features and 10 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 99.66041 ymin: 0.8021131 xmax: 119.2601 ymax: 7.514393\nGeodetic CRS:  WGS 84\n\n\n\n\n\n3.2 Wrangling\n\nGrabPosisi conversion to spatial data\nThe GrabPosisi dataset consists of many points for each journey, represented with latitudes and longitudes. There are also many other fields representing speed and direction of the vehicle. We only need to know about the start and end locations.\n\nhead(grabp)\n\n# A tibble: 6 × 9\n  trj_id driving_mode osname  pingtimestamp rawlat rawlng speed bearing accuracy\n  &lt;chr&gt;  &lt;chr&gt;        &lt;chr&gt;           &lt;int&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;   &lt;int&gt;    &lt;dbl&gt;\n1 70014  car          android    1554943236   1.34   104.  18.9     248      3.9\n2 73573  car          android    1555582623   1.32   104.  17.7      44      4  \n3 75567  car          android    1555141026   1.33   104.  14.0      34      3.9\n4 1410   car          android    1555731693   1.26   104.  13.0     181      4  \n5 4354   car          android    1555584497   1.28   104.  14.8      93      3.9\n6 32630  car          android    1555395258   1.30   104.  23.2      73      3.9\n\n\nThe easiest thing to fix first is the timestamp. Doing so will allow us to find the first and last points of a journey easily. We also need to make sure that we account for timezones properly here, since the timestamps written as a time since the epoch.\n\ngrabp$pingtimestamp &lt;- as_datetime(grabp$pingtimestamp, tz = \"Asia/Singapore\")\n\nNow we convert the timestamp into weekdays, hours and days. This will help us temporally constrain our data later on.\nWe also convert the latitudes and longitudes to the SVY21 CRS system to give our task a standardised projection system.\n\norigin_df &lt;- grabp %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(pingtimestamp) %&gt;%\n  filter(row_number()==1) %&gt;%\n  mutate(weekday = wday(pingtimestamp,\n                        label=TRUE,\n                        abbr=TRUE),\n         start_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp))) %&gt;%\n  st_as_sf(coords = c(\"rawlng\", \"rawlat\"),\n                      crs = 4326) %&gt;%\n  st_transform(crs = 3414)\n\ndestination_df &lt;- grabp %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(desc(pingtimestamp)) %&gt;%\n  filter(row_number()==1) %&gt;%\n  mutate(weekday = wday(pingtimestamp,\n                        label=TRUE,\n                        abbr=TRUE),\n         end_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp))) %&gt;%\n  st_as_sf(coords = c(\"rawlng\", \"rawlat\"),\n                      crs = 4326) %&gt;%\n  st_transform(crs = 3414)\n\nhead(origin_df)\n\nSimple feature collection with 6 features and 10 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 17201.85 ymin: 29236.55 xmax: 31518.05 ymax: 47967.97\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 11\n# Groups:   trj_id [6]\n  trj_id driving_mode osname pingtimestamp        speed bearing accuracy weekday\n  &lt;chr&gt;  &lt;chr&gt;        &lt;chr&gt;  &lt;dttm&gt;               &lt;dbl&gt;   &lt;int&gt;    &lt;dbl&gt; &lt;ord&gt;  \n1 70895  car          andro… 2019-04-08 08:09:26  9.95      111      4   Mon    \n2 21926  car          andro… 2019-04-08 08:09:48 11.0        75      4   Mon    \n3 47498  car          ios    2019-04-08 08:09:50 18.6       307      8   Mon    \n4 18103  car          andro… 2019-04-08 08:09:55  0.404     159      3   Mon    \n5 41322  car          andro… 2019-04-08 08:09:57 17.9       232      3.9 Mon    \n6 64813  car          ios    2019-04-08 08:10:03 17.1       106     10   Mon    \n# ℹ 3 more variables: start_hr &lt;fct&gt;, day &lt;fct&gt;, geometry &lt;POINT [m]&gt;\n\nhead(destination_df)\n\nSimple feature collection with 6 features and 10 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14101.2 ymin: 33097.49 xmax: 44192.98 ymax: 46866.96\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 11\n# Groups:   trj_id [6]\n  trj_id driving_mode osname  pingtimestamp       speed bearing accuracy weekday\n  &lt;chr&gt;  &lt;chr&gt;        &lt;chr&gt;   &lt;dttm&gt;              &lt;dbl&gt;   &lt;int&gt;    &lt;dbl&gt; &lt;ord&gt;  \n1 81574  car          ios     2019-04-22 07:56:49 15.3      103     8    Mon    \n2 54687  car          android 2019-04-22 07:56:46  8.15     299     4.55 Mon    \n3 17190  car          android 2019-04-22 07:56:36 12.4      202     4    Mon    \n4 13793  car          android 2019-04-22 07:56:30  6.47     170     3.9  Mon    \n5 39014  car          ios     2019-04-22 07:56:27  3.59     169     4    Mon    \n6 41170  car          ios     2019-04-22 07:56:13 13.1       71     5    Mon    \n# ℹ 3 more variables: end_hr &lt;fct&gt;, day &lt;fct&gt;, geometry &lt;POINT [m]&gt;\n\n\nAfter converting some of our data and reducing it to only the trip starts and ends, we can drop the unused columns.\n\norigin_df &lt;- origin_df %&gt;% dplyr::select('trj_id', 'pingtimestamp', 'geometry', 'weekday', 'start_hr', 'day', 'geometry')\ndestination_df &lt;- destination_df %&gt;% dplyr::select('trj_id', 'pingtimestamp', 'geometry', 'weekday', 'end_hr', 'day', 'geometry')\n\nThis was a massive task in terms of computer memory. To make sure we don’t have to do this again, we can save the objects into .rds files. I would consider this an advantage over using Python.\n\nwrite_rds(origin_df, \"data/rds/origin.rds\")\nwrite_rds(destination_df, \"data/rds/destination.rds\")\n\n\ndestination_df &lt;- read_rds(\"data/rds/destination.rds\")\norigin_df &lt;- read_rds(\"data/rds/origin.rds\")\n\n\n\nOpenStreetMaps reduction\nThere were many of ‘fclass’ values on the OpenStreetMaps documentation and I was not sure all of them existed in our dataset. It turns out that although there were more than expected, I can ‘whitelist’ some those that are definitely roads.\nI found out about what each class meant from their documentation. https://www.geofabrik.de/data/geofabrik-osm-gis-standard-0.3.pdf\nThis was great since I had no idea what a Bridleway was.\n\nsummary(osm)\n\n    osm_id               code         fclass              name          \n Length:1763129     Min.   :5111   Length:1763129     Length:1763129    \n Class :character   1st Qu.:5122   Class :character   Class :character  \n Mode  :character   Median :5141   Mode  :character   Mode  :character  \n                    Mean   :5132                                        \n                    3rd Qu.:5141                                        \n                    Max.   :5199                                        \n     ref               oneway             maxspeed           layer         \n Length:1763129     Length:1763129     Min.   :  0.000   Min.   :-5.00000  \n Class :character   Class :character   1st Qu.:  0.000   1st Qu.: 0.00000  \n Mode  :character   Mode  :character   Median :  0.000   Median : 0.00000  \n                                       Mean   :  3.148   Mean   : 0.02991  \n                                       3rd Qu.:  0.000   3rd Qu.: 0.00000  \n                                       Max.   :110.000   Max.   : 5.00000  \n    bridge             tunnel                   geometry      \n Length:1763129     Length:1763129     LINESTRING   :1763129  \n Class :character   Class :character   epsg:4326    :      0  \n Mode  :character   Mode  :character   +proj=long...:      0  \n                                                              \n                                                              \n                                                              \n\nunique(osm$fclass)\n\n [1] \"primary\"        \"secondary\"      \"residential\"    \"service\"       \n [5] \"track\"          \"tertiary\"       \"footway\"        \"primary_link\"  \n [9] \"motorway_link\"  \"tertiary_link\"  \"motorway\"       \"unclassified\"  \n[13] \"trunk\"          \"trunk_link\"     \"secondary_link\" \"pedestrian\"    \n[17] \"living_street\"  \"path\"           \"steps\"          \"cycleway\"      \n[21] \"track_grade2\"   \"track_grade4\"   \"track_grade1\"   \"track_grade3\"  \n[25] \"unknown\"        \"track_grade5\"   \"bridleway\"     \n\n\nOf the above fclasses, these ones are definitely roads. We will keep them in our dataset.\n\nvalues_to_keep &lt;- c(\"primary\", \"secondary\", \"residential\", \"service\", \"tertiary\", \"primary_link\", \"motorway\", \"motorway_link\", \"tertiary_link\", \"living_street\", \"trunk\", \"trunk_link\")\n\nosm &lt;- osm[osm$fclass %in% values_to_keep, ]\n\nFrom this, we have confirmed that we have dropped the unnecessary fclasses and greatly reduced the size of our data. However, to geographically constrain this dataset to Singapore, we need to process the MasterPlanSubzone data.\n\nsummary(osm)\n\n    osm_id               code         fclass              name          \n Length:1417871     Min.   :5111   Length:1417871     Length:1417871    \n Class :character   1st Qu.:5122   Class :character   Class :character  \n Mode  :character   Median :5132   Mode  :character   Mode  :character  \n                    Mean   :5131                                        \n                    3rd Qu.:5141                                        \n                    Max.   :5141                                        \n     ref               oneway             maxspeed           layer         \n Length:1417871     Length:1417871     Min.   :  0.000   Min.   :-5.00000  \n Class :character   Class :character   1st Qu.:  0.000   1st Qu.: 0.00000  \n Mode  :character   Mode  :character   Median :  0.000   Median : 0.00000  \n                                       Mean   :  3.665   Mean   : 0.02351  \n                                       3rd Qu.:  0.000   3rd Qu.: 0.00000  \n                                       Max.   :110.000   Max.   : 5.00000  \n    bridge             tunnel                   geometry      \n Length:1417871     Length:1417871     LINESTRING   :1417871  \n Class :character   Class :character   epsg:4326    :      0  \n Mode  :character   Mode  :character   +proj=long...:      0  \n                                                              \n                                                              \n                                                              \n\nunique(osm$fclass)\n\n [1] \"primary\"       \"secondary\"     \"residential\"   \"service\"      \n [5] \"tertiary\"      \"primary_link\"  \"motorway_link\" \"tertiary_link\"\n [9] \"motorway\"      \"trunk\"         \"trunk_link\"    \"living_street\"\n\n\nFor our purposes, the road data will only need to serve as a network, without all of the extra data. However, osm_id fclass may be useful later on and are relatively small. We can keep them.\n\nosm &lt;- osm %&gt;% dplyr::select('osm_id', 'fclass')\n\n\n\n\n3.3 CRS Adjustments and Verification\n\nOpenStreetMaps and MasterPlanSubzone CRS\nIt’s now time to go a bit deeper with the data wrangling now that the size of our data has decreased. First thing to do is to check the CRS for the MPSZ and OpenStreetMaps data since we have not already done so.\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\nst_crs(osm)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\nLike in the previous exercises, the CRS for these are not SVY21. We will change them since GovTech is yet to do so.\n\nosm &lt;- st_transform(osm, crs = 3414)\nmpsz &lt;- st_transform(mpsz, crs = 3414)\n\n\n\nDealing with MPSZ z-coordinates and invalid geometry\nTo prevent issues with invalid geometry causing issues later on, we can apply a quick fix here.\n\nlength(which(st_is_valid(mpsz) == FALSE))\n\n[1] 0\n\nmpsz[which(st_is_valid(mpsz) == FALSE), ]\n\nSimple feature collection with 0 features and 7 fields\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 0 × 8\n# ℹ 8 variables: Name &lt;chr&gt;, geometry &lt;GEOMETRY [m]&gt;, SUBZONE_NO &lt;chr&gt;,\n#   SUBZONE_N &lt;chr&gt;, PLN_AREA_N &lt;chr&gt;, PLN_AREA_C &lt;chr&gt;, REGION_N &lt;chr&gt;,\n#   REGION_C &lt;chr&gt;\n\nmpsz &lt;- st_make_valid(mpsz)\nmpsz &lt;- st_zm(mpsz)\n\nA quick check confirms that the CRS has been changed successfully to SVY21\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nst_crs(osm)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n\n3.4 Singapore Boundaries\nFrom this plot, I realised that there were more islands than I thought surrounding Singapore.\n\nplot(st_geometry(mpsz))\n\n\n\n\n\n\n\n\nBased on the above plot, it became apparent that I needed to define what an “Outer Island” meant in relation to our task.\n\nOuter Island Definition\nAn island in Singapore inaccessible by road\nTherefore, Coney Island, Jurong Island and Sentosa are not outer islands.\nPulau Ubin and Pulau Tekong are examples of outer islands.\nTo remove the islands, I discovered a trick. After using st_union, st_cast can be used to split disconnected polygons in the larger multipolygon. I then choose the largest one (the mainland). Fortunately, the bridges to Serangoon island were enough to stick the whole of road-accessible Singapore together while excluding areas like Tekong.\nWe can also use fill_holes to remove any gaps in geometry.\nAfter this process, we are left with a clean outline of Singapore!\n\n\nOuter Island Removal and Hole Fixing\n\nOriginalMerged\n\n\n\nmerged_sg &lt;- st_union(mpsz) %&gt;%\n    st_cast(\"POLYGON\")\n\nmerged_sg &lt;- merged_sg[c(10)]\nmerged_sg &lt;- fill_holes(merged_sg, units::set_units(1, \"km^2\"))\nmerged_sg &lt;- st_as_sf(merged_sg)\npar(mfrow=c(1,2))\n\nplot(st_geometry(mpsz))\n\n\n\n\n\n\n\n\n\n\n\nplot(st_geometry(merged_sg))\n\n\n\n\n\n\n\n\n\n\n\n\n\nApplying the outline\nWith the outline, we can create an owin object to constrain our ppp objects later for KDE! We will save it to save us processing time later on.\n\nmerged_st &lt;- as_Spatial(merged_sg)\nmerged_sg_sp &lt;- as(merged_st, \"SpatialPolygons\")\nmerged_sg_owin &lt;- as(merged_sg_sp, \"owin\")\n\nwrite_rds(merged_sg_owin, \"data/rds/merged_sg_owin.rds\")\n\n\nmerged_sg_owin &lt;- read_rds(\"data/rds/merged_sg_owin.rds\")\n\nNow we use the outline to remove the massive amount of data on Malaysian and Bruneian roads.\n\nosm_sg &lt;- st_intersection(osm, merged_sg)\n\nAn unexpected complication found here was that some geometry in OpenStreetMaps was saved as MULTILINESTRINGs. While this would be intuitive sometimes, it caused issues with KDE calculation. Here, I split each MULTILNESTRING into several LINESTRINGs.\nAfter this processing, I save the result\n\nsummary(osm_sg)\n\n    osm_id             fclass                     geometry     \n Length:157777      Length:157777      LINESTRING     :157720  \n Class :character   Class :character   MULTILINESTRING:    57  \n Mode  :character   Mode  :character   epsg:3414      :     0  \n                                       +proj=tmer...  :     0  \n\nosm_sg &lt;- st_cast(st_cast(osm_sg, \"MULTILINESTRING\"),\"LINESTRING\")\nsummary(osm_sg)\n\n    osm_id             fclass                   geometry     \n Length:157836      Length:157836      LINESTRING   :157836  \n Class :character   Class :character   epsg:3414    :     0  \n Mode  :character   Mode  :character   +proj=tmer...:     0  \n\nwrite_rds(osm_sg, \"data/rds/osm_sg.rds\")\n\n\nosm_sg &lt;- read_rds(\"data/rds/osm_sg.rds\")\n\n\n\nppp Format\nTo prepare our the data on trip starts and ends, we convert them into ppp objects.\n\norigin &lt;- as_Spatial(origin_df)\ndestination &lt;- as_Spatial(destination_df)\n\norigin_sp &lt;- as(origin, \"SpatialPoints\")\ndestination_sp &lt;- as(destination, \"SpatialPoints\")\n\norigin_ppp &lt;- as(origin_sp, \"ppp\")\ndestination_ppp &lt;- as(destination_sp, \"ppp\")\n\nUsing our previously prepared owin objects, we can constrain these points to only Singapore, in case any of the data was strangely placed outside of our borders.\nThis happened for 3 destinations.\n\nsummary(destination_ppp)\n\nPlanar point pattern:  28000 points\nAverage intensity 2.493661e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [3637.21, 49870.63] x [25221.3, 49507.79] units\n                    (46230 x 24290 units)\nWindow area = 1122850000 square units\n\n\n\norigin_ppp &lt;- origin_ppp[merged_sg_owin]\ndestination_ppp &lt;- destination_ppp[merged_sg_owin]\n\n\nsummary(destination_ppp)\n\nPlanar point pattern:  27997 points\nAverage intensity 3.99481e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: polygonal boundary\nsingle connected closed polygon with 15268 vertices\nenclosing rectangle: [2667.54, 51404.13] x [21448.48, 50256.33] units\n                     (48740 x 28810 units)\nWindow area = 700834000 square units\nFraction of frame area: 0.499\n\n\n\n\nChecking for duplicates\nFortunately, no duplicates were detected in our dataset.\n\nany(duplicated(origin_ppp))\n\n[1] FALSE\n\nany(duplicated(destination_ppp))\n\n[1] FALSE\n\n\n\n\n\n3.5 Simple Visualisations\nFrom these plots, we can tell that naive methods of checking for patterns in spatial points does not work very well with large datasets. This is when we use KDE.\n\nplot(origin_ppp)\n\n\n\n\n\n\n\nplot(destination_ppp)"
  },
  {
    "objectID": "InClassEx/ICE2/ICE2.html#setup",
    "href": "InClassEx/ICE2/ICE2.html#setup",
    "title": "In-Class Exercise 2",
    "section": "2.0 Setup",
    "text": "2.0 Setup\n\n2.1 Dependencies\n\narrow\nlubridate\ntidyverse\ntmap\nsf\n\n\npacman::p_load(arrow, lubridate, tidyverse, sf, tmap)\n\n\n\n2.2 Importing Data\n\nRead the first parquet files\n\n# eval: FALSE - Show the code without evaluating\ndf &lt;- read_parquet(\"data/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\n\n\n\nImport Master Plan 2019 Planning Subzone Boundary\n\nmpsz2019 &lt;- st_read(\"data/dataGov/MPSZ2019.kml\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/InClassEx/ICE2/data/dataGov/MPSZ2019.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\n\n\n2.3 Data Wrangling\n\nConvert the ping timestamp to datetime\nas_datetime is a lubridate function. Replace the column with the reformatted version.\nlubridate helps to handle datetime data.\n\ndf$pingtimestamp &lt;- as_datetime(df$pingtimestamp)\n\n\n\nWrite the parquet data to rds\n\nwrite_rds(df, \"data/rds/part0.rds\")\n\n\n\nCheck the dataframe\n\nhead(df)\n\n# A tibble: 6 × 9\n  trj_id driving_mode osname  pingtimestamp       rawlat rawlng speed bearing\n  &lt;chr&gt;  &lt;chr&gt;        &lt;chr&gt;   &lt;dttm&gt;               &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;   &lt;int&gt;\n1 70014  car          android 2019-04-11 00:40:36   1.34   104.  18.9     248\n2 73573  car          android 2019-04-18 10:17:03   1.32   104.  17.7      44\n3 75567  car          android 2019-04-13 07:37:06   1.33   104.  14.0      34\n4 1410   car          android 2019-04-20 03:41:33   1.26   104.  13.0     181\n5 4354   car          android 2019-04-18 10:48:17   1.28   104.  14.8      93\n6 32630  car          android 2019-04-16 06:14:18   1.30   104.  23.2      73\n# ℹ 1 more variable: accuracy &lt;dbl&gt;\n\n\n\n\nExtract trip-start locations (Origins)\ntrj_id is a duplicated field, referring to the trip. Group by trip. sort by time stamp Filter out the origin in the first row Use mutate to create new columns\n\norigin_df &lt;- df %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(pingtimestamp) %&gt;%\n  filter(row_number()==1) %&gt;%\n  mutate(weekday = wday(pingtimestamp,\n                        label=TRUE,\n                        abbr=TRUE),\n         start_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp)))\n\n\n\nExtract trip-end locations (Destinations)\nSame as above, but use desc(pingtimestamp) to take the largest (end)\n\ndestination_df &lt;- df %&gt;%\n  group_by(trj_id) %&gt;%\n  arrange(desc(pingtimestamp)) %&gt;%\n  filter(row_number()==1) %&gt;%\n  mutate(weekday = wday(pingtimestamp,\n                        label=TRUE,\n                        abbr=TRUE),\n         end_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp)))\n\n\n\nImportant: Saving data, saving memory\nDataframes are large and the raw ones have many entries. Save the intermediate dataframes.\n\n# #|eval: FALSE - Show the code without evaluating\n# #|echo: false - Code will not appear to the reader\nwrite_rds(destination_df, \"data/rds/destination_df.rds\")\nwrite_rds(origin_df, \"data/rds/origin_df.rds\")\n\n\n\nReimporting data\nThe old files are no longer needed, but we can keep it to show our process.\n\ndestination_df &lt;- read_rds(\"data/rds/destination_df.rds\")\norigin_df &lt;- read_rds(\"data/rds/origin_df.rds\")"
  },
  {
    "objectID": "HandsOnEx/HE1/HE1.html",
    "href": "HandsOnEx/HE1/HE1.html",
    "title": "Hands-On Exercise 1: Geospatial Data Science with R",
    "section": "",
    "text": "In this exercise, I learn to handle geospatial data files and some basic data science tasks with sf.\nUse pacman::p_load to install and load sf and tidyverse"
  },
  {
    "objectID": "HandsOnEx/HE1/HE1.html#overview",
    "href": "HandsOnEx/HE1/HE1.html#overview",
    "title": "Hands-On Exercise 1: Geospatial Data Science with R",
    "section": "",
    "text": "In this exercise, I learn to handle geospatial data files and some basic data science tasks with sf.\nUse pacman::p_load to install and load sf and tidyverse"
  },
  {
    "objectID": "HandsOnEx/HE1/HE1.html#setup",
    "href": "HandsOnEx/HE1/HE1.html#setup",
    "title": "Hands-On Exercise 1: Geospatial Data Science with R",
    "section": "2.0 Setup",
    "text": "2.0 Setup\n\n2.1 Requirements\n\nsf: Simple features access for R. Includes importing, managing and processing data.\ntidyverse: A set of R packages for data science, which includes visualisation\n\n\n\n2.2 Data\n\nMaster Plan 2014 Subzone Boundary (Web) from data.gov.sg\nPre-Schools Location from data.gov.sg\nCycling Path from LTADataMall\nLatest version of Singapore Airbnb listing data from Inside Airbnb\n\n\n\n2.3 Importing Data and Packages\n\nPacman to import sf and tidyverse\n\npacman::p_load(sf, tidyverse)\n\n\n\n\nOpen and import Shapefiles\nst_read to open and import the shapefile.\n\nPath to shapefile\nShapefile without the file extension\n\n\nmpsz = st_read(dsn = \"data/geospatial\", \n               layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/HandsOnEx/HE1/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\ncyclingpath = st_read(dsn = \"data/geospatial\", layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/HandsOnEx/HE1/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2558 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\npreschool = st_read(\"data/geospatial/PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/HandsOnEx/HE1/data/geospatial/PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "HandsOnEx/HE1/HE1.html#basic-content-checking-methods",
    "href": "HandsOnEx/HE1/HE1.html#basic-content-checking-methods",
    "title": "Hands-On Exercise 1: Geospatial Data Science with R",
    "section": "3.0 Basic Content Checking Methods",
    "text": "3.0 Basic Content Checking Methods\n\n3.1 Checking the Contents of Simple Feature Data Frames\n\nst_geometry\nst_geometry prints basic info on the feature class\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((31495.56 30140.01, 31980.96 296...\n\n\nMULTIPOLYGON (((29092.28 30021.89, 29119.64 300...\n\n\nMULTIPOLYGON (((29932.33 29879.12, 29947.32 298...\n\n\nMULTIPOLYGON (((27131.28 30059.73, 27088.33 297...\n\n\nMULTIPOLYGON (((26451.03 30396.46, 26440.47 303...\n\n\n\n\n\nglimpse\nglimpse shows the associated attribute info\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\n\n\n\nhead\nhead shows complete info on feature object\n\nhead(mpsz, n=5)  \n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n\n\n\n\n\nplot\nplot a multi-plot of all attributes (default for sf object)\n\nplot(mpsz, max.plot = 15)\n\n\n\n\n\n\n\n\n\nPlot just one\n\nplot(mpsz[\"PLN_AREA_N\"])\n\n\n\n\n\n\n\n\n\nPlot just the geometry\n\nplot(st_geometry(mpsz))\n\n\n\n\n\n\n\n\n\n\n\n\n3.2 Coordinate Reference Systems\n\nCoordinate Reference System Transformation\nShow the EPSG code of simple feature data frame (See last, CS, section). It is 9001.\nCRS: Coordinate Reference System\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\nChange it to SVY21 (3414)\nSVY21: Projected coordinate system for Singapore, a CRS\n\nmpsz3414 &lt;- st_transform(mpsz, 3414)\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\npreschool3414 &lt;- st_transform(preschool, crs = 3414)\nst_crs(preschool3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\nAspatial data: not geospatial data.\n\nlistings &lt;- read_csv(\"data/aspatial/listings.csv\")\n\nRows: 3457 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (6): name, host_name, neighbourhood_group, neighbourhood, room_type, l...\ndbl  (11): id, host_id, latitude, longitude, price, minimum_nights, number_o...\ndate  (1): last_review\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nlist(listings) \n\n[[1]]\n# A tibble: 3,457 × 18\n       id name      host_id host_name neighbourhood_group neighbourhood latitude\n    &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;               &lt;chr&gt;            &lt;dbl&gt;\n 1  71609 Villa in…  367042 Belinda   East Region         Tampines          1.35\n 2  71896 Home in …  367042 Belinda   East Region         Tampines          1.35\n 3  71903 Home in …  367042 Belinda   East Region         Tampines          1.35\n 4 275343 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 5 275344 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 6 289234 Home in …  367042 Belinda   East Region         Tampines          1.34\n 7 294281 Rental u… 1521514 Elizabeth Central Region      Newton            1.31\n 8 324945 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 9 330095 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n10 369141 Place to… 1521514 Elizabeth Central Region      Newton            1.31\n# ℹ 3,447 more rows\n# ℹ 11 more variables: longitude &lt;dbl&gt;, room_type &lt;chr&gt;, price &lt;dbl&gt;,\n#   minimum_nights &lt;dbl&gt;, number_of_reviews &lt;dbl&gt;, last_review &lt;date&gt;,\n#   reviews_per_month &lt;dbl&gt;, calculated_host_listings_count &lt;dbl&gt;,\n#   availability_365 &lt;dbl&gt;, number_of_reviews_ltm &lt;dbl&gt;, license &lt;chr&gt;\n\n\n\nConvert the longitude and latitude columns from WGS84 to SVY21.\n\nlistings_sf &lt;- st_as_sf(listings, \n                        coords = c(\"longitude\", \"latitude\"),\n                        crs=4326) %&gt;%\n  st_transform(crs = 3414)\n\nglimpse(listings_sf)\n\nRows: 3,457\nColumns: 17\n$ id                             &lt;dbl&gt; 71609, 71896, 71903, 275343, 275344, 28…\n$ name                           &lt;chr&gt; \"Villa in Singapore · ★4.44 · 2 bedroom…\n$ host_id                        &lt;dbl&gt; 367042, 367042, 367042, 1439258, 143925…\n$ host_name                      &lt;chr&gt; \"Belinda\", \"Belinda\", \"Belinda\", \"Kay\",…\n$ neighbourhood_group            &lt;chr&gt; \"East Region\", \"East Region\", \"East Reg…\n$ neighbourhood                  &lt;chr&gt; \"Tampines\", \"Tampines\", \"Tampines\", \"Bu…\n$ room_type                      &lt;chr&gt; \"Private room\", \"Private room\", \"Privat…\n$ price                          &lt;dbl&gt; 150, 80, 80, 64, 78, 220, 85, 75, 69, 7…\n$ minimum_nights                 &lt;dbl&gt; 92, 92, 92, 60, 60, 92, 92, 60, 60, 92,…\n$ number_of_reviews              &lt;dbl&gt; 19, 24, 46, 20, 16, 12, 131, 17, 5, 81,…\n$ last_review                    &lt;date&gt; 2020-01-17, 2019-10-13, 2020-01-09, 20…\n$ reviews_per_month              &lt;dbl&gt; 0.13, 0.16, 0.30, 0.15, 0.11, 0.09, 0.9…\n$ calculated_host_listings_count &lt;dbl&gt; 5, 5, 5, 51, 51, 5, 7, 51, 51, 7, 7, 1,…\n$ availability_365               &lt;dbl&gt; 55, 91, 91, 183, 183, 54, 365, 183, 183…\n$ number_of_reviews_ltm          &lt;dbl&gt; 0, 0, 0, 0, 3, 0, 0, 1, 2, 0, 0, 0, 0, …\n$ license                        &lt;chr&gt; NA, NA, NA, \"S0399\", \"S0399\", NA, NA, \"…\n$ geometry                       &lt;POINT [m]&gt; POINT (41972.5 36390.05), POINT (…"
  },
  {
    "objectID": "HandsOnEx/HE1/HE1.html#basic-geoprocessing-with-sf",
    "href": "HandsOnEx/HE1/HE1.html#basic-geoprocessing-with-sf",
    "title": "Hands-On Exercise 1: Geospatial Data Science with R",
    "section": "4.0 Basic Geoprocessing with sf",
    "text": "4.0 Basic Geoprocessing with sf\n\n4.1 Buffering\nBuffering: Add space along the side of a line, e.g. width of a path + clearance needed\n\n5 Meter buffers\n\n\nbuffer_cycling &lt;- st_buffer(cyclingpath, \n                            dist=5, nQuadSegs = 30)\n\n\nFind the area of the buffers, i.e. see how much space is needed.\n\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\nsum(buffer_cycling$AREA)\n\n1774367 [m^2]\n\n\n\n\n\n4.2 Point in Polygon Count\nPoint in Polygon Count: How many points in a polygon. E.g. count preschools in each zone.\n\nUse st_intersects for this\nNOT st_intersection\n\n\nmpsz3414$`PreSch Count`&lt;- lengths(st_intersects(mpsz3414, preschool3414))\n\n\n\n\n4.3 Summary Statistics\nPrint the summary stats\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n\n\n\n\n\n4.4 top_n\ntop_n to show the rows with the highest values in a column\n\ntop_n(mpsz3414, 3, `PreSch Count`)\n\nSimple feature collection with 3 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 23449.05 ymin: 31880.27 xmax: 42940.57 ymax: 47996.47\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      163          4       ALJUNIED    GLSZ04      N    GEYLANG         GL\n2      189          2  TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n3      290          3 WOODLANDS EAST    WDSZ03      N  WOODLANDS         WD\n        REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR\n1 CENTRAL REGION       CR 83AFAB768B6B2B66 2014-12-05 33592.58 32970.83\n2    EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39\n3   NORTH REGION       NR C90769E43EE6B0F2 2014-12-05 24506.64 46991.63\n  SHAPE_Leng SHAPE_Area                       geometry PreSch Count\n1   7100.699    2959368 MULTIPOLYGON (((34449.13 33...           40\n2  10180.624    4339824 MULTIPOLYGON (((42196.76 38...           72\n3   6603.608    2553464 MULTIPOLYGON (((24786.75 46...           54\n\n\n\n\n\n4.5 mutate\nCalculate area of each subzone and mutate to compute density. Creates a PreSch Density field based on the PreSch Count and Area fields.\n\nmpsz3414$Area &lt;- mpsz3414 %&gt;%\n  st_area()\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)"
  },
  {
    "objectID": "HandsOnEx/HE1/HE1.html#visualisations",
    "href": "HandsOnEx/HE1/HE1.html#visualisations",
    "title": "Hands-On Exercise 1: Geospatial Data Science with R",
    "section": "5.0 Visualisations",
    "text": "5.0 Visualisations\n\n5.1 Default Histograms\nEDA Histogram\n\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\n\n\n\n\n\n\n\n5.2 ggplot2\nggplot2 makes cooler graphics\n\nggplot(data=mpsz3414, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n       x = \"Pre-school density (per km sq)\",\n       y = \"Frequency\")\n\n\n\n\n\n\n\n\n\nScatterplot of pre-school count vs pre-school density\n\nggplot(data=mpsz3414, \n       aes(y = `PreSch Count`, \n           x= as.numeric(`PreSch Density`))) +\n  geom_point(color=\"black\", \n             fill=\"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n       x = \"Pre-school density (per km sq)\",\n       y = \"Pre-school count\")\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "HandsOnEx/HE3/HE3.html",
    "href": "HandsOnEx/HE3/HE3.html",
    "title": "Hands-On Exercise 3: 1st & 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "Exploring spatial point patterns and methods to identify and analyse these patterns. First-order methods include kernel density estimation and bandwidth selection methods while second-order methods include F, G, K and L functions.\n\n\n\n\nSpatial point patterns use points as events.\nWhen dealing with their locations, consider if the points are randomly located or patterned.\nIf these locations are associated with a value, they may follow a marked point pattern (Point patterns with a mark, which is a categorical or numerical label). They may also be random or patterned.\nWhen considering points on a plane, these points can be imagined to occur on an isotropic (Measurement direction does not affect magnitude) plane. (Perfectly flat and homogeneous 2D space).\nIn a set of observed points, they generally follow 3 spatial distributions: Random, Aggregate (Clustered) and Regular (Uniform)\n\\(X = \\{x∈D\\}\\) where D is the study region, or a subset of \\(R^n\\), where n is the dimensions of the Euclidean space, probably 2 in most cases.\nFirst-order analysis of spatial point patterns: Observations vary based on location due to variations in underlying properties\nSecond order analysis of spatial point patterns: Observations vary based on location due to interaction effects between observations\n2 Kinds of First order spatial point patterns analysis techniques\n\nDensity Based\n\nKernel density estimation (KDE)\n\n\\(\\hat{\\lambda}_\\tau(s)=\\frac{1}{\\sigma_\\tau(s)} \\sum_{i=1}^{n} \\frac{1}{\\tau^2}k(\\frac{s-s_i}{\\tau})\\)\n\\(k(\\frac{s-s_i}{\\tau})\\) Is the kernel, which can have different equations for the function k. The above is the uniform kernel.\n\\(\\tau\\) is the bandwidth, or radius\nThe centre is called the “regression point”\nAdaptive bandwidth: Adjust bandwidth (radius) based on data density. i.e shorter for dense, longer for sparse. Can use nearest-neighbour for this\nFixed bandwidth: May produce large variances for sparse data and hide subtle local variation for sparse data. May not be able to calibrate in local areas where data is too sparse.\n\nQuadrat analysis\n\nDivide the study area \\(R\\) into equally-sized subregions. Often but not necessarily square.\nCount events per subregion\nCalculate intensity of events in each region. Intensity is denoted with \\(\\lambda\\), \\(n\\) is the number of events. \\(A\\) is the area of each quadrat. \\(\\lambda=\\frac{n}{A}\\)\nPerform the Complete Spatial Randomness Test (CSR)\nVariance-Mean Ratio (VMR): For uniform, expect close to 0. For random, expect close to 1. For cluster, expect more than 1\nCSR/IRP (independent random process): Any event has equal probability of being in any location [1st order]. Location of an event is indepent of the location of another [2nd order].\nQuadrat weaknesses\n\nSensitive to quadrat size since the number of points will vary.\nMeasure of dispersion rather than pattern\nSingle measure for entire distribution, variation with whole region is not recognised.\n\n\n\nDistance-based\n\nNearest neighbour index\n\nEuclidean distance from a point to nearest neighbour. Expressed as a ratio of observed mean distance to expected mean distance.\n\\(NNI=\\frac{\\bar{d}}{E(\\bar{d})}\\)\n\\(\\bar{d}=\\frac{\\sum_{i=1}^{n}d_i}{n}\\)\n\\(E(\\bar{d})=0.5\\sqrt{\\frac{A}{n}}\\)\nIf index &lt; 1, clustering\nIf index == 1, random\nIf index &gt; 1, Dispersion or competition\nConsider the test statistic Z: \\(Z=\\frac{\\bar{d}-E(\\bar{d})}{Std.error}\\)\nReject the null hypothesis if z-score is large and p-value is smaller than alpha value (0.05)\n\n\n\nDensity based measures:\n\nGlobal density: The density of points in the whole region\nLocal density: Density of points within a subregion\n\nG Function (CDF of NN-Distance)\n\n\\(G(r)=\\frac{|r_{min}(s_i|)&lt;r}{|R|}\\)\nn is the number of points in the study area\nTells us the way events are spaced in a point pattern\nClustered: G increases rapidly over short distance\nEvenness: G increases slow up to the distance where most events are space before increasing rapidly\nEvaluate with simulated confidence envelopes\n\nMonte Carlo simulation test of CSR: A significance test\n\nDo m independent simulations of n events in the study region\nFor every simulated point pattern, estimate \\(G(r)\\) and use 5th and 95th percentiles of the function to define upper and lower simulation envelopes.\nIf the estimated \\(G(r)\\) falls outside these bounds, it is statistically significant\nSimply put: Spray n events m times and calculate \\(G(r)\\). Draw bounds based on the 0.05 and 1-0.05 percentiles and compare to assess the chance of the \\(G(r)\\) being a random coincidence\n\nF Function (Check if clustered or even)\n\nSelect some random point locations within \\(R\\)\nFind min distance from each point to any event in \\(R\\)\n3 Steps\n\nRandomly select m points where \\(m=(p_1,p_2,...,p_n)\\)\nCalculate \\(d_{min}(p_i,s)\\)\nCalculate \\(F(d)\\) where \\(F(d)=\\frac{|d_{min}(p_i,s) &lt; d|}{m}\\)\n\nIf clustered, F(r) rises slowly at first before rising rapidly at longer distances\nIf evenness, F(r) rises rapidly at first then slowly at longer distances\nLike G function, calculate the envelopes and check if it falls outside\n\nK Function (Spatial distribution of a set of points)\n\nConsider the limit of NN distance. It only uses nearest distance.\nK function uses more points\nEstimate of spatial dependence over a wider range\nUses every distance between events in \\(R\\)\nAssumed isotropy (identical values of a property in all directions)\nCalculation\nConstruct circle \\(c\\) of radius \\(h\\) around each point \\(e_i\\)\nCount \\(|e_j|=|{c \\cap e}|\\)\nRepeat previous steps for every \\(e_i \\in e\\)\nSlowly increment \\(h\\) and repeat calculations\n\\(\\hat{K}(h)=\\frac{R}{n^2}\\sum\\sum_{i \\ne j\\frac{I_h(d_{id})}{W_{}ij}}\\)\n\\(R\\) is the area of study area. \\(n\\) is number of points. \\(I_h(d_{id})\\) is a dummy variable, 1 if \\(d_{id}\\le h\\) else 0. \\(W_{ij}\\) is edge correction, the proportionate of the circumference of the circle centered on i containing point j. =1 if the whole circle is within the study area.\nThe K function can be used as a CSR test. Plot \\(K(h)\\) against different \\(h\\) values.\nIf CSR, \\(K(h)=\\pi h^2\\)\n\\(K(h)\\) under low if regular\n\\(K(h)\\) over hi clustered\nConsider envelope for significance, else CSR.\n\nL Function (Alternative to K function. Stabilises variance.)\n\nNormally normalised to get benchmark of 0. \\(L(r)=\\sqrt{\\frac{K(r)}{\\pi}}\\)\nIf \\(L_{obs}\\) above \\(L_{hi}\\) and \\(L_{theo}\\), clustering is statistically significant\nIf \\(L_{hi} &gt; L_{obs} &gt; L_{lo}\\), spatial clustering/dispersion not statistically significant\nIf \\(L_{lo} &gt; L_{obs}\\), spatial dispersion for that distance is statistically significant\n\\(L(r) = \\sqrt{\\frac{K(r)}{\\pi}}-r\\)\n\n\n\n\nConsider the distribution of the points in space and consider if there may be interactions between them.\nThe former is an easier descriptive analysis.\nCSR is useful when there is no obvious regular or clustered pattern.\nF function is the distance from a point to the nearest event. AKA empty space function because it measure the aveage space left between events.\nG function is the distance to the nearest event; distribution of the distances from an event to its nearest other.\nHomogeneous Poisson Process represents a point process where all events are independently and uniformly distributed in its region. Considered stationary and isotropic.\nStationary: Intensity is constant and second-order intensity only depends on direction and distance of 2 points.\nIsotropic: Second order intensity is invariant to rotation.\n\nThe number of events within the area is Poisson distributed with mean \\(\\lambda|A|\\) where \\(lambda\\) is the constant intensity of the point process\nThe \\(n\\) observed events in the region are uniformly distributed\n\nInhomogenous Poisson Process: Non-constant intensity. Described with \\(lambda(x)\\) that varies spatially.\n\n\n\nCaution: Aggregated (Clustered) or dispersed structures can also be obtained with an IPP, where the intensity of the process varies in space.\nRipley’s K function: A cumulative function that gives the average number of points at a distance less than or equal to a radius. Standardised by the process intensity \\(\\frac{n}{|W|}\\), assumed homogeneous.\nCompare \\(\\hat{K}(r)\\) and \\(K_{}pois(r)\\) - Random: = - Aggregate: &gt; - Regular: &lt;\nL Function\nOnly distance-based methods can be used to detect exactly at what distance attraction or dispersion are observable without scale bias in a zone.\nD Function \\(D(r)=K_{cas}(r)-K_{controls}(r)\\) Compare two subpopulation’s distributions"
  },
  {
    "objectID": "HandsOnEx/HE3/HE3.html#overview",
    "href": "HandsOnEx/HE3/HE3.html#overview",
    "title": "Hands-On Exercise 3: 1st & 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "",
    "text": "Exploring spatial point patterns and methods to identify and analyse these patterns. First-order methods include kernel density estimation and bandwidth selection methods while second-order methods include F, G, K and L functions.\n\n\n\n\nSpatial point patterns use points as events.\nWhen dealing with their locations, consider if the points are randomly located or patterned.\nIf these locations are associated with a value, they may follow a marked point pattern (Point patterns with a mark, which is a categorical or numerical label). They may also be random or patterned.\nWhen considering points on a plane, these points can be imagined to occur on an isotropic (Measurement direction does not affect magnitude) plane. (Perfectly flat and homogeneous 2D space).\nIn a set of observed points, they generally follow 3 spatial distributions: Random, Aggregate (Clustered) and Regular (Uniform)\n\\(X = \\{x∈D\\}\\) where D is the study region, or a subset of \\(R^n\\), where n is the dimensions of the Euclidean space, probably 2 in most cases.\nFirst-order analysis of spatial point patterns: Observations vary based on location due to variations in underlying properties\nSecond order analysis of spatial point patterns: Observations vary based on location due to interaction effects between observations\n2 Kinds of First order spatial point patterns analysis techniques\n\nDensity Based\n\nKernel density estimation (KDE)\n\n\\(\\hat{\\lambda}_\\tau(s)=\\frac{1}{\\sigma_\\tau(s)} \\sum_{i=1}^{n} \\frac{1}{\\tau^2}k(\\frac{s-s_i}{\\tau})\\)\n\\(k(\\frac{s-s_i}{\\tau})\\) Is the kernel, which can have different equations for the function k. The above is the uniform kernel.\n\\(\\tau\\) is the bandwidth, or radius\nThe centre is called the “regression point”\nAdaptive bandwidth: Adjust bandwidth (radius) based on data density. i.e shorter for dense, longer for sparse. Can use nearest-neighbour for this\nFixed bandwidth: May produce large variances for sparse data and hide subtle local variation for sparse data. May not be able to calibrate in local areas where data is too sparse.\n\nQuadrat analysis\n\nDivide the study area \\(R\\) into equally-sized subregions. Often but not necessarily square.\nCount events per subregion\nCalculate intensity of events in each region. Intensity is denoted with \\(\\lambda\\), \\(n\\) is the number of events. \\(A\\) is the area of each quadrat. \\(\\lambda=\\frac{n}{A}\\)\nPerform the Complete Spatial Randomness Test (CSR)\nVariance-Mean Ratio (VMR): For uniform, expect close to 0. For random, expect close to 1. For cluster, expect more than 1\nCSR/IRP (independent random process): Any event has equal probability of being in any location [1st order]. Location of an event is indepent of the location of another [2nd order].\nQuadrat weaknesses\n\nSensitive to quadrat size since the number of points will vary.\nMeasure of dispersion rather than pattern\nSingle measure for entire distribution, variation with whole region is not recognised.\n\n\n\nDistance-based\n\nNearest neighbour index\n\nEuclidean distance from a point to nearest neighbour. Expressed as a ratio of observed mean distance to expected mean distance.\n\\(NNI=\\frac{\\bar{d}}{E(\\bar{d})}\\)\n\\(\\bar{d}=\\frac{\\sum_{i=1}^{n}d_i}{n}\\)\n\\(E(\\bar{d})=0.5\\sqrt{\\frac{A}{n}}\\)\nIf index &lt; 1, clustering\nIf index == 1, random\nIf index &gt; 1, Dispersion or competition\nConsider the test statistic Z: \\(Z=\\frac{\\bar{d}-E(\\bar{d})}{Std.error}\\)\nReject the null hypothesis if z-score is large and p-value is smaller than alpha value (0.05)\n\n\n\nDensity based measures:\n\nGlobal density: The density of points in the whole region\nLocal density: Density of points within a subregion\n\nG Function (CDF of NN-Distance)\n\n\\(G(r)=\\frac{|r_{min}(s_i|)&lt;r}{|R|}\\)\nn is the number of points in the study area\nTells us the way events are spaced in a point pattern\nClustered: G increases rapidly over short distance\nEvenness: G increases slow up to the distance where most events are space before increasing rapidly\nEvaluate with simulated confidence envelopes\n\nMonte Carlo simulation test of CSR: A significance test\n\nDo m independent simulations of n events in the study region\nFor every simulated point pattern, estimate \\(G(r)\\) and use 5th and 95th percentiles of the function to define upper and lower simulation envelopes.\nIf the estimated \\(G(r)\\) falls outside these bounds, it is statistically significant\nSimply put: Spray n events m times and calculate \\(G(r)\\). Draw bounds based on the 0.05 and 1-0.05 percentiles and compare to assess the chance of the \\(G(r)\\) being a random coincidence\n\nF Function (Check if clustered or even)\n\nSelect some random point locations within \\(R\\)\nFind min distance from each point to any event in \\(R\\)\n3 Steps\n\nRandomly select m points where \\(m=(p_1,p_2,...,p_n)\\)\nCalculate \\(d_{min}(p_i,s)\\)\nCalculate \\(F(d)\\) where \\(F(d)=\\frac{|d_{min}(p_i,s) &lt; d|}{m}\\)\n\nIf clustered, F(r) rises slowly at first before rising rapidly at longer distances\nIf evenness, F(r) rises rapidly at first then slowly at longer distances\nLike G function, calculate the envelopes and check if it falls outside\n\nK Function (Spatial distribution of a set of points)\n\nConsider the limit of NN distance. It only uses nearest distance.\nK function uses more points\nEstimate of spatial dependence over a wider range\nUses every distance between events in \\(R\\)\nAssumed isotropy (identical values of a property in all directions)\nCalculation\nConstruct circle \\(c\\) of radius \\(h\\) around each point \\(e_i\\)\nCount \\(|e_j|=|{c \\cap e}|\\)\nRepeat previous steps for every \\(e_i \\in e\\)\nSlowly increment \\(h\\) and repeat calculations\n\\(\\hat{K}(h)=\\frac{R}{n^2}\\sum\\sum_{i \\ne j\\frac{I_h(d_{id})}{W_{}ij}}\\)\n\\(R\\) is the area of study area. \\(n\\) is number of points. \\(I_h(d_{id})\\) is a dummy variable, 1 if \\(d_{id}\\le h\\) else 0. \\(W_{ij}\\) is edge correction, the proportionate of the circumference of the circle centered on i containing point j. =1 if the whole circle is within the study area.\nThe K function can be used as a CSR test. Plot \\(K(h)\\) against different \\(h\\) values.\nIf CSR, \\(K(h)=\\pi h^2\\)\n\\(K(h)\\) under low if regular\n\\(K(h)\\) over hi clustered\nConsider envelope for significance, else CSR.\n\nL Function (Alternative to K function. Stabilises variance.)\n\nNormally normalised to get benchmark of 0. \\(L(r)=\\sqrt{\\frac{K(r)}{\\pi}}\\)\nIf \\(L_{obs}\\) above \\(L_{hi}\\) and \\(L_{theo}\\), clustering is statistically significant\nIf \\(L_{hi} &gt; L_{obs} &gt; L_{lo}\\), spatial clustering/dispersion not statistically significant\nIf \\(L_{lo} &gt; L_{obs}\\), spatial dispersion for that distance is statistically significant\n\\(L(r) = \\sqrt{\\frac{K(r)}{\\pi}}-r\\)\n\n\n\n\nConsider the distribution of the points in space and consider if there may be interactions between them.\nThe former is an easier descriptive analysis.\nCSR is useful when there is no obvious regular or clustered pattern.\nF function is the distance from a point to the nearest event. AKA empty space function because it measure the aveage space left between events.\nG function is the distance to the nearest event; distribution of the distances from an event to its nearest other.\nHomogeneous Poisson Process represents a point process where all events are independently and uniformly distributed in its region. Considered stationary and isotropic.\nStationary: Intensity is constant and second-order intensity only depends on direction and distance of 2 points.\nIsotropic: Second order intensity is invariant to rotation.\n\nThe number of events within the area is Poisson distributed with mean \\(\\lambda|A|\\) where \\(lambda\\) is the constant intensity of the point process\nThe \\(n\\) observed events in the region are uniformly distributed\n\nInhomogenous Poisson Process: Non-constant intensity. Described with \\(lambda(x)\\) that varies spatially.\n\n\n\nCaution: Aggregated (Clustered) or dispersed structures can also be obtained with an IPP, where the intensity of the process varies in space.\nRipley’s K function: A cumulative function that gives the average number of points at a distance less than or equal to a radius. Standardised by the process intensity \\(\\frac{n}{|W|}\\), assumed homogeneous.\nCompare \\(\\hat{K}(r)\\) and \\(K_{}pois(r)\\) - Random: = - Aggregate: &gt; - Regular: &lt;\nL Function\nOnly distance-based methods can be used to detect exactly at what distance attraction or dispersion are observable without scale bias in a zone.\nD Function \\(D(r)=K_{cas}(r)-K_{controls}(r)\\) Compare two subpopulation’s distributions"
  },
  {
    "objectID": "HandsOnEx/HE3/HE3.html#setup",
    "href": "HandsOnEx/HE3/HE3.html#setup",
    "title": "Hands-On Exercise 3: 1st & 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "2.0 Setup",
    "text": "2.0 Setup\n\n2.1 Requirements\n\nsf: Simple features access for R. Includes importing, managing and processing data.\nspatstat: For point to point analysis, 1st and 2nd order spatial point patterns analysis and KDE.\nraster: Handles gridding spatial data\nmaptools: Convert spatial objects into spatstat’s ppp format\ntmap: Thematic map library\n\n\n\n2.2 Data\n\nCHILDCARE from data.gov.sg\nMP14_SUBZONE_WEB_PL from data.gov.sg\nCostalOutline from SLA\n\n\n\n2.3 Importing Data and Packages\n\npacman::p_load(maptools, sf, raster, spatstat, tmap)\n\n\nImport the data and correct the CRS of the data to 3414\n\nchildcare_sf &lt;- st_read(\"data/geospatial/ChildCareServices.geojson\") %&gt;%\n  st_transform(crs=3414)\n\nReading layer `ChildCareServices' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/HandsOnEx/HE3/data/geospatial/ChildCareServices.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\nmpsz_sf &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\") %&gt;% \n  st_transform(crs=3414)\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/HandsOnEx/HE3/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nsg_sf &lt;- st_union(mpsz_sf)\n\n\n\n2.4 Wrangling Data\n\nChecking CRS\nConfirm the data’s CRS is correct\n\nst_crs(childcare_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nst_crs(sg_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\nInitial plots\nPlot all 3 datasets to observe obvious spatial patterns.\n\ntm_shape(sg_sf) + \n  tm_polygons() + \n  tm_shape(mpsz_sf) + \n  tm_polygons()+ \n  tm_shape(childcare_sf)+ \n  tm_dots()\n\n\n\n\n\n\n\n\nThis code prepares an interactive pin map.\n\n# tmap_mode('view')\n# tm_shape(childcare_sf)+\n#   tm_dots()\n# tmap_mode('plot')\n\n\n\nConvert to sp’s Spatial* class\nUse sf’s as_Spatial method to convert them\n\nchildcare &lt;- as_Spatial(childcare_sf)\nmpsz &lt;- as_Spatial(mpsz_sf)\nsg &lt;- as_Spatial(sg_sf)\n\nChecking the conversion\n\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1925 \nextent      : 11810.03, 45404.24, 25596.33, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;100044&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;44, TELOK BLANGAH DRIVE, #01 - 19/51, SINGAPORE 100044&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;PCF SPARKLETOTS PRESCHOOL @ TELOK BLANGAH BLK 44 (CC)&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;349C54F201805938&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \nmax values  : kml_999,                                            &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;99982&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;35, ALLANBROOKE ROAD, SINGAPORE 099982&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;ISLANDER PRE-SCHOOL PTE LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;4F63ACF93EFABE7F&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\nsg\n\nclass       : SpatialPolygons \nfeatures    : 1 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\n\nConvert Spatial* into generic sp format\nWe cannot convert directly to ppp, so we convert to generic spatial first\n\nchildcare_sp &lt;- as(childcare, \"SpatialPoints\")\nsg_sp &lt;- as(sg, \"SpatialPolygons\")\nchildcare\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1925 \nextent      : 11810.03, 45404.24, 25596.33, 49300.88  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 2\nnames       :    Nameescription \nmin values  :   kml_1, &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;100044&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;44, TELOK BLANGAH DRIVE, #01 - 19/51, SINGAPORE 100044&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;PCF SPARKLETOTS PRESCHOOL @ TELOK BLANGAH BLK 44 (CC)&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;349C54F201805938&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \nmax values  : kml_999,                                            &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSBLOCKHOUSENUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSBUILDINGNAME&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSPOSTALCODE&lt;/th&gt; &lt;td&gt;99982&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSSTREETNAME&lt;/th&gt; &lt;td&gt;35, ALLANBROOKE ROAD, SINGAPORE 099982&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSTYPE&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;DESCRIPTION&lt;/th&gt; &lt;td&gt;Child Care Services&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;HYPERLINK&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;LANDXADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;LANDYADDRESSPOINT&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;NAME&lt;/th&gt; &lt;td&gt;ISLANDER PRE-SCHOOL PTE LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;PHOTOURL&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;ADDRESSFLOORNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;4F63ACF93EFABE7F&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093837&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;ADDRESSUNITNUMBER&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt; \n\nmpsz\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 323 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 15\nnames       : OBJECTID, SUBZONE_NO, SUBZONE_N, SUBZONE_C, CA_IND, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C,          INC_CRC, FMEL_UPD_D,     X_ADDR,     Y_ADDR,    SHAPE_Leng,    SHAPE_Area \nmin values  :        1,          1, ADMIRALTY,    AMSZ01,      N, ANG MO KIO,         AM, CENTRAL REGION,       CR, 00F5E30B5C9B7AD8,      16409,  5092.8949,  19579.069, 871.554887798, 39437.9352703 \nmax values  :      323,         17,    YUNNAN,    YSSZ09,      Y,     YISHUN,         YS,    WEST REGION,       WR, FFCCF172717C2EAF,      16409, 50424.7923, 49552.7904, 68083.9364708,  69748298.792 \n\nsg\n\nclass       : SpatialPolygons \nfeatures    : 1 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \n\n\n\n\nConvert generic sp to spatstat’s ppp format\n\nchildcare_ppp &lt;- as(childcare_sp, \"ppp\")\nchildcare_ppp\n\nPlanar point pattern: 1925 points\nwindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n\nplot(childcare_ppp)\n\n\n\n\n\n\n\n\nWhile plotting the new ppp object, we get a warning that it contains duplicated points\n\nplot(childcare_ppp)\n\n\n\n\n\n\n\n\nWe confirm with with any(duplicated())\n\nany(duplicated(childcare_ppp))\n\n[1] TRUE\n\n\nmultiplicity() shows us which points are duplicated\n\nmultiplicity(childcare_ppp)\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n   1    2    1    1    1    1    2    1    1    1    1    1    1    3    1    1 \n  17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  33   34   35   36   37   38   39   40   41   42   43   44   45   46   47   48 \n   1    1    1    1    4    1    1    1    1    1    1    1    1    1    1    2 \n  49   50   51   52   53   54   55   56   57   58   59   60   61   62   63   64 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    2    1    1 \n  65   66   67   68   69   70   71   72   73   74   75   76   77   78   79   80 \n   1    3    1    1    1    2    1   10    1    1    1    1    1    1    1    1 \n  81   82   83   84   85   86   87   88   89   90   91   92   93   94   95   96 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n  97   98   99  100  101  102  103  104  105  106  107  108  109  110  111  112 \n   1    1    1    1    1    1    1    2    1    1    3    1    1    1    2    1 \n 113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128 \n   1    2    2    2    1    1    1    1    1    1    1    1    2    1    1    1 \n 129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144 \n   1    1    1    1    1    3    1    1    1    1    1    1    1    1    1    1 \n 145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 161  162  163  164  165  166  167  168  169  170  171  172  173  174  175  176 \n   1    1    2    2    2    1    1    1    1    1    2    1    4    1    1    2 \n 177  178  179  180  181  182  183  184  185  186  187  188  189  190  191  192 \n   1    1    1    1    1    1    1    1    2    1    1    1    1    1    1    1 \n 193  194  195  196  197  198  199  200  201  202  203  204  205  206  207  208 \n   3    1    1    1    1    1    3    1    1    1    1    1    1    1    1    1 \n 209  210  211  212  213  214  215  216  217  218  219  220  221  222  223  224 \n   1    1    1    1    1   10    1    1    3    1    1    1    1    1    1    1 \n 225  226  227  228  229  230  231  232  233  234  235  236  237  238  239  240 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n 241  242  243  244  245  246  247  248  249  250  251  252  253  254  255  256 \n   1    1    2    6    1    2    1    1    2    1    1    1    1    1    1    1 \n 257  258  259  260  261  262  263  264  265  266  267  268  269  270  271  272 \n   3    2    3    2    1    2    1    1    2    4    1    6    6    1    1    1 \n 273  274  275  276  277  278  279  280  281  282  283  284  285  286  287  288 \n   2    1    1    1    1    2    1    1    1    1    1    1    3    1    1    1 \n 289  290  291  292  293  294  295  296  297  298  299  300  301  302  303  304 \n   1    1    4    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 305  306  307  308  309  310  311  312  313  314  315  316  317  318  319  320 \n   1    1    1    1    1    1    1    1    1    1    1    2    1    1    1    1 \n 321  322  323  324  325  326  327  328  329  330  331  332  333  334  335  336 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 337  338  339  340  341  342  343  344  345  346  347  348  349  350  351  352 \n   1    1    2    1    1    1    2    1    1    1    2    1    1    1    1    1 \n 353  354  355  356  357  358  359  360  361  362  363  364  365  366  367  368 \n   1    1    1    1    2    1    2    2    1    1    1    1    2    1    1    1 \n 369  370  371  372  373  374  375  376  377  378  379  380  381  382  383  384 \n   4    1    1    1    1    2    1    1    1    1    1    1    2    1    1    1 \n 385  386  387  388  389  390  391  392  393  394  395  396  397  398  399  400 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    2 \n 401  402  403  404  405  406  407  408  409  410  411  412  413  414  415  416 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    4 \n 417  418  419  420  421  422  423  424  425  426  427  428  429  430  431  432 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 433  434  435  436  437  438  439  440  441  442  443  444  445  446  447  448 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n 449  450  451  452  453  454  455  456  457  458  459  460  461  462  463  464 \n   1    1    2    1    1    1    1    1    1    1    1    1    2    1    1    1 \n 465  466  467  468  469  470  471  472  473  474  475  476  477  478  479  480 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 481  482  483  484  485  486  487  488  489  490  491  492  493  494  495  496 \n   2    2    1    1    1    1    1   10    1    2    1    1    1    2    1    3 \n 497  498  499  500  501  502  503  504  505  506  507  508  509  510  511  512 \n   1    1    1    1   10   10   10    1    1    1    1    1    1    1    1    1 \n 513  514  515  516  517  518  519  520  521  522  523  524  525  526  527  528 \n   1    1    1    2    1    2    1    1    1    1    3    1    2    1    1    1 \n 529  530  531  532  533  534  535  536  537  538  539  540  541  542  543  544 \n   1    1    1    1    1    1    3    1    1    1    1    1    2    1    1    2 \n 545  546  547  548  549  550  551  552  553  554  555  556  557  558  559  560 \n   1    1    3    1    1    1    1    1    1    1    1    2    2    2    1    1 \n 561  562  563  564  565  566  567  568  569  570  571  572  573  574  575  576 \n   2    3    1    1    1    2    1    1    1    2    2    1    1    1    1    1 \n 577  578  579  580  581  582  583  584  585  586  587  588  589  590  591  592 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    4    1    1 \n 593  594  595  596  597  598  599  600  601  602  603  604  605  606  607  608 \n   1    1    1    1    1    3    1    1    1    1    1    1    1    1    1    1 \n 609  610  611  612  613  614  615  616  617  618  619  620  621  622  623  624 \n   1    1    1    1    1    4    1    1    1    1    1    1    4    1    1    1 \n 625  626  627  628  629  630  631  632  633  634  635  636  637  638  639  640 \n   1    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n 641  642  643  644  645  646  647  648  649  650  651  652  653  654  655  656 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    2    1    1 \n 657  658  659  660  661  662  663  664  665  666  667  668  669  670  671  672 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    3    1    1 \n 673  674  675  676  677  678  679  680  681  682  683  684  685  686  687  688 \n   1    1    1    1    1    1    1    1    1   10    1    1    1    1    1    2 \n 689  690  691  692  693  694  695  696  697  698  699  700  701  702  703  704 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 705  706  707  708  709  710  711  712  713  714  715  716  717  718  719  720 \n   1    1    1    2    1    2    1   10    1    4    1    2    1    1    1    1 \n 721  722  723  724  725  726  727  728  729  730  731  732  733  734  735  736 \n   3    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 737  738  739  740  741  742  743  744  745  746  747  748  749  750  751  752 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 753  754  755  756  757  758  759  760  761  762  763  764  765  766  767  768 \n   1    3    1    1    3    1    1    1    1    2    1    1    1    1    1    1 \n 769  770  771  772  773  774  775  776  777  778  779  780  781  782  783  784 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 785  786  787  788  789  790  791  792  793  794  795  796  797  798  799  800 \n   1    1    1    1    1    1    1    1    1    1    2    1    1    1    1    1 \n 801  802  803  804  805  806  807  808  809  810  811  812  813  814  815  816 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 817  818  819  820  821  822  823  824  825  826  827  828  829  830  831  832 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 833  834  835  836  837  838  839  840  841  842  843  844  845  846  847  848 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 849  850  851  852  853  854  855  856  857  858  859  860  861  862  863  864 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 865  866  867  868  869  870  871  872  873  874  875  876  877  878  879  880 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n 881  882  883  884  885  886  887  888  889  890  891  892  893  894  895  896 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    2 \n 897  898  899  900  901  902  903  904  905  906  907  908  909  910  911  912 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n 913  914  915  916  917  918  919  920  921  922  923  924  925  926  927  928 \n   1    1    2    1    1    1    1    1    2    2    1    1    1    1    2    1 \n 929  930  931  932  933  934  935  936  937  938  939  940  941  942  943  944 \n   1    1    2    1    2    1    1    1    2    1    1    1    2    1    1    1 \n 945  946  947  948  949  950  951  952  953  954  955  956  957  958  959  960 \n   1    1    2    1    1    2    1    1    1    1    1    1    1    1    2    1 \n 961  962  963  964  965  966  967  968  969  970  971  972  973  974  975  976 \n   1    2    2    1    1    1    1    2    1    1    1    1    2    1    1    2 \n 977  978  979  980  981  982  983  984  985  986  987  988  989  990  991  992 \n   1    1    1    1    2    1    1    1    1    1    1    1    1    1    1    1 \n 993  994  995  996  997  998  999 1000 1001 1002 1003 1004 1005 1006 1007 1008 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 \n   1    1    1    2    4    1    1    1    1    1    1    2    1    2    2    2 \n1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 \n   2    1    1    1    1    2    1    1    2    2    2    2    1    1    1    1 \n1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 \n   2    1    1    1    2    1    2    1    1    1    1    1    1    1    1    1 \n1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 \n   1    2    2    2    1    1    1    1    1    2    1    1    2    2    2    1 \n1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 \n   1    1    1    1    2    1    1    2    1    1    1    1    1    1    1    1 \n1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 \n   1    3    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 \n   2    1    2    1    2    1    1    1    1    1    1    2    2    1    1    2 \n1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 \n   1    2    1    2    1    2    1    1    1    1    1    2    1    1    1    1 \n1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 \n   1    2    1    2    2    2    2    2    1    1    1    1    1    2    1    1 \n1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 \n   1    1    1    1    1    2    1    1    2    1    1    1    1    2    1    1 \n1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 \n   1    2    1    1    1    1    2    1    1    1    1    1    1    1    1    1 \n1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 \n   1    1    1    1    1    1    1    1    1    2    1    1    1    1    1    1 \n1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 \n   1    1    1    2    1    1    1    3    1    1    1    1    1    1    1   10 \n1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 \n   2    1    3    2    1    2    1    1    2    3    2    1    1    1    1    1 \n1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 \n   1    1    1    1    1    2    1    2    1    1    1    1    1    1    1    1 \n1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 \n   1    1    1    1    1    1    1    1    1    1    4    1    1    1    1    1 \n1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 \n   2    1    1    1    2    1    2    1    1    1    1    1    1    1    1    1 \n1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 \n  10    1    2    4    1    1    1    4    1    4    1    1    1    1    1    1 \n1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 \n   1    1    1    1    1    1    1    1    1    4    2    3    2    1    1    1 \n1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 \n   2    2    1    1    1    1    1    2    2    3    1    1    1    1    1    2 \n1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 \n   1    1    1    2    1    1    1    1    1    1    1    1    1    1    1    1 \n1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 \n   2    2    2    1    1    1    6    1    1    1    1    1    1    1    1    1 \n1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 \n   1    1    1    4    1    1    1    1    1    1    1    1    1    1    1    1 \n1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 \n   1    1    1    1    2    2    1    1    1    1    1    1    1    1    1    1 \n1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 \n   1    1    1    1    2    1    1    1    1    2    1    1    1    1    2    1 \n1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 \n   2    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 \n   2    1    1    1    1    1    1    3    1    1    1    1    1    1    1    1 \n1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 \n   1    1    1    1    1    1    1    1    1    1    1    1    1    1    1    1 \n1537 1538 1539 1540 1541 1542 1543 1544 1545 1546 1547 1548 1549 1550 1551 1552 \n   1    1    1    1    1    1    1    1    1    6    1    1    1    1    1    1 \n1553 1554 1555 1556 1557 1558 1559 1560 1561 1562 1563 1564 1565 1566 1567 1568 \n   1    1    1    1    1    1    1    3    1    1    4    1    1    2    1    1 \n1569 1570 1571 1572 1573 1574 1575 1576 1577 1578 1579 1580 1581 1582 1583 1584 \n   2    1    1    1    2    1    4    1    2    1    1    1    1    1    1    1 \n1585 1586 1587 1588 1589 1590 1591 1592 1593 1594 1595 1596 1597 1598 1599 1600 \n   1    1    1    1    1    1    1    1    2    1    1    2    1    1    1    1 \n1601 1602 1603 1604 1605 1606 1607 1608 1609 1610 1611 1612 1613 1614 1615 1616 \n   1    1    1    1    2    1    1    3    1    1    1    2    1    1    1    1 \n1617 1618 1619 1620 1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 1632 \n   2    1    1    1    1    1    1    2    1    1    2    1    1    1    1    1 \n1633 1634 1635 1636 1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 1648 \n   3    1    1    2    1    1    1    1    1    1    1    1    1    2    1    1 \n1649 1650 1651 1652 1653 1654 1655 1656 1657 1658 1659 1660 1661 1662 1663 1664 \n   1    1    1    1    1    1    1    2    1    1    1    1    1    1    1    1 \n1665 1666 1667 1668 1669 1670 1671 1672 1673 1674 1675 1676 1677 1678 1679 1680 \n   1    1    1    4    1    1    1    6    1    1    1    1    1    1    1    1 \n1681 1682 1683 1684 1685 1686 1687 1688 1689 1690 1691 1692 1693 1694 1695 1696 \n   1    1    1    2    1    1    1    2    1    1    1    1    1    2    1    1 \n1697 1698 1699 1700 1701 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711 1712 \n   1    2    1    1    1    1    1    1    1    1    2    2    2    1    1    1 \n1713 1714 1715 1716 1717 1718 1719 1720 1721 1722 1723 1724 1725 1726 1727 1728 \n   2    1    2    1    2    1    2    1    1    2    1    2    2    2    2    1 \n1729 1730 1731 1732 1733 1734 1735 1736 1737 1738 1739 1740 1741 1742 1743 1744 \n   1    1    1    1    1    2    1    1    1    2    1    1    1    1    2    1 \n1745 1746 1747 1748 1749 1750 1751 1752 1753 1754 1755 1756 1757 1758 1759 1760 \n   1    4    1    4    1    4    1    1    2    1    1    1    1    1    3    1 \n1761 1762 1763 1764 1765 1766 1767 1768 1769 1770 1771 1772 1773 1774 1775 1776 \n   1    1    1    2    2    2    2    2    2    2    2    1    1    2    2    2 \n1777 1778 1779 1780 1781 1782 1783 1784 1785 1786 1787 1788 1789 1790 1791 1792 \n   1    2    1    1    1    1    1    2    2    2    1    2    2    2    2    1 \n1793 1794 1795 1796 1797 1798 1799 1800 1801 1802 1803 1804 1805 1806 1807 1808 \n   2    1    1    1    1    1    1    1    2    2    1    2    1    1    1    1 \n1809 1810 1811 1812 1813 1814 1815 1816 1817 1818 1819 1820 1821 1822 1823 1824 \n   1    1    1    1    2    1    2    2    2    2    2    2    1    1    2    1 \n1825 1826 1827 1828 1829 1830 1831 1832 1833 1834 1835 1836 1837 1838 1839 1840 \n   1    1    1    2    2    2    2    2    1    1    1    2    1    1    2    2 \n1841 1842 1843 1844 1845 1846 1847 1848 1849 1850 1851 1852 1853 1854 1855 1856 \n   1    2    1    1    2    1    1    2    2    2    1    2    1    2    1    1 \n1857 1858 1859 1860 1861 1862 1863 1864 1865 1866 1867 1868 1869 1870 1871 1872 \n   1    1    1    1    1    1    2    1    1    1    1    4    1    1    1    1 \n1873 1874 1875 1876 1877 1878 1879 1880 1881 1882 1883 1884 1885 1886 1887 1888 \n   3    1    1    2    1    1    1    2    1    1    1    1    1    2    2    1 \n1889 1890 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900 1901 1902 1903 1904 \n   1    1    2    1    2    2    1    1    1    1    1    2    1    1    2    1 \n1905 1906 1907 1908 1909 1910 1911 1912 1913 1914 1915 1916 1917 1918 1919 1920 \n   1    3    2    2    2    1    2    1    3    1    1    1    1    1    1    1 \n1921 1922 1923 1924 1925 \n   1    1    1    1    3 \n\n\nsum() the number of duplicated points\n\nsum(multiplicity(childcare_ppp) &gt; 1)\n\n[1] 338\n\n\nIn the interactive map, darker spots have duplicated data\n\n# tmap_mode('view')\n# tm_shape(childcare) +\n#   tm_dots(alpha=0.4, \n#          size=0.05)\n\n# tmap_mode('plot')\n\n\n\nJittering\nJittering: Slightly shift duplicate points such that they no longer occur at the same point to make them unique. After that, confirm that there are no longer any duplicates with any(duplicated())\n\nchildcare_ppp &lt;- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\nany(duplicated(childcare_ppp))\n\n[1] FALSE\n\n\n\n\nowin\nowin: A geographical boundary to confine our analysis.\n\nsg_owin &lt;- as(sg_sp, \"owin\")\nplot(sg_owin)\n\n\n\n\n\n\n\nsummary(sg_owin)\n\nWindow: polygonal boundary\n80 separate polygons (35 holes)\n                  vertices         area relative.area\npolygon 1                4  9.47108e+01      1.21e-07\npolygon 2               37  1.29481e+04      1.66e-05\npolygon 3               30  4.28933e+03      5.49e-06\npolygon 4              145  9.61782e+05      1.23e-03\npolygon 5              227  1.10308e+06      1.41e-03\npolygon 6               19  3.09221e+04      3.95e-05\npolygon 7               10  6.60195e+03      8.44e-06\npolygon 8              234  2.08755e+06      2.67e-03\npolygon 9               22  6.74651e+03      8.63e-06\npolygon 10              71  5.63061e+03      7.20e-06\npolygon 11              10  1.99717e+02      2.55e-07\npolygon 12           14663  6.97996e+08      8.93e-01\npolygon 13 (hole)        3 -2.05920e-03     -2.63e-12\npolygon 14 (hole)        3 -2.89050e-05     -3.70e-14\npolygon 15 (hole)        3 -2.83151e-01     -3.62e-10\npolygon 16 (hole)        3 -3.99521e-02     -5.11e-11\npolygon 17 (hole)        3 -4.95057e-02     -6.33e-11\npolygon 18 (hole)        3 -3.65501e-03     -4.67e-12\npolygon 19 (hole)        4 -2.05611e-02     -2.63e-11\npolygon 20 (hole)        3 -1.68316e-04     -2.15e-13\npolygon 21 (hole)       26 -1.25665e+03     -1.61e-06\npolygon 22 (hole)        3 -2.18000e-06     -2.79e-15\npolygon 23 (hole)        3 -6.62377e-01     -8.47e-10\npolygon 24 (hole)        3 -2.09065e-03     -2.67e-12\npolygon 25 (hole)       36 -7.79904e+03     -9.97e-06\npolygon 26 (hole)        3 -8.83647e-03     -1.13e-11\npolygon 27 (hole)        3 -2.21090e+00     -2.83e-09\npolygon 28 (hole)       40 -6.00381e+03     -7.68e-06\npolygon 29 (hole)        7 -1.40545e-01     -1.80e-10\npolygon 30 (hole)       20 -4.39069e+00     -5.62e-09\npolygon 31 (hole)       28 -1.99862e+01     -2.56e-08\npolygon 32 (hole)       48 -1.38338e+02     -1.77e-07\npolygon 33 (hole)      351 -1.21433e+03     -1.55e-06\npolygon 34 (hole)       12 -8.36709e+01     -1.07e-07\npolygon 35 (hole)      317 -5.11280e+04     -6.54e-05\npolygon 36 (hole)       36 -4.01660e+04     -5.14e-05\npolygon 37              30  2.80002e+04      3.58e-05\npolygon 38              27  1.50315e+04      1.92e-05\npolygon 39              15  4.03300e+04      5.16e-05\npolygon 40            1045  4.44510e+06      5.68e-03\npolygon 41 (hole)       13 -3.91907e+02     -5.01e-07\npolygon 42              47  3.82087e+04      4.89e-05\npolygon 43              65  8.42861e+04      1.08e-04\npolygon 44             478  2.06120e+06      2.64e-03\npolygon 45             266  1.50631e+06      1.93e-03\npolygon 46             234  4.72886e+05      6.05e-04\npolygon 47              14  5.86546e+03      7.50e-06\npolygon 48              83  5.28920e+03      6.76e-06\npolygon 49              75  1.73526e+04      2.22e-05\npolygon 50             148  3.10395e+03      3.97e-06\npolygon 51             142  3.22293e+03      4.12e-06\npolygon 52              45  2.51218e+03      3.21e-06\npolygon 53              40  1.38607e+04      1.77e-05\npolygon 54              10  4.90942e+02      6.28e-07\npolygon 55              95  5.96187e+04      7.62e-05\npolygon 56 (hole)        4 -1.86410e-02     -2.38e-11\npolygon 57              64  3.43149e+04      4.39e-05\npolygon 58 (hole)        3 -1.98390e-03     -2.54e-12\npolygon 59 (hole)        3 -5.55856e-03     -7.11e-12\npolygon 60 (hole)        3 -5.12482e-03     -6.55e-12\npolygon 61 (hole)        3 -1.96410e-03     -2.51e-12\npolygon 62 (hole)        4 -1.13774e-02     -1.46e-11\npolygon 63             155  2.67502e+05      3.42e-04\npolygon 64             106  3.04104e+03      3.89e-06\npolygon 65            1027  1.27782e+06      1.63e-03\npolygon 66 (hole)        3 -3.23310e-04     -4.13e-13\npolygon 67 (hole)        3 -1.16959e-03     -1.50e-12\npolygon 68 (hole)        3 -1.46474e-03     -1.87e-12\npolygon 69             211  4.70521e+05      6.02e-04\npolygon 70               4  2.69313e+02      3.44e-07\npolygon 71             132  9.53357e+04      1.22e-04\npolygon 72               6  4.50259e+02      5.76e-07\npolygon 73             285  1.61128e+06      2.06e-03\npolygon 74              91  1.49663e+04      1.91e-05\npolygon 75              71  8.18750e+03      1.05e-05\npolygon 76             668  5.40368e+07      6.91e-02\npolygon 77              77  3.29939e+05      4.22e-04\npolygon 78             711  1.28815e+07      1.65e-02\npolygon 79 (hole)        3 -3.41405e-01     -4.37e-10\npolygon 80              44  2.26577e+03      2.90e-06\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units\n                     (53730 x 34510 units)\nWindow area = 781945000 square units\nFraction of frame area: 0.422\n\n\n\n\nExtracting events to our boundary (owin)\nLooks a bit like python, will be very useful in the future. Couples the polygon with the events within it into one entity.\n\nchildcareSG_ppp = childcare_ppp[sg_owin]\nhead(childcareSG_ppp)\n\nPlanar point pattern: 6 points\nwindow: polygonal boundary\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units\n\n\n\n\nPloting events within the boundary\nPlot the new ppp object\n\nplot(childcareSG_ppp)"
  },
  {
    "objectID": "HandsOnEx/HE3/HE3.html#first-order-spatial-point-patterns-analysis",
    "href": "HandsOnEx/HE3/HE3.html#first-order-spatial-point-patterns-analysis",
    "title": "Hands-On Exercise 3: 1st & 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "3.0 First-order Spatial Point Patterns Analysis",
    "text": "3.0 First-order Spatial Point Patterns Analysis\n\n3.1 Kernel Density Estimation (KDE)\n\nAutomatic bandwidth selection\nIn this case, the method is diggle. The smoothing kernel is gaussian and we enable edge bias correction.\n\nkde_childcareSG.bw &lt;- density(childcareSG_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(kde_childcareSG.bw)\n\n\n\n\n\n\n\n\nIn the previous plot, the density values of the output range are unacceptably low and difficult to interpret.\n\n\nCheck the selected bandwidth\n\nbw &lt;- bw.diggle(childcareSG_ppp)\nbw\n\n   sigma \n303.8831 \n\n\n\n\nRescaling KDE values\nRescale with a conversion factor of 1000, calling it ‘KM’. The name is optional.\n\nchildcareSG_ppp.km &lt;- rescale(childcareSG_ppp, 1000, \"km\")\nkde_childcareSG.bw &lt;- density(childcareSG_ppp.km,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(kde_childcareSG.bw)\n\n\n\n\n\n\n\n\nWe fixed the density values of the output!\n\n\n\n3.2 Different bandwidth selection methods\n\nFour Spatstat bandwidth calculation functions\n\nbw.CvL(childcareSG_ppp.km)\n\n   sigma \n4.830569 \n\nbw.scott(childcareSG_ppp.km)\n\n sigma.x  sigma.y \n2.160569 1.395324 \n\nbw.ppl(childcareSG_ppp.km)\n\n    sigma \n0.2483881 \n\nbw.diggle(childcareSG_ppp.km)\n\n    sigma \n0.3038831 \n\n\n\n\nComparing diggle and ppl\npar(mfrow=c(1,2)) Will be useful in the future for comparing multiple representations\n\nkde_childcareSG.ppl &lt;- density(childcareSG_ppp.km, \n                               sigma=bw.ppl, \n                               edge=TRUE,\n                               kernel=\"gaussian\")\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"bw.diggle\")\nplot(kde_childcareSG.ppl, main = \"bw.ppl\")\n\n\n\n\n\n\n\n\n\n\n\n3.3 Applying different bandwidth selection methods\nIn each method, the differences are quite subtle. Should experiment with more than 1 method when trying to plot KDE.\n\npar(mfrow=c(2,2))\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"gaussian\"), \n     main=\"Gaussian\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"epanechnikov\"), \n     main=\"Epanechnikov\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"quartic\"), \n     main=\"Quartic\")\nplot(density(childcareSG_ppp.km, \n             sigma=bw.ppl, \n             edge=TRUE, \n             kernel=\"disc\"), \n     main=\"Disc\")"
  },
  {
    "objectID": "HandsOnEx/HE3/HE3.html#fixed-and-adaptive-kde",
    "href": "HandsOnEx/HE3/HE3.html#fixed-and-adaptive-kde",
    "title": "Hands-On Exercise 3: 1st & 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "4.0 Fixed and Adaptive KDE",
    "text": "4.0 Fixed and Adaptive KDE\n\n4.1 Fixed Bandwidth\nIn this example, sigma is set to 0.6. With respect to the unit, kilometers, this represents 600m or 0.6 KM.\n\nkde_childcareSG_600 &lt;- density(childcareSG_ppp.km, sigma=0.6, edge=TRUE, kernel=\"gaussian\")\nplot(kde_childcareSG_600)\n\n\n\n\n\n\n\n\n\n\n4.2 Adaptive bandwidth\nFixed bandwidth is sensitive to highly skewed distributions of spatial points. Using Adaptive bandwidth solves this issue.\n\nkde_childcareSG_adaptive &lt;- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\nplot(kde_childcareSG_adaptive)\n\n\n\n\n\n\n\n\n\nComparing fixed and adaptive bandwidth\n\npar(mfrow=c(1,2))\nplot(kde_childcareSG.bw, main = \"Fixed bandwidth\")\nplot(kde_childcareSG_adaptive, main = \"Adaptive bandwidth\")\n\n\n\n\n\n\n\n\n\n\n\n4.3 KDE output to grid object\n\ngridded_kde_childcareSG_bw &lt;- as.SpatialGridDataFrame.im(kde_childcareSG.bw)\nspplot(gridded_kde_childcareSG_bw)\n\n\n\n\n\n\n\n\n\nConversion to raster\nThe gridded KDE object can be converted into a raster layer. Remember to set the CRS.\n\nkde_childcareSG_bw_raster &lt;- raster(gridded_kde_childcareSG_bw)\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.419757, 0.2695907  (x, y)\nextent     : 2.667538, 56.39644, 15.74872, 50.25633  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : v \nvalues     : -1.10545e-14, 37.61129  (min, max)\n\n\n\nprojection(kde_childcareSG_bw_raster) &lt;- CRS(\"+init=EPSG:3414\")\nkde_childcareSG_bw_raster\n\nclass      : RasterLayer \ndimensions : 128, 128, 16384  (nrow, ncol, ncell)\nresolution : 0.419757, 0.2695907  (x, y)\nextent     : 2.667538, 56.39644, 15.74872, 50.25633  (xmin, xmax, ymin, ymax)\ncrs        : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +units=m +no_defs \nsource     : memory\nnames      : v \nvalues     : -1.10545e-14, 37.61129  (min, max)\n\n\n\n\n\n4.4 tmap visualisation\nRaster values are coded onto raster pixels in the v field.\n\ntm_shape(kde_childcareSG_bw_raster) + \n  tm_raster(\"v\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\"), frame = FALSE)\n\n\n\n\n\n\n\n\n\n\n4.5 Comparing spatial point patterns with KDE\n\nExtracting study areas\nImportant process: Remember this syntax to extract study areas.\n\npg = mpsz[mpsz@data$PLN_AREA_N == \"PUNGGOL\",]\ntm = mpsz[mpsz@data$PLN_AREA_N == \"TAMPINES\",]\nck = mpsz[mpsz@data$PLN_AREA_N == \"CHOA CHU KANG\",]\njw = mpsz[mpsz@data$PLN_AREA_N == \"JURONG WEST\",]\n\nPlot the areas to confirm\n\npar(mfrow=c(2,2))\nplot(pg, main = \"Punggol\")\nplot(tm, main = \"Tampines\")\nplot(ck, main = \"Choa Chu Kang\")\nplot(jw, main = \"Jurong West\")\n\n\n\n\n\n\n\n\nConvert the areas into generic sp\n\npg_sp = as(pg, \"SpatialPolygons\")\ntm_sp = as(tm, \"SpatialPolygons\")\nck_sp = as(ck, \"SpatialPolygons\")\njw_sp = as(jw, \"SpatialPolygons\")\n\nThen into owin\n\npg_owin = as(pg_sp, \"owin\")\ntm_owin = as(tm_sp, \"owin\")\nck_owin = as(ck_sp, \"owin\")\njw_owin = as(jw_sp, \"owin\")\n\nUse the same python-like syntax to extract only events within the respective areas\n\nchildcare_pg_ppp = childcare_ppp[pg_owin]\nchildcare_tm_ppp = childcare_ppp[tm_owin]\nchildcare_ck_ppp = childcare_ppp[ck_owin]\nchildcare_jw_ppp = childcare_ppp[jw_owin]\n\nRescale like we did before to transform the unit from meter to kilometer\n\nchildcare_pg_ppp.km = rescale(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale(childcare_jw_ppp, 1000, \"km\")\n\n\n\nPlot multiple study areas\n\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")\n\n\n\n\n\n\n\n\n\n\nCompute KDE for each study region (Automatic bandwidth).\nIn this example, we use diggle, edge bias correction and a gaussian smoothing kernel.\n\npar(mfrow=c(2,2))\nplot(density(childcare_pg_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")\nplot(density(childcare_ck_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Choa Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=bw.diggle, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Jurong West\")\n\n\n\n\n\n\n\n\n\n\nCompute KDE for each study region (Fixed bandwidth).\nBandwidth set to 250m\n\npar(mfrow=c(2,2))\nplot(density(childcare_ck_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Chou Chu Kang\")\nplot(density(childcare_jw_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"JUrong West\")\nplot(density(childcare_pg_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Punggol\")\nplot(density(childcare_tm_ppp.km, \n             sigma=0.25, \n             edge=TRUE, \n             kernel=\"gaussian\"),\n     main=\"Tampines\")\n\n\n\n\n\n\n\n\n\n\n\n4.6 Nearest Neighbour Analysis\nThe Clark-Evans test of aggregation.\nH0: Random distribution\nH1: Not randomly distributed\n\nclarkevans.test(childcareSG_ppp,\n                correction=\"none\",\n                clipregion=\"sg_owin\",\n                alternative=c(\"clustered\"),\n                nsim=99)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcareSG_ppp\nR = 0.51323, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nFrom the above result, the R value indicates clustering. the p-value shows that this is a statistically significant result\n\nClark Evans test on CCK\n\nclarkevans.test(childcare_ck_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_ck_ppp\nR = 0.83087, p-value = 0.005382\nalternative hypothesis: two-sided\n\n\nThe p value indicates that we cannot reject the null hypothesis\n\n\nClark Evans test on Tampines\n\nclarkevans.test(childcare_tm_ppp,\n                correction=\"none\",\n                clipregion=NULL,\n                alternative=c(\"two.sided\"),\n                nsim=999)\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  childcare_tm_ppp\nR = 0.66979, p-value = 8.317e-12\nalternative hypothesis: two-sided\n\n\nThe R value indicates clustering and the P value indicates that this is a statistically significant result."
  },
  {
    "objectID": "HandsOnEx/HE3/HE3.html#nd-order-spatial-point-patterns-analysis-methods",
    "href": "HandsOnEx/HE3/HE3.html#nd-order-spatial-point-patterns-analysis-methods",
    "title": "Hands-On Exercise 3: 1st & 2nd Order Spatial Point Patterns Analysis Methods",
    "section": "5.0 2nd Order Spatial Point Patterns Analysis Methods",
    "text": "5.0 2nd Order Spatial Point Patterns Analysis Methods\n\n5.1 Analysing Spatial Point Process with the G-Function\n\nCCK Planning Area Complete Spatial Randomness (CSR) Test\n\nG_CK = Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500))\n\n\n\n\n\n\n\nG_CK.csr &lt;- envelope(childcare_ck_ppp, Gest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(G_CK.csr)\n\n\n\n\n\n\n\n\n\n\nCCK Planning Area Complete Spatial Randomness (CSR) Test\nNote the change in correction method\n\nG_tm.csr &lt;- envelope(childcare_tm_ppp, Gest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(G_tm.csr)\n\n\n\n\n\n\n\n\n\n\n\n5.2 Analysing Spatial Point Process with the F-Function\nThe empty space function. Compute the F-Function then perform the complete spatial randomness test.\n\nCCK F-Function\n\nF_CK = Fest(childcare_ck_ppp)\nplot(F_CK)\n\n\n\n\n\n\n\nF_CK.csr &lt;- envelope(childcare_ck_ppp, Fest, nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(F_CK.csr)\n\n\n\n\n\n\n\n\n\n\nTampines F-Function & Monte Carlo Test\n\nF_tm = Fest(childcare_tm_ppp, correction = \"best\")\nplot(F_tm)\n\n\n\n\n\n\n\nF_tm.csr &lt;- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 999)\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\nplot(F_tm.csr)\n\n\n\n\n\n\n\n\n\n\n\n5.3 Analysing Spatial Point Process Using K-Function\n\nCCK K-Function\n\nK_ck = Kest(childcare_ck_ppp, correction = \"Ripley\")\nplot(K_ck, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\nK_ck.csr &lt;- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\nplot(K_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n\n\n\n\n\n\n\n\n\n\nTampines K-Function\n\nK_tm = Kest(childcare_tm_ppp, correction = \"Ripley\")\nplot(K_tm, . -r ~ r, \n     ylab= \"K(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n\nK_tm.csr &lt;- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\nplot(K_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"K(d)-r\", xlim=c(0,500))\n\n\n\n\n\n\n\n\n\n\n\n5.4 Analysing Spatial Point Process Using L-Function\n\nCCK L Function\n\nL_ck = Lest(childcare_ck_ppp, correction = \"Ripley\")\nplot(L_ck, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n\n\n\n\n\n\n\nL_ck.csr &lt;- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\nplot(L_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"L(d)-r\")\n\n\n\n\n\n\n\n\n\n\nTampines L Function\n\nL_tm = Lest(childcare_tm_ppp, correction = \"Ripley\")\nplot(L_tm, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n\n\n\n\n\n\n\nL_tm.csr &lt;- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\nplot(L_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"L(d)-r\", xlim=c(0,500))"
  },
  {
    "objectID": "HandsOnEx/HE2/HE2.html",
    "href": "HandsOnEx/HE2/HE2.html",
    "title": "Hands-On Exercise 2: GeoVisualisation and Analytical Mapping",
    "section": "",
    "text": "Thematic mapping: Use map symbols to represent otherwise elusive variables and make use of human pattern-recognition\n\n\n\n\nI can use proportional symbols, shapes with attributes proportionate to a variable, to annotate maps. This is easier than counting a lot of little dots. It also preserves the location of the measured phenomena.\nSome things to keep in mind when I use them is to make sure the sizes of each symbols are managed such that they do not crowd the map. I also need to keep the scale of the shapes in mind. This is because for a given circle, doubling the radius would actually increase the area by 4 times.\nProportional symbols are very useful since I can display multiple related variables on points in a map as long as I keep readability in mind.\n\n\n\nProportional symbols use shapes and sizes to display information while choropleth maps focus on colours. Instead of using shape sizes, we can use a scale of colours to display information for a region.\nIn this case, we need to be aware that aggregation districts (like borders of countries on a map) may not correlate with the actual area studied, it may only be a small part.\nChoropleth maps should be used to depict quantitative data that applies to the whole of a given region on the map.\nNormalisation lets us depict variables independent of a given region’s size. Normalisation should be done carefully on certain variables to more clearly express a narrative or idea.\nEnsure color progressions are chosen to clearly express information, perhaps drawing on existing preconceptions and association. E.g. blue is cold, red is hot for a average temperature map\n\n\n\nBe careful while deciding where to split numerical data into different classes.\n\nEqual Interval: For evenly, generally spread data across the whole range without gaps or largely skewed data. Beware of over/unused ranges\nQuantiles: Evenly distribute the number of observations per class. May group very different observations together for evenness.\nNatural Breaks: Break at dips in the histogram of observations. Optimal for the dataset but makes it difficult to compare to other datasets.\nManual: If all else fails, it can be reasonable to set the breaks yourself.\n\n\n\n\nEDA will help us choose the most appropriate choropleth map parameters. - Normal distribution: SD Classification - Uniform distribution: Even Class Width Classification\nConsider when checking histograms: - Include record with zero or missing values? - Distributions - Sample sizes\nChoropleth maps are good with summarised data, namely totals or ratios. May or may not involve area.\nKolmogorov-Sminov test: Checks for uniform distribution. Ensure significance level is over 0.05\nConsider making more than 1 map on the same data to allow readers to compare them.\nConsider removing outliers and extreme values because they can impact distributions. Define outliers with z values, e.g. +-3"
  },
  {
    "objectID": "HandsOnEx/HE2/HE2.html#overview",
    "href": "HandsOnEx/HE2/HE2.html#overview",
    "title": "Hands-On Exercise 2: GeoVisualisation and Analytical Mapping",
    "section": "",
    "text": "Thematic mapping: Use map symbols to represent otherwise elusive variables and make use of human pattern-recognition\n\n\n\n\nI can use proportional symbols, shapes with attributes proportionate to a variable, to annotate maps. This is easier than counting a lot of little dots. It also preserves the location of the measured phenomena.\nSome things to keep in mind when I use them is to make sure the sizes of each symbols are managed such that they do not crowd the map. I also need to keep the scale of the shapes in mind. This is because for a given circle, doubling the radius would actually increase the area by 4 times.\nProportional symbols are very useful since I can display multiple related variables on points in a map as long as I keep readability in mind.\n\n\n\nProportional symbols use shapes and sizes to display information while choropleth maps focus on colours. Instead of using shape sizes, we can use a scale of colours to display information for a region.\nIn this case, we need to be aware that aggregation districts (like borders of countries on a map) may not correlate with the actual area studied, it may only be a small part.\nChoropleth maps should be used to depict quantitative data that applies to the whole of a given region on the map.\nNormalisation lets us depict variables independent of a given region’s size. Normalisation should be done carefully on certain variables to more clearly express a narrative or idea.\nEnsure color progressions are chosen to clearly express information, perhaps drawing on existing preconceptions and association. E.g. blue is cold, red is hot for a average temperature map\n\n\n\nBe careful while deciding where to split numerical data into different classes.\n\nEqual Interval: For evenly, generally spread data across the whole range without gaps or largely skewed data. Beware of over/unused ranges\nQuantiles: Evenly distribute the number of observations per class. May group very different observations together for evenness.\nNatural Breaks: Break at dips in the histogram of observations. Optimal for the dataset but makes it difficult to compare to other datasets.\nManual: If all else fails, it can be reasonable to set the breaks yourself.\n\n\n\n\nEDA will help us choose the most appropriate choropleth map parameters. - Normal distribution: SD Classification - Uniform distribution: Even Class Width Classification\nConsider when checking histograms: - Include record with zero or missing values? - Distributions - Sample sizes\nChoropleth maps are good with summarised data, namely totals or ratios. May or may not involve area.\nKolmogorov-Sminov test: Checks for uniform distribution. Ensure significance level is over 0.05\nConsider making more than 1 map on the same data to allow readers to compare them.\nConsider removing outliers and extreme values because they can impact distributions. Define outliers with z values, e.g. +-3"
  },
  {
    "objectID": "HandsOnEx/HE2/HE2.html#setup",
    "href": "HandsOnEx/HE2/HE2.html#setup",
    "title": "Hands-On Exercise 2: GeoVisualisation and Analytical Mapping",
    "section": "2.0 Setup",
    "text": "2.0 Setup\n\n2.1 Requirements\n\nsf: Simple features access for R. Includes importing, managing and processing data.\ntidyverse: A set of R packages for data science, which includes visualisation. Includes the 3 packages below\nreadr: Import delimited text files like csvs\ntidyr: For tidying data\ndplyr: Data wrangling\ntmap: Thematic map library\n\n\n\n2.2 Data\n\nMaster Plan 2014 Subzone Boundary (Web) from data.gov.sg\nSingapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2011-2020 from Department of Statistics, Singapore\n\n\n\n2.3 Importing Data and Packages\n\npacman::p_load(sf, tmap, tidyverse)\n\n\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/HandsOnEx/HE2/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\nRows: 984656 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n2.4 Data Wrangling\n\npopdata2020\nPipes here are quite useful to pass the same data to a chain of functions without too many brackets, indentations or variables.\n\nfilter: Keep rows matching a condition\ngroup_by: Group the data by the PA, SZ and AG columns\nsummarise: Creates a new data frame with one row as a summary. In this case, a sum of the Pop column\nungroup: Reverse of group_by\npivot_wider: Pivot the dataframe, the row come from the AG column and the values come from Pop\nmutate: Add new columns derived from other columns, in this case the sum of other columns\nselect: Extract specific columns from a dataframe\n\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup()%&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n\n\n\n\nJoining attribute and geospatial data\n\nhead(popdata2020)\n\n# A tibble: 6 × 7\n  PA         SZ                    YOUNG `ECONOMY ACTIVE`  AGED TOTAL DEPENDENCY\n  &lt;chr&gt;      &lt;chr&gt;                 &lt;dbl&gt;            &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1 Ang Mo Kio Ang Mo Kio Town Cent…  1440             2610   760  4810      0.843\n2 Ang Mo Kio Cheng San              6640            15460  6050 28150      0.821\n3 Ang Mo Kio Chong Boon             6150            13950  6470 26570      0.905\n4 Ang Mo Kio Kebun Bahru            5540            12090  5120 22750      0.882\n5 Ang Mo Kio Sembawang Hills        2100             3410  1310  6820      1    \n6 Ang Mo Kio Shangri-La             3960             8420  3610 15990      0.899\n\nhead(mpsz)\n\nSimple feature collection with 6 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 24468.89 ymin: 28369.47 xmax: 32362.39 ymax: 30542.74\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n6        6          7 ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6         BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6 29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n\n\nmpsz names are all capitalised but popdata2020 is not. Capitalise all characters in the popdata2020 dataframe.\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nWe may now join the two data frames on the standardised, capitalised names\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\nSave the data as an r object\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "HandsOnEx/HE2/HE2.html#choropleth-maping-geospatial-data-using-tmap",
    "href": "HandsOnEx/HE2/HE2.html#choropleth-maping-geospatial-data-using-tmap",
    "title": "Hands-On Exercise 2: GeoVisualisation and Analytical Mapping",
    "section": "3.0 Choropleth Maping Geospatial Data Using tmap",
    "text": "3.0 Choropleth Maping Geospatial Data Using tmap\n\n3.1 Quick Thematic Plot with qtm\nDo a quick thematic plot with qtm as an easy default visualisation. - tmap_mode(\"plot\") creates a static map - tmap_mode(\"view\") creates an interactive map\nfill determines the variable to map\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\n3.2 tmap Elements\n\ntm_shape the dataframe\ntm_fill\n\nDEPENDENCY variable to map\nstyle=\"quantile\" How to split the numerical data\npalette=\"Blues\" Colour palette\ntitle Self-explanatory\n\ntm_layout\n\nInclude parameters for the title, legend and frame\n\ntm_borders\n\nAesthetic purposes\n\ntm_compass\n\nAdds a compass, it looks cool\n\ntm_scale_bar\n\nAdds a scale bar, it is also cool\n\ntm_grid\n\nAdds a grid, which makes the map easier to read\n\ntm_credits\n\nCredits for the map, will use to add my name to my cool maps\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\nDrawing the Base Map\nUse tm_shape() followed by either tm_fill or tm_polygons(). Here we use the latter to plot a base map.\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\n\n\n\n\nDraw a Choropleth Map with tm_polygons\nDoes the same as tm_fill and tm_border.\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\ntm_fill Only\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\ntm_fill and tm_borders\nCan customise the border width, color and transparency\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.5,  alpha = 1, col='pink')\n\n\n\n\n\n\n\n\n\n\n\n3.3 Data Classification with t_map\n\nClassification Methods\nfixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks\nDefine it in tm_fill or tm_polygons\n\n\nJenks example with 5 classes\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nEqual example with 5 classes\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n3.4 Choropleth Maps with Custom Breaks\n\nFind the Data’s Quartiles and Mean\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7866  0.8585  0.8763 19.0000      92 \n\n\n\n\nDefine the breaks in tm_fill\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\nWarning: Values have found that are higher than the highest break"
  },
  {
    "objectID": "HandsOnEx/HE2/HE2.html#colours-and-formats",
    "href": "HandsOnEx/HE2/HE2.html#colours-and-formats",
    "title": "Hands-On Exercise 2: GeoVisualisation and Analytical Mapping",
    "section": "4.0 Colours and Formats",
    "text": "4.0 Colours and Formats\n\n4.1 Blues, Greens, or any Colour from ColourBrewer\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n4.2 Reverse Shading\nUse the - to reverse the shading\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n4.3 Legend, Title and General Formatting\nThere’s a lot to unpack here, this is an almost maximal example.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n4.4 tmap_style\nMaking the map look like something out of Indiana Jones\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\ntmap style set to \"classic\"\n\n\nother available styles are: \"white\", \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"watercolor\" \n\n\n\n\n\n\n\n\n\n\n\n4.5 Cartographic Furniture\nThings like the scale bar, compass and grid\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\nReset the Style\n\ntmap_style(\"white\")\n\ntmap style set to \"white\"\n\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\""
  },
  {
    "objectID": "HandsOnEx/HE2/HE2.html#small-multiples",
    "href": "HandsOnEx/HE2/HE2.html#small-multiples",
    "title": "Hands-On Exercise 2: GeoVisualisation and Analytical Mapping",
    "section": "5.0 Small Multiples",
    "text": "5.0 Small Multiples\n\n5.1 Same Map, Different Variables/Columns\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\ntmap style set to \"white\"\n\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\n\n\n\n\n\n\n\n\nSecond example with different colours. Very nice to compare.\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n\n5.2 Facets\nPlot small maps, each representing subsections of the overall map.\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\nWarning: The argument drop.shapes has been renamed to drop.units, and is\ntherefore deprecated\n\n\n\n\n\n\n\n\n\n\n\n5.3 Multiple, Standalone Maps\nCreate the maps first, then arrange them in a grid-like fashion with tmap_arrange\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n5.4 Selection Criteria\nUse a selection function to map objects meeting the selection criteria. Good alternative to small multiples\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\nWarning in pre_process_gt(x, interactive = interactive, orig_crs =\ngm$shape.orig_crs): legend.width controls the width of the legend within a map.\nPlease use legend.outside.size to control the width of the outside legend\n\n\n\n\n\n\n\n\n\n\nSome Experimentation\n\nhead(mpsz_pop2020)\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 24468.89 ymin: 28369.47 xmax: 32362.39 ymax: 30542.74\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n6        6          7 ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6         BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n    Y_ADDR SHAPE_Leng SHAPE_Area              PA YOUNG ECONOMY ACTIVE AGED\n1 29220.19   5267.381  1630379.3            &lt;NA&gt;    NA             NA   NA\n2 29782.05   3506.107   559816.2          OUTRAM  1200           2860 2120\n3 29974.66   1740.926   160807.5 SINGAPORE RIVER     0             40   10\n4 29933.77   3313.625   595428.9     BUKIT MERAH  3150           6900 3320\n5 30005.70   2825.594   387429.4     BUKIT MERAH  2900           6020 1740\n6 29991.38   4428.913  1030378.8     BUKIT MERAH  3340           6800 3420\n  TOTAL DEPENDENCY                       geometry\n1    NA         NA MULTIPOLYGON (((31495.56 30...\n2  6180  1.1608392 MULTIPOLYGON (((29092.28 30...\n3    50  0.2500000 MULTIPOLYGON (((29932.33 29...\n4 13370  0.9376812 MULTIPOLYGON (((27131.28 30...\n5 10660  0.7707641 MULTIPOLYGON (((26451.03 30...\n6 13560  0.9941176 MULTIPOLYGON (((25899.7 297...\n\n\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$PLN_AREA_N==\"YISHUN\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Reds\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n    tm_layout(main.title = \"Distribution of Dependency Ratio in Yishun (Quantile)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = TRUE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\nWarning in pre_process_gt(x, interactive = interactive, orig_crs =\ngm$shape.orig_crs): legend.width controls the width of the legend within a map.\nPlease use legend.outside.size to control the width of the outside legend"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Geospatial Analytics and Applications",
    "section": "",
    "text": "Welcome to my IS415 Geospatial Analytics and Applications website! This website documents my weekly learning, progress and notes. I hope this will be as useful to you as it was to me!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn-Class Exercise 3: Kernel Density Estimation\n\n\n\n\n\n\nIn-class Exercise\n\n\n\nIn-class exercise 3 \n\n\n\n\n\nJan 22, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\n\n\n\n\n\n\nIn-Class Exercise 3.1: Kernel Density Estimation\n\n\n\n\n\n\nIn-class Exercise\n\n\n\nIn-class exercise 3.1 \n\n\n\n\n\nJan 22, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\n\n\n\n\n\n\nTake-Home Exercise 1\n\n\n\n\n\n\nTake-Home Exercise\n\n\n\nTake-Home Exercise 1 \n\n\n\n\n\nJan 19, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\n\n\n\n\n\n\nTake-Home Exercise 1\n\n\n\n\n\n\nTake-Home Exercise\n\n\n\nTake-Home Exercise 1 \n\n\n\n\n\nJan 19, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\n\n\n\n\n\n\nHands-On Exercise 3: 1st & 2nd Order Spatial Point Patterns Analysis Methods\n\n\n\n\n\n\nHands-On Exercise\n\n\nsf\n\n\ntmap\n\n\nspatstat\n\n\nraster\n\n\nmaptools\n\n\n\nExploring spatial point patterns and methods to identify and analyse these patterns. First-order methods include kernel density estimation and bandwidth selection methods while second-order methods include F, G, K and L functions. \n\n\n\n\n\nJan 18, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\n\n\n\n\n\n\nIn-Class Exercise 2\n\n\n\n\n\n\nIn-class Exercise\n\n\n\nIn-class exercise 2 description \n\n\n\n\n\nJan 15, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\n\n\n\n\n\n\nHands-On Exercise 2: GeoVisualisation and Analytical Mapping\n\n\n\n\n\n\nHands-On Exercise\n\n\ntidyverse\n\n\nsf\n\n\ntmap\n\n\n\nI’m going to learn how to plot meaningfully annotated maps called choropleth maps. \n\n\n\n\n\nJan 11, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\n\n\n\n\n\n\nHands-On Exercise 1: Geospatial Data Science with R\n\n\n\n\n\n\nHands-On Exercise\n\n\ntidyverse\n\n\nsf\n\n\nggplot2\n\n\n\nThis is my first go at R programming. I tried out pacman, sf, tidyverse and ggplot2. I’m going to be using ggplot2 more, it makes really cool graphics. \n\n\n\n\n\nJan 7, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\n\n\n\n\n\n\nAbout me\n\n\n\n\n\n\nOthers\n\n\n\n“I’m Matthew Ho, a Y3 CS student in the Cyberphysical Systems track. I hope to learn about geospatial analytics and apply this to distributed IoT systems.” \n\n\n\n\n\nJan 6, 2024\n\n\nMatthew Ho\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About me",
    "section": "",
    "text": "I’m Matthew Ho, a Y3 CS student in the Cyberphysical Systems track. I hope to learn about geospatial analytics and apply this to distributed IoT systems."
  },
  {
    "objectID": "about.html#about-me",
    "href": "about.html#about-me",
    "title": "About me",
    "section": "",
    "text": "I’m Matthew Ho, a Y3 CS student in the Cyberphysical Systems track. I hope to learn about geospatial analytics and apply this to distributed IoT systems."
  },
  {
    "objectID": "about.html#this-website",
    "href": "about.html#this-website",
    "title": "About me",
    "section": "This Website",
    "text": "This Website\nThis website provides more visually appealing and consolidated insights into my geospatial analytics learnings."
  },
  {
    "objectID": "InClassEx/ICE3/ICE3.html",
    "href": "InClassEx/ICE3/ICE3.html",
    "title": "In-Class Exercise 3: Kernel Density Estimation",
    "section": "",
    "text": "Points as events, relates to activities\nIssues with points: Highly affected by the size of the ‘dots’. KDE is more consistent\nThe points MUST be a population. Cannot be a sample or we will have sample bias.\n\n\n\n\n\nChoose bandwidth\nChoose a kernel\n\n\n\n\n\nConstrained by network\n\n\n\n\n\nAccounts for both time and location"
  },
  {
    "objectID": "InClassEx/ICE3/ICE3.html#simple-visualisations",
    "href": "InClassEx/ICE3/ICE3.html#simple-visualisations",
    "title": "In-Class Exercise 3: Kernel Density Estimation",
    "section": "2.0 Simple Visualisations",
    "text": "2.0 Simple Visualisations\n\nplot(mpsz_sf)\n\n\n\n\n\n\n\n\n\ntmap_mode('view')\ntm_shape(childcare_sf) +\n  tm_dots(alpha=0.4, \n          size=0.05)\n\n\n\n\ntmap_mode('plot')\n\n\n2.1 Plot the ppp object within the owin\n\nplot(childcare_ppp[sg_owin])\n\n\n\n\n\n\n\n\n\n\n2.2 Using the filter method\n\npg = mpsz_sf %&gt;% filter(PLN_AREA_N == \"PUNGGOL\")\ntm = mpsz_sf %&gt;% filter(PLN_AREA_N == \"TAMPINES\")\nck = mpsz_sf %&gt;% filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw = mpsz_sf %&gt;% filter(PLN_AREA_N == \"JURONG WEST\")\n\n\nExtras\n\npar(mfrow=c(2,2))\nplot(pg[\"SUBZONE_N\"])\n\n\n\n\n\n\n\nplot(tm[\"SUBZONE_N\"])\n\n\n\n\n\n\n\nplot(ck[\"SUBZONE_N\"])\n\n\n\n\n\n\n\nplot(jw[\"SUBZONE_N\"])"
  },
  {
    "objectID": "InClassEx/ICE3/ICE3.html#setup",
    "href": "InClassEx/ICE3/ICE3.html#setup",
    "title": "In-Class Exercise 3: Kernel Density Estimation",
    "section": "1.0 Setup",
    "text": "1.0 Setup\n\n1.1 Dependencies\n\npacman::p_load(tidyverse, sf, tmap, maptools, spatstat, raster)\n\n\n\n1.2 Importing and Changing CRS\n\nchildcare_sf &lt;- st_read(\"data/geospatial/ChildCareServices.geojson\") %&gt;% \n  st_transform(crs=3414)\n\nReading layer `ChildCareServices' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/InClassEx/ICE3/data/geospatial/ChildCareServices.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\nmpsz_sf &lt;- st_read(dsn = \"data/geospatial/\", layer=\"MP14_SUBZONE_WEB_PL\") %&gt;%\n  st_transform(crs=3414)\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/InClassEx/ICE3/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nst_crs(childcare_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\nst_crs(mpsz_sf)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n1.3 Deriving Coastal Outline\n\nsg_sf &lt;- st_union(mpsz_sf)\n\n\nImportant: 1 Liner conversion\n\nchildcare_ppp &lt;- as.ppp(childcare_sf)\nsummary(childcare_ppp)\n\nMarked planar point pattern:  1545 points\nAverage intensity 1.91145e-06 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n     1545 character character \n\nWindow: rectangle = [11203.01, 45404.24] x [25667.6, 49300.88] units\n                    (34200 x 23630 units)\nWindow area = 808287000 square units\n\n\n\n\n\n1.4 Removing Duplicates\n\nany(duplicated(childcare_ppp))\n\n[1] FALSE\n\nchildcare_ppp_jit &lt;- rjitter(childcare_ppp, \n                             retry=TRUE, \n                             nsim=1, \n                             drop=TRUE)\n\nany(duplicated(childcare_ppp_jit))\n\n[1] FALSE\n\n\n\nAnother one-liner\n\nsg_owin &lt;- as.owin(sg_sf, \"owin\")\nsg_owin\n\nwindow: polygonal boundary\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units"
  },
  {
    "objectID": "InClassEx/ICE3/ICE3.html#section",
    "href": "InClassEx/ICE3/ICE3.html#section",
    "title": "In-Class Exercise 3: Kernel Density Estimation",
    "section": "3.0",
    "text": "3.0"
  },
  {
    "objectID": "InClassEx/ICE3/ICE3.html#class-notes",
    "href": "InClassEx/ICE3/ICE3.html#class-notes",
    "title": "In-Class Exercise 3: Kernel Density Estimation",
    "section": "",
    "text": "Points as events, relates to activities\nIssues with points: Highly affected by the size of the ‘dots’. KDE is more consistent\nThe points MUST be a population. Cannot be a sample or we will have sample bias.\n\n\n\n\n\nChoose bandwidth\nChoose a kernel\n\n\n\n\n\nConstrained by network\n\n\n\n\n\nAccounts for both time and location"
  },
  {
    "objectID": "InClassEx/ICE3/ICE3_1.html",
    "href": "InClassEx/ICE3/ICE3_1.html",
    "title": "In-Class Exercise 3.1: Kernel Density Estimation",
    "section": "",
    "text": "Points as events, relates to activities\nIssues with points: Highly affected by the size of the ‘dots’. KDE is more consistent\nThe points MUST be a population. Cannot be a sample or we will have sample bias.\n\n\n\n\n\nChoose bandwidth\nChoose a kernel\n\n\n\n\n\nConstrained by network\n\n\n\n\n\nAccounts for both time and location"
  },
  {
    "objectID": "InClassEx/ICE3/ICE3_1.html#class-notes",
    "href": "InClassEx/ICE3/ICE3_1.html#class-notes",
    "title": "In-Class Exercise 3.1: Kernel Density Estimation",
    "section": "",
    "text": "Points as events, relates to activities\nIssues with points: Highly affected by the size of the ‘dots’. KDE is more consistent\nThe points MUST be a population. Cannot be a sample or we will have sample bias.\n\n\n\n\n\nChoose bandwidth\nChoose a kernel\n\n\n\n\n\nConstrained by network\n\n\n\n\n\nAccounts for both time and location"
  },
  {
    "objectID": "InClassEx/ICE3/ICE3_1.html#setup",
    "href": "InClassEx/ICE3/ICE3_1.html#setup",
    "title": "In-Class Exercise 3.1: Kernel Density Estimation",
    "section": "1.0 Setup",
    "text": "1.0 Setup\n\n1.1 Dependencies\n\npacman::p_load(sf, spNetwork, tmap, classInt, viridis, tidyverse)\n\n\n\n1.2 Importing and Changing CRS\n\nnetwork &lt;- st_read(dsn=\"data/geospatial\", layer=\"Punggol_St\")\n\nReading layer `Punggol_St' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/InClassEx/ICE3/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2642 features and 2 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 34038.56 ymin: 40941.11 xmax: 38882.85 ymax: 44801.27\nProjected CRS: SVY21 / Singapore TM\n\nchildcare &lt;- st_read(dsn=\"data/geospatial\", layer=\"Punggol_CC\")\n\nReading layer `Punggol_CC' from data source \n  `/Users/matthewho/Work/Y3S2/IS415/Website/IS415/InClassEx/ICE3/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 61 features and 1 field\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 34423.98 ymin: 41503.6 xmax: 37619.47 ymax: 44685.77\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\n\n\n\ntmap_mode('view')\ntm_shape(childcare) +\n  tm_dots() +\n  tm_shape(network) +\n  tm_lines()\n\n\n\n\ntmap_mode('plot')\n\n\nMindist = 0.5 * first param\n\nlixels &lt;- lixelize_lines(network, 750, mindist = 375)\n\n\nsamples &lt;- lines_center(lixels)\n\n\ndensities &lt;- nkde(network, \n                  events=childcare, \n                  w=rep(1, nrow(childcare)), \n                  samples=samples, \n                  kernel_name=\"quartic\", \n                  bw=300, div=\"bw\", \n                  method=\"simple\", \n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1), \n                  max_depth = 8, \n                  agg=5, \n                  sparse=TRUE, \n                  verbose = FALSE)\n\n\nsamples$density &lt;- densities\nlixels$density &lt;- densities\n\n\nsamples$density &lt;- samples$density*1000\nlixels$density &lt;- lixels$density*1000\n\n\ntmap_mode('view')\ntm_shape(lixels) + \n  tm_lines(col=\"density\") + \ntm_shape(childcare) + \n  tm_dots()\n\n\n\n\ntmap_mode('plot')"
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#kde",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#kde",
    "title": "Take-Home Exercise 1",
    "section": "4.0 KDE",
    "text": "4.0 KDE\nAfter all the wrangling, we can finally see our Kernel Density Estimates for origin and destinations! I first tried the quartic kernel with an automatically decided bandwidth, but realised that apart from Changi Airport, the rest of Singapore seemed dark.\n\nOriginsDestinations\n\n\n\norigin_ppp.km &lt;- rescale(origin_ppp, 1000, \"km\")\n\norigin.bw &lt;- density(origin_ppp.km,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"quartic\") \nplot(origin.bw)\n\n\n\n\n\n\n\n\n\n\n\ndestination_ppp.km &lt;- rescale(destination_ppp, 1000, \"km\")\n\ndestination.bw &lt;- density(destination_ppp.km,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"quartic\") \nplot(destination.bw)\n\n\n\n\n\n\n\n\n\n\n\nI then tried the more gently sloping Gaussian kernel, to little effect.\n\nOriginsDestinations\n\n\n\norigin_ppp.km &lt;- rescale(origin_ppp, 1000, \"km\")\n\norigin.bw &lt;- density(origin_ppp.km,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(origin.bw)\n\n\n\n\n\n\n\n\n\n\n\ndestination_ppp.km &lt;- rescale(destination_ppp, 1000, \"km\")\n\ndestination.bw &lt;- density(destination_ppp.km,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(destination.bw)\n\n\n\n\n\n\n\n\n\n\n\nI decided to check the bandwidth derived with the Diggle algorithm, which was surprisingly small, at 8m. I strongly suspect this to be caused by Changi airport, where a huge number of Grab trips start and end at the same few small dropoff/pickup points.\n\nbw &lt;- bw.diggle(destination_ppp.km)\nbw\n\n      sigma \n0.008286046 \n\nbw &lt;- bw.ppl(destination_ppp.km)\nbw\n\n    sigma \n0.1826625 \n\n\nI then tried the PPL algorithm’s bandwidth, which did not have a significant effect either.\n\nOriginsDestinations\n\n\n\norigin_ppp.km &lt;- rescale(origin_ppp, 1000, \"km\")\n\norigin.bw &lt;- density(origin_ppp.km,\n                              sigma=bw.ppl,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(origin.bw)\n\n\n\n\n\n\n\n\n\n\n\ndestination_ppp.km &lt;- rescale(destination_ppp, 1000, \"km\")\n\ndestination.bw &lt;- density(destination_ppp.km,\n                              sigma=bw.ppl,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(destination.bw)\n\n\n\n\n\n\n\n\n\n\n\nI then tried to manually set a higher bandwidth in hopes of illuminating the map more.\n\nOriginsDestinations\n\n\n\nsigm &lt;- 0.5\norigin_ppp.km &lt;- rescale(origin_ppp, 1000, \"km\")\n\norigin.bw &lt;- density(origin_ppp.km,\n                              sigma=sigm,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(origin.bw)\n\n\n\n\n\n\n\n\n\n\n\ndestination_ppp.km &lt;- rescale(destination_ppp, 1000, \"km\")\n\ndestination.bw &lt;- density(destination_ppp.km,\n                              sigma=sigm,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(destination.bw)\n\n\n\n\n\n\n\n\n\n\n\n\nKDE Insights\nFrom these KDE maps, I observed\n\nChangi Airport and the CBD are frequently the origin and destination for Grab trips\nInterestingly, the maps are different. It seems that there are more trips from presumably more residential areas such as the West and North to the CBD than the other way round. Perhaps people use grab when they are in a rush to get to work and take their time on the way home with public transport.\nIn both the origin and destination KDEs, there is a hotspot in the north, slightly to the west. That could correspond to the Woodlands checkpoint"
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#nkde",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#nkde",
    "title": "Take-Home Exercise 1",
    "section": "5.0 NKDE",
    "text": "5.0 NKDE\n\nStudy Areas\nIn the MPSZ dataset, some areas are conveniently segmented by PLN_AREA, making it easy to extract areas of interest. From the KDE results above, we ca choose several of the interesting zones below for NKDE.\n\nCHANGI: For the airport\nWOODLANDS: For the checkpoint and residential areas\nDOWNTOWN CORE, ORCHARD: The CBD and “town” area\n\n\nsort(unique(mpsz$PLN_AREA_N))\n\n [1] \"ANG MO KIO\"              \"BEDOK\"                  \n [3] \"BISHAN\"                  \"BOON LAY\"               \n [5] \"BUKIT BATOK\"             \"BUKIT MERAH\"            \n [7] \"BUKIT PANJANG\"           \"BUKIT TIMAH\"            \n [9] \"CENTRAL WATER CATCHMENT\" \"CHANGI\"                 \n[11] \"CHANGI BAY\"              \"CHOA CHU KANG\"          \n[13] \"CLEMENTI\"                \"DOWNTOWN CORE\"          \n[15] \"GEYLANG\"                 \"HOUGANG\"                \n[17] \"JURONG EAST\"             \"JURONG WEST\"            \n[19] \"KALLANG\"                 \"LIM CHU KANG\"           \n[21] \"MANDAI\"                  \"MARINA EAST\"            \n[23] \"MARINA SOUTH\"            \"MARINE PARADE\"          \n[25] \"MUSEUM\"                  \"NEWTON\"                 \n[27] \"NORTH-EASTERN ISLANDS\"   \"NOVENA\"                 \n[29] \"ORCHARD\"                 \"OUTRAM\"                 \n[31] \"PASIR RIS\"               \"PAYA LEBAR\"             \n[33] \"PIONEER\"                 \"PUNGGOL\"                \n[35] \"QUEENSTOWN\"              \"RIVER VALLEY\"           \n[37] \"ROCHOR\"                  \"SELETAR\"                \n[39] \"SEMBAWANG\"               \"SENGKANG\"               \n[41] \"SERANGOON\"               \"SIMPANG\"                \n[43] \"SINGAPORE RIVER\"         \"SOUTHERN ISLANDS\"       \n[45] \"STRAITS VIEW\"            \"SUNGEI KADUT\"           \n[47] \"TAMPINES\"                \"TANGLIN\"                \n[49] \"TENGAH\"                  \"TOA PAYOH\"              \n[51] \"TUAS\"                    \"WESTERN ISLANDS\"        \n[53] \"WESTERN WATER CATCHMENT\" \"WOODLANDS\"              \n[55] \"YISHUN\"                 \n\n\n\n\n5.1 Changi Airport\n\nNKDE Data Preparation\nFirst, we restrict the area of our NKDE to CHANGI. We can also remove the possibility of small rocks or outer islands on the map by taking the intersection with merged_sg (Our outline).\nNext, we take only the roads that come into contact with Changi. I did not use st_intersection alone because it cut off some roads into points, and other undesirable geometry. This means that our subset of roads may protrude out of Changi, but that can be solved with the NKDE functions’s study_area parameter and edge correction.\n\nmpsz_changi = mpsz %&gt;% filter(PLN_AREA_N==\"CHANGI\")\nmpsz_changi &lt;- st_intersection(mpsz_changi, merged_sg)\n\nosm_changi_i &lt;- st_intersection(osm_sg, mpsz_changi)\nosm_changi_idxs &lt;- as.numeric(osm_changi_i$osm_id)\nosm_changi &lt;- osm_sg[osm_sg$osm_id %in% osm_changi_idxs, ]\n\nplot(osm_changi)\n\n\n\n\n\n\n\n\nWe also need to take only the events that happened within Changi. We do this with st_intersection. This is much easier since the events are points.\n\nDestinations w/o SnapOrigins w/o SnapDestinations w/ SnapOrigins w/ Snap\n\n\n\ndestination_df.changi = st_intersection(destination_df, mpsz_changi)\norigin_df.changi = st_intersection(origin_df, mpsz_changi)\n\nplot(destination_df.changi)\n\n\n\n\n\n\n\n\n\n\n\nplot(origin_df.changi)\n\n\n\n\n\n\n\n\nAs part of NKDE, the events need to have happened on the network. As such, we use snapPointsToLines2 to ensure that the points are on the network. Points off the network may have occurred due to slight GPS drift.\n\n\n\norigin_df.changi.snapped = snapPointsToLines2(origin_df.changi, osm_changi)\ndestination_df.changi.snapped = snapPointsToLines2(destination_df.changi, osm_changi)\n\nplot(destination_df.changi.snapped)\n\n\n\n\n\n\n\n\n\n\n\nplot(origin_df.changi.snapped)\n\n\n\n\n\n\n\n\n\n\n\nWith our points on the network and study area constrained, we can visualise the events at Changi, especially the airport.\n\ntm_shape(osm_changi) + \n  tm_lines() +\ntm_shape(destination_df.changi.snapped) +\n  tm_dots(col = \"red\")\n\n\n\n\n\n\n\n\n\n\nNKDE Calculation\n\nlixels &lt;- lixelize_lines(osm_changi, 200, mindist = 100)\nsamples &lt;- lines_center(lixels)\n\n\ndensities.destination &lt;- nkde(osm_changi,\n                  events=destination_df.changi.snapped,\n                  w=rep(1, nrow(destination_df.changi.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_changi)\n\ndensities.origin &lt;- nkde(osm_changi,\n                  events=origin_df.changi.snapped,\n                  w=rep(1, nrow(origin_df.changi.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_changi)\n\n\nsamples$density.destination &lt;- densities.destination*1000\nlixels$density.destination &lt;- densities.destination*1000\n\nsamples$density.origin &lt;- densities.origin*1000\nlixels$density.origin &lt;- densities.origin*1000\n\nsamples2.origin &lt;- samples[order(samples$density.origin),]\nsamples2.destination &lt;- samples[order(samples$density.destination),]\n\nI tried a simple method taught in class to visualise the density of events on the road network at Changi. Unfortunately, the huge proportion of events at what is presumedly a dropoff point makes the rest of the area very light in comparison.\nHowever, it can be noted that a good portion of trips are ended along the road leading up to Changi. This is not visible in the origin.\nThis shows that travellers sometimes preferred to disembark and walk the remaining distance. This likely happens if there is a sufficiently dense traffic jam at the actual dropoff point to cause traffic to completely stop for long enough for passengers to disembark.\nOn the other hand, origins are typically constrained to the lawful pickup/dropoff area.\nI suspect that trips ended along the road before the pickup/dropoff area can be an indicator of bad traffic jams, because the riders would otherwise have no reason to disembark early.\n\nOriginsDestinations\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.origin\")\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.destination\")\n\n\n\n\n\n\n\n\n\n\n\nIn this alternative visualisation of NKDE at Changi, where the density steps are increasingly large, we can begin to see the other hotspots in the vicinity. When looking the magnitude of the lighter colors in the legend, we can see that these areas are nowhere near as dense as the pickup/dropoff area.\n\nNKDE Origins ChangiNKDE Destinations Changi\n\n\n\ncolorRamp &lt;- brewer.pal(n = 7, name = \"Spectral\")\ncolorRamp &lt;- rev(colorRamp)\n\ntm_shape(osm_changi) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.origin) + \n  tm_dots(\"density.origin\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Origins in Changi' , main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(osm_changi) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.destination) + \n  tm_dots(\"density.destination\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Destinations in Changi' , main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5.2 Woodlands and Woodlands Checkpoint\nBased on the KDE calculation, we noticed that the area near the Woodlands checkpoint the general Woodlands area was a hotspot for both trip starts and ends.\nFrom my anecdotal experience, I suspected that Grab rides from the checkpoint may not start very near to it.\nI found it difficult to get Grab rides directly outside the checkpoint during peak hours. Usually, commuters will take public buses to nearby areas before booking their rides home.\nHowever, I would like the number and maps to paint a clearer picture of where commuters start and end their grab rides.\n\nNKDE Data Preparation\nIn the map below, the checkpoint is clearly denoted by the cluster of parallel roads in the top left.\n\nmpsz_woodlands = mpsz %&gt;% filter(PLN_AREA_N==\"WOODLANDS\")\nmpsz_woodlands &lt;- st_intersection(mpsz_woodlands, merged_sg)\n\nosm_woodlands_i &lt;- st_intersection(osm_sg, mpsz_woodlands)\nosm_woodlands_idxs &lt;- as.numeric(osm_woodlands_i$osm_id)\nosm_woodlands &lt;- osm_sg[osm_sg$osm_id %in% osm_woodlands_idxs, ]\n\nplot(osm_woodlands)\n\n\n\n\n\n\n\n\nAs in the previous example at Changi, we snap the points to the network and constrain the study area.\n\ndestination_df.woodlands = st_intersection(destination_df, mpsz_woodlands)\norigin_df.woodlands = st_intersection(origin_df, mpsz_woodlands)\n\norigin_df.woodlands.snapped = snapPointsToLines2(origin_df.woodlands, osm_woodlands)\ndestination_df.woodlands.snapped = snapPointsToLines2(destination_df.woodlands, osm_woodlands)\n\nAs expected, few rides occur in the direct vicinity of the checkpoint.\n\ntm_shape(osm_woodlands) + \n  tm_lines() +\ntm_shape(destination_df.woodlands.snapped) +\n  tm_dots(col = \"red\")\n\n\n\n\n\n\n\n\n\n\nNKDE Calculation\nSince I want a sharper curve to more clearly identify hotspots on the network, I use a quartic kernel. When trying an adaptive bandwidth, only one hotspot was clearly identified. As such, I have set a static bandwidth.\n\nlixels &lt;- lixelize_lines(osm_woodlands, 200, mindist = 100)\nsamples &lt;- lines_center(lixels)\n\n\ndensities.destination &lt;- nkde(osm_woodlands,\n                  events=destination_df.woodlands.snapped,\n                  w=rep(1, nrow(destination_df.woodlands.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_woodlands)\n\ndensities.origin &lt;- nkde(osm_woodlands,\n                  events=origin_df.woodlands.snapped,\n                  w=rep(1, nrow(origin_df.woodlands.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_woodlands)\n\n\nsamples$density.destination &lt;- densities.destination*1000\nlixels$density.destination &lt;- densities.destination*1000\n\nsamples$density.origin &lt;- densities.origin*1000\nlixels$density.origin &lt;- densities.origin*1000\n\nsamples2.origin &lt;- samples[order(samples$density.origin),]\nsamples2.destination &lt;- samples[order(samples$density.destination),]\n\nFrom this NKDE map, we can already tell that more people use Grab to leave Woodlands than to come in. This applies to the residential areas as well, sufficiently far from the checkpoint.\n\nNKDE Origins WoodlandsNKDE Destinations Woodlands\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.origin\")\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.destination\")\n\n\n\n\n\n\n\n\n\n\n\nIn this alternative map, I can tell that my suspicion was wrong. While origins are more distributed than destinations in woodlands, a clear hotspot for origins can be identified right outside the checkpoint. This could mean that grab drivers and passengers are willing to brave the traffic jam for a grab ride.\nI was also surprised that there were no clear signs that passengers alighted prematurely from their rides to the checkpoint, as was the case at Changi airport. ::: {.panel-tabset} ## NKDE Origins Woodlands\n\ncolorRamp &lt;- brewer.pal(n = 7, name = \"Spectral\")\ncolorRamp &lt;- rev(colorRamp)\n\npar(mfrow=c(1,2))\n\ntm_shape(osm_woodlands) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.origin) + \n  tm_dots(\"density.origin\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Origins in Woodlands' , main.title.size = 1)"
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#tnkde",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#tnkde",
    "title": "Take-Home Exercise 1",
    "section": "6.0 TNKDE",
    "text": "6.0 TNKDE\n\n6.1 Changi Airport\nFrom the NKDE in Changi, we were able to see that the airport road had enough legally questionable dropoffs along the road to the airport during periods of congestion. It is possible that not every jam in Changi airport will cause this phenomenon.\nFrom the TNKDE, we can see that drivers need to be careful around the clock, but less so from 8pm-11pm, since there will be travelers alighting where they may not be allowed to.\nHowever, this could also be an illusion caused by grab drivers pressing the button to end their trip slightly earlier to prepare to help travelers get their bags out the car.\n\ndestination_df.changi.snapped$end_hr &lt;- as.numeric(destination_df.changi.snapped$end_hr)\norigin_df.changi.snapped$start_hr &lt;- as.numeric(origin_df.changi.snapped$start_hr)\n\n\n\nShow the code\nlixels &lt;- lixelize_lines(osm_changi, 200, mindist = 100)\nsample_points &lt;- lines_center(lixels)\n\nsample_time.destination &lt;- seq(min(destination_df.changi.snapped$end_hr), max(destination_df.changi.snapped$end_hr), 1)\nsample_time.origin &lt;- seq(min(origin_df.changi.snapped$start_hr), max(origin_df.changi.snapped$start_hr), 1)\n\ntnkde_densities.destination &lt;- tnkde(lines = osm_changi,\n                   events = destination_df.changi.snapped,\n                   time_field = \"end_hr\",\n                   w = rep(1, nrow(destination_df.changi.snapped)), \n                   samples_loc = sample_points,\n                   samples_time = sample_time.destination, \n                   kernel_name = \"quartic\",\n                   bw_net = 300, bw_time = 1,\n                   adaptive = TRUE,\n                   trim_bw_net = 900,\n                   trim_bw_time = 80,\n                   method = \"discontinuous\",\n                   div = \"bw\", max_depth = 10,\n                   digits = 2, tol = 0.01,\n                   agg = 15, grid_shape = c(1,1), \n                   verbose  = FALSE)\n\ntnkde_densities.origin &lt;- tnkde(lines = osm_changi,\n                   events = origin_df.changi.snapped,\n                   time_field = \"start_hr\",\n                   w = rep(1, nrow(origin_df.changi.snapped)), \n                   samples_loc = sample_points,\n                   samples_time = sample_time.origin, \n                   kernel_name = \"quartic\",\n                   bw_net = 300, bw_time = 1,\n                   adaptive = TRUE,\n                   trim_bw_net = 900,\n                   trim_bw_time = 80,\n                   method = \"discontinuous\",\n                   div = \"bw\", max_depth = 10,\n                   digits = 2, tol = 0.01,\n                   agg = 15, grid_shape = c(1,1), \n                   verbose  = FALSE)\n\nall_densities.destination &lt;- c(tnkde_densities.destination$k)\ncolor_breaks &lt;- classIntervals(all_densities.destination, n = 10, style = \"kmeans\")\n\nall_maps.destination &lt;- lapply(1:ncol(tnkde_densities.destination$k), function(i){\n  time &lt;- sample_time.destination[[i]]\n  \n  sample_points$density &lt;- tnkde_densities.destination$k[,i]\n  map1 &lt;- tm_shape(sample_points) + \n  tm_dots(col = \"density\", size = 0.01,\n          breaks = color_breaks$brks, palette = viridis(10)) + \n    tm_layout(legend.show=FALSE, main.title = paste(\"TNKDE OF GRAB TRIP DESTINATIONS @ CHANGI\", time, \":00\"), main.title.size = 0.5)\n  return(map1)\n})\n\ntmap_animation(all_maps.destination, filename = \"images/tnkde_destination_changi.gif\", \n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\nall_densities.origin &lt;- c(tnkde_densities.origin$k)\ncolor_breaks.origin &lt;- classIntervals(all_densities.origin, n = 10, style = \"kmeans\")\n\nall_maps.origin&lt;- lapply(1:ncol(tnkde_densities.origin$k), function(i){\n  time &lt;- sample_time.origin[[i]]\n  \n  sample_points$density &lt;- tnkde_densities.origin$k[,i]\n  map1 &lt;- tm_shape(sample_points) + \n  tm_dots(col = \"density\", size = 0.01,\n          breaks = color_breaks.origin$brks, palette = viridis(10)) + \n    tm_layout(legend.show=FALSE, main.title = paste(\"TNKDE OF GRAB TRIP ORIGINS @ CHANGI\", time, \":00\"), main.title.size = 0.5)\n  return(map1)\n})\n\ntmap_animation(all_maps.destination, filename = \"images/tnkde_origin_changi.gif\", \n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\n\n \n\n\n6.2 Woodlands\n\ndestination_df.woodlands.snapped$end_hr &lt;- as.numeric(destination_df.woodlands.snapped$end_hr)\norigin_df.woodlands.snapped$start_hr &lt;- as.numeric(origin_df.woodlands.snapped$start_hr)\n\n\n\nShow the code\nlixels &lt;- lixelize_lines(osm_woodlands, 200, mindist = 100)\nsample_points &lt;- lines_center(lixels)\n\nsample_time.destination &lt;- seq(min(destination_df.woodlands.snapped$end_hr), max(destination_df.woodlands.snapped$end_hr), 1)\nsample_time.origin &lt;- seq(min(origin_df.woodlands.snapped$start_hr), max(origin_df.woodlands.snapped$start_hr), 1)\n\ntnkde_densities.destination &lt;- tnkde(lines = osm_woodlands,\n                   events = destination_df.woodlands.snapped,\n                   time_field = \"end_hr\",\n                   w = rep(1, nrow(destination_df.woodlands.snapped)), \n                   samples_loc = sample_points,\n                   samples_time = sample_time.destination, \n                   kernel_name = \"quartic\",\n                   bw_net = 300, bw_time = 1,\n                   adaptive = TRUE,\n                   trim_bw_net = 900,\n                   trim_bw_time = 80,\n                   method = \"discontinuous\",\n                   div = \"bw\", max_depth = 10,\n                   digits = 2, tol = 0.01,\n                   agg = 15, grid_shape = c(1,1), \n                   verbose  = FALSE)\n\ntnkde_densities.origin &lt;- tnkde(lines = osm_woodlands,\n                   events = origin_df.woodlands.snapped,\n                   time_field = \"start_hr\",\n                   w = rep(1, nrow(origin_df.woodlands.snapped)), \n                   samples_loc = sample_points,\n                   samples_time = sample_time.origin, \n                   kernel_name = \"quartic\",\n                   bw_net = 300, bw_time = 1,\n                   adaptive = TRUE,\n                   trim_bw_net = 900,\n                   trim_bw_time = 80,\n                   method = \"discontinuous\",\n                   div = \"bw\", max_depth = 10,\n                   digits = 2, tol = 0.01,\n                   agg = 15, grid_shape = c(1,1), \n                   verbose  = FALSE)\n\nall_densities.origin &lt;- c(tnkde_densities.origin$k)\ncolor_breaks &lt;- classIntervals(all_densities.origin, n = 10, style = \"kmeans\")\n\nall_maps.origin &lt;- lapply(1:ncol(tnkde_densities.origin$k), function(i){\n  time &lt;- sample_time.origin[[i]]\n  \n  sample_points$density &lt;- tnkde_densities.origin$k[,i]\n  map1 &lt;- tm_shape(sample_points) + \n  tm_dots(col = \"density\", size = 0.01,\n          breaks = color_breaks$brks, palette = viridis(10)) + \n    tm_layout(legend.show=FALSE, main.title = paste(\"TNKDE OF GRAB TRIP ORIGINS @ WOODLANDS\", time, \":00\"), main.title.size = 0.5)\n  return(map1)\n})\n\ntmap_animation(all_maps.destination, filename = \"images/tnkde_destination_woodlands.gif\", \n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\nall_densities.destination &lt;- c(tnkde_densities.destination$k)\ncolor_breaks.destination &lt;- classIntervals(all_densities.destination, n = 10, style = \"kmeans\")\n\nall_maps.destination&lt;- lapply(1:ncol(tnkde_densities.destination$k), function(i){\n  time &lt;- sample_time.destination[[i]]\n  \n  sample_points$density &lt;- tnkde_densities.destination$k[,i]\n  map1 &lt;- tm_shape(sample_points) + \n  tm_dots(col = \"density\", size = 0.01,\n          breaks = color_breaks.destination$brks, palette = viridis(10)) + \n    tm_layout(legend.show=FALSE, main.title = paste(\"TNKDE OF GRAB TRIP DESTINATIONS @ WOODLANDS \", time, \":00\"), main.title.size = 0.5)\n  return(map1)\n})\n\ntmap_animation(all_maps.destination, filename = \"images/tnkde_destination_woodlands.gif\", \n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\n\n \n\n\n6.3 Downtown Core\n\ndestination_df.town.snapped$end_hr &lt;- as.numeric(destination_df.town.snapped$end_hr)\norigin_df.town.snapped$start_hr &lt;- as.numeric(origin_df.town.snapped$start_hr)\n\n\n\nShow the code\nlixels &lt;- lixelize_lines(osm_town, 200, mindist = 100)\nsample_points &lt;- lines_center(lixels)\n\nsample_time.destination &lt;- seq(min(destination_df.town.snapped$end_hr), max(destination_df.town.snapped$end_hr), 1)\nsample_time.origin &lt;- seq(min(origin_df.town.snapped$start_hr), max(origin_df.town.snapped$start_hr), 1)\n\ntnkde_densities.destination &lt;- tnkde(lines = osm_town,\n                   events = destination_df.town.snapped,\n                   time_field = \"end_hr\",\n                   w = rep(1, nrow(destination_df.town.snapped)), \n                   samples_loc = sample_points,\n                   samples_time = sample_time.destination, \n                   kernel_name = \"quartic\",\n                   bw_net = 300, bw_time = 1,\n                   adaptive = TRUE,\n                   trim_bw_net = 900,\n                   trim_bw_time = 80,\n                   method = \"discontinuous\",\n                   div = \"bw\", max_depth = 10,\n                   digits = 2, tol = 0.01,\n                   agg = 15, grid_shape = c(1,1), \n                   verbose  = FALSE)\n\ntnkde_densities.origin &lt;- tnkde(lines = osm_town,\n                   events = origin_df.town.snapped,\n                   time_field = \"start_hr\",\n                   w = rep(1, nrow(origin_df.town.snapped)), \n                   samples_loc = sample_points,\n                   samples_time = sample_time.origin, \n                   kernel_name = \"quartic\",\n                   bw_net = 300, bw_time = 1,\n                   adaptive = TRUE,\n                   trim_bw_net = 900,\n                   trim_bw_time = 80,\n                   method = \"discontinuous\",\n                   div = \"bw\", max_depth = 10,\n                   digits = 2, tol = 0.01,\n                   agg = 15, grid_shape = c(1,1), \n                   verbose  = FALSE)\n\nall_densities.origin &lt;- c(tnkde_densities.origin$k)\ncolor_breaks &lt;- classIntervals(all_densities.origin, n = 10, style = \"kmeans\")\n\nall_maps.origin &lt;- lapply(1:ncol(tnkde_densities.origin$k), function(i){\n  time &lt;- sample_time.origin[[i]]\n  \n  sample_points$density &lt;- tnkde_densities.origin$k[,i]\n  map1 &lt;- tm_shape(sample_points) + \n  tm_dots(col = \"density\", size = 0.01,\n          breaks = color_breaks$brks, palette = viridis(10)) + \n    tm_layout(legend.show=FALSE, main.title = paste(\"TNKDE OF GRAB TRIP ORIGINS @ DOWNTOWN CORE\", time, \":00\"), main.title.size = 0.5)\n  return(map1)\n})\n\ntmap_animation(all_maps.origin, filename = \"images/tnkde_origin_town.gif\", \n               width = 1000, height = 1000, dpi = 300, delay = 50)\n\n\n\nall_densities.destination &lt;- c(tnkde_densities.destination$k)\ncolor_breaks.destination &lt;- classIntervals(all_densities.destination, n = 10, style = \"kmeans\")\n\nall_maps.destination&lt;- lapply(1:ncol(tnkde_densities.destination$k), function(i){\n  time &lt;- sample_time.destination[[i]]\n  \n  sample_points$density &lt;- tnkde_densities.destination$k[,i]\n  map1 &lt;- tm_shape(sample_points) + \n  tm_dots(col = \"density\", size = 0.01,\n          breaks = color_breaks.destination$brks, palette = viridis(10)) + \n    tm_layout(legend.show=FALSE, main.title = paste(\"TNKDE OF GRAB TRIP DESTINATIONS @ DOWNTOWN CORE \", time, \":00\"), main.title.size = 0.5)\n  return(map1)\n})\n\ntmap_animation(all_maps.destination, filename = \"images/tnkde_destination_town.gif\", \n               width = 1000, height = 1000, dpi = 300, delay = 50)"
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#conclusions",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#conclusions",
    "title": "Take-Home Exercise 1",
    "section": "7.0 Conclusions",
    "text": "7.0 Conclusions\nThe Grab Posisi dataset has yielded many interesting insights with Spatial Point Analysis. From commuter behaviour and safety in Changi airport, finding out where people head to after arriving at the Woodlands checkpoint to embark on rides to cover their last miles home and the extent of congestion in the downtown core, spatial point analysis has proven itself to be a powerful too.\nIn terms of policy making, anecdotal evidence is not sufficient. Reported patterns through interviews may not truly reflect the patterns in crowded areas. Spatial Point Analysis can contribute heavily to the public good by identifying dangerous patterns, inefficiencies, and ways to facilitate life in a society that just wants to have dinner after work at Lau Pa Sat. Although the public may never know the full extent of the planning and analysis that goes on behind the scenes and drives decision making, NKDE and TNKDE maps help paint simple yet effective messages to build understanding and cohesion."
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#personal-learnings",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#personal-learnings",
    "title": "Take-Home Exercise 1",
    "section": "8.0 Personal Learnings",
    "text": "8.0 Personal Learnings\nThis exercise has been a rigorous and challenging introduction to r programming. Dealing with many issues related to data types, formats and other complexities associated with geospatial data.\nAlthough this exercise became very time consuming and frustrating at times, I believe that the next exercises will be much faster, having gone through extensive documentation and numerous roadblocks.\nUltimately, this has been a fun and interesting experience about finding patterns otherwise invisible to the naked eye."
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#destinations",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#destinations",
    "title": "Take-Home Exercise 1",
    "section": "Destinations",
    "text": "Destinations\n\ndestination_ppp.km &lt;- rescale(destination_ppp, 1000, \"km\")\n\ndestination.bw &lt;- density(destination_ppp.km,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"quartic\") \nplot(destination.bw)\n\n\n\n\n\n\n\n\n:::\nI then tried the more gently sloping Gaussian kernel, to little effect.\n\nOriginsDestinations\n\n\n\norigin_ppp.km &lt;- rescale(origin_ppp, 1000, \"km\")\n\norigin.bw &lt;- density(origin_ppp.km,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(origin.bw)\n\n\n\n\n\n\n\n\n\n\n\ndestination_ppp.km &lt;- rescale(destination_ppp, 1000, \"km\")\n\ndestination.bw &lt;- density(destination_ppp.km,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(destination.bw)\n\n\n\n\n\n\n\n\n\n\n\nI decided to check the bandwidth derived with the Diggle algorithm, which was surprisingly small, at 8m. I strongly suspect this to be caused by Changi airport, where a huge number of Grab trips start and end at the same few small dropoff/pickup points.\n\nbw &lt;- bw.diggle(destination_ppp.km)\nbw\n\n      sigma \n0.008286046 \n\nbw &lt;- bw.ppl(destination_ppp.km)\nbw\n\n    sigma \n0.1826625 \n\n\nI then tried the PPL algorithm’s bandwidth, which did not have a significant effect either.\n\nOriginsDestinations\n\n\n\norigin_ppp.km &lt;- rescale(origin_ppp, 1000, \"km\")\n\norigin.bw &lt;- density(origin_ppp.km,\n                              sigma=bw.ppl,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(origin.bw)\n\n\n\n\n\n\n\n\n\n\n\ndestination_ppp.km &lt;- rescale(destination_ppp, 1000, \"km\")\n\ndestination.bw &lt;- density(destination_ppp.km,\n                              sigma=bw.ppl,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(destination.bw)\n\n\n\n\n\n\n\n\n\n\n\nI then tried to manually set a higher bandwidth in hopes of illuminating the map more.\n\nOriginsDestinations\n\n\n\nsigm &lt;- 0.5\norigin_ppp.km &lt;- rescale(origin_ppp, 1000, \"km\")\n\norigin.bw &lt;- density(origin_ppp.km,\n                              sigma=sigm,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(origin.bw)\n\n\n\n\n\n\n\n\n\n\n\ndestination_ppp.km &lt;- rescale(destination_ppp, 1000, \"km\")\n\ndestination.bw &lt;- density(destination_ppp.km,\n                              sigma=sigm,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \nplot(destination.bw)\n\n\n\n\n\n\n\n\n\n\n\n\nKDE Insights\nFrom these KDE maps, I observed\n\nChangi Airport and the CBD are frequently the origin and destination for Grab trips\nInterestingly, the maps are different. It seems that there are more trips from presumably more residential areas such as the West and North to the CBD than the other way round. Perhaps people use grab when they are in a rush to get to work and take their time on the way home with public transport.\nIn both the origin and destination KDEs, there is a hotspot in the north, slightly to the west. That could correspond to the Woodlands checkpoint"
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#origins-wo-snap",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#origins-wo-snap",
    "title": "Take-Home Exercise 1",
    "section": "Origins w/o Snap",
    "text": "Origins w/o Snap\n\nplot(origin_df.changi)\n\n\n\n\n\n\n\n\nAs part of NKDE, the events need to have happened on the network. As such, we use snapPointsToLines2 to ensure that the points are on the network. Points off the network may have occurred due to slight GPS drift."
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#destinations-w-snap",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#destinations-w-snap",
    "title": "Take-Home Exercise 1",
    "section": "Destinations w/ Snap",
    "text": "Destinations w/ Snap\n\norigin_df.changi.snapped = snapPointsToLines2(origin_df.changi, osm_changi)\ndestination_df.changi.snapped = snapPointsToLines2(destination_df.changi, osm_changi)\n\nplot(destination_df.changi.snapped)"
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#origins-w-snap",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#origins-w-snap",
    "title": "Take-Home Exercise 1",
    "section": "Origins w/ Snap",
    "text": "Origins w/ Snap\n\nplot(origin_df.changi.snapped)\n\n\n\n\n\n\n\n\n:::\nWith our points on the network and study area constrained, we can visualise the events at Changi, especially the airport.\n\ntm_shape(osm_changi) + \n  tm_lines() +\ntm_shape(destination_df.changi.snapped) +\n  tm_dots(col = \"red\")\n\n\n\n\n\n\n\n\n\nNKDE Calculation\n\nlixels &lt;- lixelize_lines(osm_changi, 200, mindist = 100)\nsamples &lt;- lines_center(lixels)\n\n\ndensities.destination &lt;- nkde(osm_changi,\n                  events=destination_df.changi.snapped,\n                  w=rep(1, nrow(destination_df.changi.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_changi)\n\ndensities.origin &lt;- nkde(osm_changi,\n                  events=origin_df.changi.snapped,\n                  w=rep(1, nrow(origin_df.changi.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_changi)\n\n\nsamples$density.destination &lt;- densities.destination*1000\nlixels$density.destination &lt;- densities.destination*1000\n\nsamples$density.origin &lt;- densities.origin*1000\nlixels$density.origin &lt;- densities.origin*1000\n\nsamples2.origin &lt;- samples[order(samples$density.origin),]\nsamples2.destination &lt;- samples[order(samples$density.destination),]\n\nI tried a simple method taught in class to visualise the density of events on the road network at Changi. Unfortunately, the huge proportion of events at what is presumedly a dropoff point makes the rest of the area very light in comparison.\nHowever, it can be noted that a good portion of trips are ended along the road leading up to Changi. This is not visible in the origin.\nThis shows that travellers sometimes preferred to disembark and walk the remaining distance. This likely happens if there is a sufficiently dense traffic jam at the actual dropoff point to cause traffic to completely stop for long enough for passengers to disembark.\nOn the other hand, origins are typically constrained to the lawful pickup/dropoff area.\nI suspect that trips ended along the road before the pickup/dropoff area can be an indicator of bad traffic jams, because the riders would otherwise have no reason to disembark early.\n\nOriginsDestinations\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.origin\")\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.destination\")\n\n\n\n\n\n\n\n\n\n\n\nIn this alternative visualisation of NKDE at Changi, where the density steps are increasingly large, we can begin to see the other hotspots in the vicinity. When looking the magnitude of the lighter colors in the legend, we can see that these areas are nowhere near as dense as the pickup/dropoff area.\n\nNKDE Origins ChangiNKDE Destinations Changi\n\n\n\ncolorRamp &lt;- brewer.pal(n = 7, name = \"Spectral\")\ncolorRamp &lt;- rev(colorRamp)\n\ntm_shape(osm_changi) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.origin) + \n  tm_dots(\"density.origin\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Origins in Changi' , main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(osm_changi) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.destination) + \n  tm_dots(\"density.destination\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Destinations in Changi' , main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n5.2 Woodlands and Woodlands Checkpoint\nBased on the KDE calculation, we noticed that the area near the Woodlands checkpoint the general Woodlands area was a hotspot for both trip starts and ends.\nFrom my anecdotal experience, I suspected that Grab rides from the checkpoint may not start very near to it.\nI found it difficult to get Grab rides directly outside the checkpoint during peak hours. Usually, commuters will take public buses to nearby areas before booking their rides home.\nHowever, I would like the number and maps to paint a clearer picture of where commuters start and end their grab rides.\n\nNKDE Data Preparation\nIn the map below, the checkpoint is clearly denoted by the cluster of parallel roads in the top left.\n\nmpsz_woodlands = mpsz %&gt;% filter(PLN_AREA_N==\"WOODLANDS\")\nmpsz_woodlands &lt;- st_intersection(mpsz_woodlands, merged_sg)\n\nosm_woodlands_i &lt;- st_intersection(osm_sg, mpsz_woodlands)\nosm_woodlands_idxs &lt;- as.numeric(osm_woodlands_i$osm_id)\nosm_woodlands &lt;- osm_sg[osm_sg$osm_id %in% osm_woodlands_idxs, ]\n\nplot(osm_woodlands)\n\n\n\n\n\n\n\n\nAs in the previous example at Changi, we snap the points to the network and constrain the study area.\n\ndestination_df.woodlands = st_intersection(destination_df, mpsz_woodlands)\norigin_df.woodlands = st_intersection(origin_df, mpsz_woodlands)\n\norigin_df.woodlands.snapped = snapPointsToLines2(origin_df.woodlands, osm_woodlands)\ndestination_df.woodlands.snapped = snapPointsToLines2(destination_df.woodlands, osm_woodlands)\n\nAs expected, few rides occur in the direct vicinity of the checkpoint.\n\ntm_shape(osm_woodlands) + \n  tm_lines() +\ntm_shape(destination_df.woodlands.snapped) +\n  tm_dots(col = \"red\")\n\n\n\n\n\n\n\n\n\n\nNKDE Calculation\nSince I want a sharper curve to more clearly identify hotspots on the network, I use a quartic kernel. When trying an adaptive bandwidth, only one hotspot was clearly identified. As such, I have set a static bandwidth.\n\nlixels &lt;- lixelize_lines(osm_woodlands, 200, mindist = 100)\nsamples &lt;- lines_center(lixels)\n\n\ndensities.destination &lt;- nkde(osm_woodlands,\n                  events=destination_df.woodlands.snapped,\n                  w=rep(1, nrow(destination_df.woodlands.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_woodlands)\n\ndensities.origin &lt;- nkde(osm_woodlands,\n                  events=origin_df.woodlands.snapped,\n                  w=rep(1, nrow(origin_df.woodlands.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_woodlands)\n\n\nsamples$density.destination &lt;- densities.destination*1000\nlixels$density.destination &lt;- densities.destination*1000\n\nsamples$density.origin &lt;- densities.origin*1000\nlixels$density.origin &lt;- densities.origin*1000\n\nsamples2.origin &lt;- samples[order(samples$density.origin),]\nsamples2.destination &lt;- samples[order(samples$density.destination),]\n\nFrom this NKDE map, we can already tell that more people use Grab to leave Woodlands than to come in. This applies to the residential areas as well, sufficiently far from the checkpoint.\n\nNKDE Origins WoodlandsNKDE Destinations Woodlands\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.origin\")\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.destination\")\n\n\n\n\n\n\n\n\n\n\n\nIn this alternative map, I can tell that my suspicion was wrong. While origins are more distributed than destinations in woodlands, a clear hotspot for origins can be identified right outside the checkpoint. This could mean that grab drivers and passengers are willing to brave the traffic jam for a grab ride.\nI was also surprised that there were no clear signs that passengers alighted prematurely from their rides to the checkpoint, as was the case at Changi airport. ::: {.panel-tabset} ## NKDE Origins Woodlands\n\ncolorRamp &lt;- brewer.pal(n = 7, name = \"Spectral\")\ncolorRamp &lt;- rev(colorRamp)\n\npar(mfrow=c(1,2))\n\ntm_shape(osm_woodlands) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.origin) + \n  tm_dots(\"density.origin\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Origins in Woodlands' , main.title.size = 1)"
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#nkde-destinations-woodlands-1",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#nkde-destinations-woodlands-1",
    "title": "Take-Home Exercise 1",
    "section": "NKDE Destinations Woodlands",
    "text": "NKDE Destinations Woodlands\n\ntm_shape(osm_woodlands) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.destination) + \n  tm_dots(\"density.destination\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Destinations in Woodlands' , main.title.size = 1)\n\n\n\n\n\n\n\n\n:::\n\n5.3 Downtown\nThe downtown area is intuitively a slow, congested area during rush hours. In the KDE maps, the downtown area was consistently bright, indicating that many Grab rides started and ended there. In this segment I wanted to see if there were particular areas within the downtown core area that many commuters head to.\n\nNKDE Data Preparation\n\nmpsz_town = mpsz %&gt;% filter(PLN_AREA_N==\"DOWNTOWN CORE\")\nmpsz_town &lt;- st_intersection(mpsz_town, merged_sg)\n\nosm_town_i &lt;- st_intersection(osm_sg, mpsz_town)\nosm_town_idxs &lt;- as.numeric(osm_town_i$osm_id)\nosm_town &lt;- osm_sg[osm_sg$osm_id %in% osm_town_idxs, ]\n\n\ndestination_df.town = st_intersection(destination_df, mpsz_town)\norigin_df.town = st_intersection(origin_df, mpsz_town)\n\norigin_df.town.snapped = snapPointsToLines2(origin_df.town, osm_town)\ndestination_df.town.snapped = snapPointsToLines2(destination_df.town, osm_town)\n\n\ntm_shape(osm_town) + \n  tm_lines() +\ntm_shape(destination_df.town.snapped) +\n  tm_dots(col = \"red\")\n\n\n\n\n\n\n\n\n\n\nNKDE Calculation\n\nlixels &lt;- lixelize_lines(osm_town, 200, mindist = 100)\nsamples &lt;- lines_center(lixels)\n\n\ndensities.destination &lt;- nkde(osm_town,\n                  events=destination_df.town.snapped,\n                  w=rep(1, nrow(destination_df.town.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_town)\n\ndensities.origin &lt;- nkde(osm_town,\n                  events=origin_df.town.snapped,\n                  w=rep(1, nrow(origin_df.town.snapped)),\n                  samples=samples,\n                  kernel_name=\"quartic\",\n                  bw=500,\n                  div=\"bw\",\n                  method=\"simple\",\n                  digits=1,\n                  tol=1,\n                  grid_shape=c(1,1),\n                  max_depth = 8,\n                  agg=5,\n                  sparse=TRUE,\n                  verbose = FALSE,\n                  study_area = mpsz_town)\n\n\nsamples$density.destination &lt;- densities.destination*1000\nlixels$density.destination &lt;- densities.destination*1000\n\nsamples$density.origin &lt;- densities.origin*1000\nlixels$density.origin &lt;- densities.origin*1000\n\nsamples2.origin &lt;- samples[order(samples$density.origin),]\nsamples2.destination &lt;- samples[order(samples$density.destination),]\n\n\nNKDE Origins TownNKDE Destinations Town\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.origin\")\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(lixels) + \n  tm_lines(col=\"density.destination\")\n\n\n\n\n\n\n\n\n\n\n\nWhen observing the destinations map, it becomes clear that many intersections in the upper area, near Raffle’s city, become extremely packed with people on their way there. On the southern part of the map, roads near Marina Bay Financial centre also see a lot fo traffic from private hire vehicles.\nHowever, most interesting about these maps is that the origins in this map are primarily clustered around an area with high end office building and attractions, but nothing out of the ordinary relative to the surrounding area.\nIt might be possible that the area above Lau Pa Sat is used as an area to get a Grab ride after a meal, where smaller roads make it easier for cars to stop to pick up passengers.\n\nNKDE Origins TownNKDE Destinations Town\n\n\n\ncolorRamp &lt;- brewer.pal(n = 7, name = \"Spectral\")\ncolorRamp &lt;- rev(colorRamp)\n\npar(mfrow=c(1,2))\n\ntm_shape(osm_town) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.origin) + \n  tm_dots(\"density.origin\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Origins in Downtown Core' , main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(osm_town) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.destination) + \n  tm_dots(\"density.destination\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Destinations in Downtown Core' , main.title.size = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5.4 NKDE General Insights\nThe NKDE is very useful to visualise the impact of events on a network. In the case of traffic, more events likely correlates with more traffic, giving us insights on potentially impacted roads during peak hours. However, NKDE maps are limited by their ambiguous time frame. I would like to visualise smaller subsets of events corresponding to daily patterns, including meal times, commuting times, and perhaps post-nightlife rides back home.\nThat’s what I hope to learn from the TNKDE!"
  },
  {
    "objectID": "TakeHomeEx/TakeHomeEx1/THE1.html#nkde-destinations-town-1",
    "href": "TakeHomeEx/TakeHomeEx1/THE1.html#nkde-destinations-town-1",
    "title": "Take-Home Exercise 1",
    "section": "NKDE Destinations Town",
    "text": "NKDE Destinations Town\n\ntm_shape(osm_town) + \n  tm_lines(\"black\") + \n  tm_shape(samples2.destination) + \n  tm_dots(\"density.destination\", style = \"kmeans\", palette = colorRamp, n = 7, size = 0.1) + \n  tm_layout(legend.outside = TRUE, \n            main.title = 'NKDE of Grab Trip Destinations in Downtown Core' , main.title.size = 1)\n\n\n\n\n\n\n\n\n:::\n\n5.4 NKDE General Insights\nThe NKDE is very useful to visualise the impact of events on a network. In the case of traffic, more events likely correlates with more traffic, giving us insights on potentially impacted roads during peak hours. However, NKDE maps are limited by their ambiguous time frame. I would like to visualise smaller subsets of events corresponding to daily patterns, including meal times, commuting times, and perhaps post-nightlife rides back home.\nThat’s what I hope to learn from the TNKDE!"
  }
]